begin_compilation
  name " HotSpotCompilation-2104[java.util.HashMap.clear()]"
  method "HotSpotCompilation-2104[java.util.HashMap.clear()]"
  date 1714038178904
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1157 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a1157  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1195 ?17 ?7 v1196 v1197 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1157 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 11]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
=== Succesors ===
next: i1158 
=== Usages ===
a60 v1198 v1199 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - #next: i1158  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 866
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1157 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1158 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-16907|0xffffffffffffbdf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 35]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1198 
lastLocationAccess: - 
=== Succesors ===
next: i1159 
=== Usages ===
i185 v116 v72 j106 i125 i360 v163 v184 
=== Predecessor ===
a1157 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1198 lastLocationAccess: - #next: i1159  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1159 v56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1159 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
i5 
=== Predecessor ===
i1158 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1195 lastLocationAccess: - #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 v14 i32 i50 i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 6]
stamp: i32
=== Inputs ===
x: i1159 
y: i4 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1159 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.modCount
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: i1160 
=== Usages ===
=== Predecessor ===
i1159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1195 lastLocationAccess: - value: i5 stateAfter: - #next: i1160  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1160 v64 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1160 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 20]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
v14 
=== Predecessor ===
v56 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1160 
y: i4 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1160 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v137 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
i1160 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v137 #falseSuccessor: v138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 7]
sourceFile: HashMap.java
sourceLine: 867
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x65120669]: UnreachedCode@5[HotSpotMethod<HashMap.clear()>, 49]}
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 v72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.size
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 28]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
value: i13 
stateAfter: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - value: i13 stateAfter: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i13 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1158 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.016947388984342227
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v37 #falseSuccessor: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
v82 
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1158 
y: i124 
=== Succesors ===
=== Usages ===
j114 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1158 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i125 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i125  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1158 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j114 
y: j106 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j114 y: j106  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 11]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a1157 
=== Succesors ===
=== Usages ===
v1217 ?17 v1216 v1215 v1200 v1201 v1202 v1203 v1204 v1205 v1206 v1207 v1208 v1209 v1210 v1211 v1212 v1213 v1214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1157  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i185 v116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v1152 
falseSuccessor: v1155 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v1152 #falseSuccessor: v1155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1149 
=== Predecessor ===
v1152 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i76 
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1158 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v1153 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v1155 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v1153 #falseSuccessor: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1151  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1149 
=== Predecessor ===
v1153 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1150 v1151 
=== Succesors ===
next: v425 
=== Usages ===
v121 v177 v157 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1150 v1151 #next: v425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j380 
=== Usages ===
=== Predecessor ===
v1149 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j381 
=== Usages ===
v1218 v1220 v1221 
=== Predecessor ===
v425 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j381  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1157 
=== Succesors ===
=== Usages ===
v82 j381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1199 
=== Succesors ===
next: i411 
=== Usages ===
v1219 
=== Predecessor ===
j380 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1199 #next: i411  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j380 
index: - 
=== Succesors ===
=== Usages ===
i411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j380 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i411 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1218 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
v419 
=== Predecessor ===
j381 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1218 lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v419 v459 v500 v540 v580 v620 v660 v700 v740 v780 v820 v860 v900 v940 v980 v1020 v1060 v1100 v1141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i411 
y: i418 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i411 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j410 j451 j492 j532 j572 j612 j652 j692 j732 j772 j812 j852 j892 j932 j972 j1012 j1052 j1092 j1133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j406 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 v394 v761 v440 v1081 v481 v921 v521 v1041 v561 v801 v601 v1001 v641 v881 v681 v961 v721 v841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v419 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v383 
=== Usages ===
=== Predecessor ===
i411 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v419 #trueSuccessor: v384 #falseSuccessor: v383  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a412 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a412  <|@  <|@
f <@~|@floating>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j381 
index: - 
=== Succesors ===
=== Usages ===
a412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j381 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a412 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1219 
lastLocationAccess: - 
=== Succesors ===
next: v392 
=== Usages ===
a413 v420 
=== Predecessor ===
v383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1219 lastLocationAccess: - #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a412 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a412  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
a412 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v391 #falseSuccessor: v387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j414 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j414  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j380 
index: - 
=== Succesors ===
=== Usages ===
j414 v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j380 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1220 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
v394 j410 v1222 
=== Predecessor ===
v387 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1220 lastLocationAccess: - #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j406 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j414 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a413 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a412 
=== Succesors ===
=== Usages ===
j399 v402 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a412  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v394 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v395 
=== Usages ===
=== Predecessor ===
j414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v394 #trueSuccessor: v396 #falseSuccessor: v395  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a413 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a413 #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j415 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j415  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j380 
index: - 
=== Succesors ===
=== Usages ===
j415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j380 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j415 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
lastLocationAccess: - 
=== Succesors ===
next: j399 
=== Usages ===
v1222 
=== Predecessor ===
v395 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1221 lastLocationAccess: - #next: j399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a413 
=== Succesors ===
next: v416 
=== Usages ===
v416 
=== Predecessor ===
j415 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a413 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j415 
index: j414 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j415 index: j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
lastLocationAccess: - 
value: j399 
stateAfter: - 
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
j399 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 lastLocationAccess: - value: j399 stateAfter: - #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j414 
y: j409 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j414 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1220 
lastLocationAccess: - 
value: j410 
stateAfter: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1220 lastLocationAccess: - value: j410 stateAfter: - #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v388 v390 v401 v403 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v388 v390 v401 v403 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid a95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 v91 v154 v174 v198 v220 v227 v245 v252 v259 v265 v289 v296 v303 v309 v317 v323 v329 v335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v38 
address: v1199 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v38 address: v1199 lastLocationAccess: - value: a95 stateAfter: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i183 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1158 y: i183  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v184 
trueValue: i1158 
falseValue: i76 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v184 trueValue: i1158 falseValue: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v20 
values: i4 i32 
=== Succesors ===
=== Usages ===
i32 v24 v1200 i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v20 values: i4 i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.006139584328
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v19 
=== Succesors ===
next: v29 
=== Usages ===
i50 v26 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v19 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i185 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v28 #falseSuccessor: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
v121 
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j426 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j427 
=== Usages ===
v1223 v1225 v1226 
=== Predecessor ===
v465 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j427  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: i50 
=== Succesors ===
=== Usages ===
v91 j427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1200 
=== Succesors ===
next: i452 
=== Usages ===
v1224 
=== Predecessor ===
j426 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1200 #next: i452  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1223 
lastLocationAccess: - 
=== Succesors ===
next: v431 
=== Usages ===
v459 
=== Predecessor ===
j427 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1223 lastLocationAccess: - #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i452 
y: i418 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i452 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
i452 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v430 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a453 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a453  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
a453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a453 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
a454 v460 
=== Predecessor ===
v429 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1224 lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a453 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a453  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v433 
=== Usages ===
=== Predecessor ===
a453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v437 #falseSuccessor: v433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j455 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j455  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
j455 v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j455 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
v440 j451 v1227 
=== Predecessor ===
v433 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1225 lastLocationAccess: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j455 
y: j406 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j455 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a454 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a453 
=== Succesors ===
=== Usages ===
j445 v448 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a453  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v441 
=== Usages ===
=== Predecessor ===
j455 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v442 #falseSuccessor: v441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a454 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a454 #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v448 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
j456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1226 
lastLocationAccess: - 
=== Succesors ===
next: j445 
=== Usages ===
v1227 
=== Predecessor ===
v441 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1226 lastLocationAccess: - #next: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a454 
=== Succesors ===
next: v457 
=== Usages ===
v457 
=== Predecessor ===
j456 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a454 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j456 
index: j455 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: j455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1227 
lastLocationAccess: - 
value: j445 
stateAfter: - 
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
j445 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1227 lastLocationAccess: - value: j445 stateAfter: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j455 
y: j409 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j455 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
lastLocationAccess: - 
value: j451 
stateAfter: - 
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1225 lastLocationAccess: - value: j451 stateAfter: - #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v434 v436 v447 v449 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v434 v436 v447 v449 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1149 v28 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1149 v28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v121 
address: v1200 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v121 address: v1200 lastLocationAccess: - value: a95 stateAfter: - #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i50 
y: i4 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i50 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i1158 
y: i359 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1158 y: i359  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v142 
values: i50 i356 
=== Succesors ===
=== Usages ===
v143 j1166 v1201 i169 i356 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v142 values: i50 i356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 20
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.006139584328
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v158 
=== Succesors ===
next: v146 
=== Usages ===
v144 v148 i149 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v158 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i149 
y: i360 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i149 y: i360  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.7241671292960365
stamp: void
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v145 #falseSuccessor: v144  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
v157 
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j467 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j468 
=== Usages ===
v1228 v1230 v1231 
=== Predecessor ===
v506 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j468  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: i149 
=== Succesors ===
=== Usages ===
v154 j468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: i149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1201 
=== Succesors ===
next: i493 
=== Usages ===
v1229 
=== Predecessor ===
j467 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1201 #next: i493  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
i493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i493 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1228 
lastLocationAccess: - 
=== Succesors ===
next: v472 
=== Usages ===
v500 
=== Predecessor ===
j468 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1228 lastLocationAccess: - #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i493 
y: i418 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i493 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v471 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
i493 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v471 #falseSuccessor: v470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a494 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a494  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
a494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a494 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1229 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
a495 v501 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1229 lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a494 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
a494 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v478 #falseSuccessor: v474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j496 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j496  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
j496 v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1230 
lastLocationAccess: - 
=== Succesors ===
next: v484 
=== Usages ===
v481 j492 v1232 
=== Predecessor ===
v474 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1230 lastLocationAccess: - #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j496 
y: j406 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j496 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a495 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a494 
=== Succesors ===
=== Usages ===
j486 v489 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
j496 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v483 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a495 
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a495 #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j497 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1231 
lastLocationAccess: - 
=== Succesors ===
next: j486 
=== Usages ===
v1232 
=== Predecessor ===
v482 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1231 lastLocationAccess: - #next: j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a495 
=== Succesors ===
next: v498 
=== Usages ===
v498 
=== Predecessor ===
j497 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a495 #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j497 
index: j496 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j497 index: j496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1232 
lastLocationAccess: - 
value: j486 
stateAfter: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
j486 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1232 lastLocationAccess: - value: j486 stateAfter: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j496 
y: j409 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j496 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1230 
lastLocationAccess: - 
value: j492 
stateAfter: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1230 lastLocationAccess: - value: j492 stateAfter: - #next: v488  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v475 v477 v488 v490 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v475 v477 v488 v490 #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1149 v145 
=== Succesors ===
=== Usages ===
v335 v154 v309 v198 v329 v220 v289 v227 v323 v245 v303 v252 v317 v259 v296 v265 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1149 v145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1201 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1201 lastLocationAccess: - value: a95 stateAfter: - #next: v546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j508 
=== Usages ===
v1233 v1235 v1236 
=== Predecessor ===
v546 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j508  <|@  <|@
f <@~|@floating>@ <|@
tid j1166 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i149 
=== Succesors ===
=== Usages ===
v1203 v1204 v1205 v1206 v1207 v1208 v1209 v1210 v1211 v1212 v1213 v1214 v1215 v1216 v1217 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v198 j508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1203 
=== Succesors ===
next: i533 
=== Usages ===
v1234 
=== Predecessor ===
j507 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1203 #next: i533  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
i533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1233 
lastLocationAccess: - 
=== Succesors ===
next: v512 
=== Usages ===
v540 
=== Predecessor ===
j508 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1233 lastLocationAccess: - #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i533 
y: i418 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i533 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
i533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v511 #falseSuccessor: v510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a534 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a534  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
a534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a534 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1234 
lastLocationAccess: - 
=== Succesors ===
next: v519 
=== Usages ===
a535 v541 
=== Predecessor ===
v510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1234 lastLocationAccess: - #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a534  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
a534 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v518 #falseSuccessor: v514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j536 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j536 v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1235 
lastLocationAccess: - 
=== Succesors ===
next: v524 
=== Usages ===
v521 j532 v1237 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1235 lastLocationAccess: - #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j536 
y: j406 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j536 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a535 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
j526 v529 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a534  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v521 
=== Succesors ===
trueSuccessor: v523 
falseSuccessor: v522 
=== Usages ===
=== Predecessor ===
j536 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v521 #trueSuccessor: v523 #falseSuccessor: v522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a535 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a535 #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j537 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j537  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j537 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1236 
lastLocationAccess: - 
=== Succesors ===
next: j526 
=== Usages ===
v1237 
=== Predecessor ===
v522 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1236 lastLocationAccess: - #next: j526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a535 
=== Succesors ===
next: v538 
=== Usages ===
v538 
=== Predecessor ===
j537 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a535 #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j537 
index: j536 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j537 index: j536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1237 
lastLocationAccess: - 
value: j526 
stateAfter: - 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
j526 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1237 lastLocationAccess: - value: j526 stateAfter: - #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j536 
y: j409 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j536 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1235 
lastLocationAccess: - 
value: j532 
stateAfter: - 
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1235 lastLocationAccess: - value: j532 stateAfter: - #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v515 v517 v528 v530 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v515 v517 v528 v530 #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1203 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1203 lastLocationAccess: - value: a95 stateAfter: - #next: v586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j547 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j548 
=== Usages ===
v1238 v1240 v1241 
=== Predecessor ===
v586 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j548  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v220 j548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1204 
=== Succesors ===
next: i573 
=== Usages ===
v1239 
=== Predecessor ===
j547 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1204 #next: i573  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j547 
index: - 
=== Succesors ===
=== Usages ===
i573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i573 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1238 
lastLocationAccess: - 
=== Succesors ===
next: v552 
=== Usages ===
v580 
=== Predecessor ===
j548 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1238 lastLocationAccess: - #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i573 
y: i418 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i573 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
i573 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v551 #falseSuccessor: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a574 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a574  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j548 
index: - 
=== Succesors ===
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j548 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
lastLocationAccess: - 
=== Succesors ===
next: v559 
=== Usages ===
a575 v581 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1239 lastLocationAccess: - #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a574 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a574  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
a574 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v558 #falseSuccessor: v554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v557  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
v558 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j576 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j576  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j547 
index: - 
=== Succesors ===
=== Usages ===
j576 v579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
lastLocationAccess: - 
=== Succesors ===
next: v564 
=== Usages ===
v561 j572 v1242 
=== Predecessor ===
v554 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1240 lastLocationAccess: - #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j576 
y: j406 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j576 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a575 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a574 
=== Succesors ===
=== Usages ===
j566 v569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a574  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v563 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
j576 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v563 #falseSuccessor: v562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a575 
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a575 #next: v570  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
v569 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j577 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j577  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j547 
index: - 
=== Succesors ===
=== Usages ===
j577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j577 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
=== Succesors ===
next: j566 
=== Usages ===
v1242 
=== Predecessor ===
v562 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - #next: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a575 
=== Succesors ===
next: v578 
=== Usages ===
v578 
=== Predecessor ===
j577 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a575 #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j577 
index: j576 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j577 index: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
lastLocationAccess: - 
value: j566 
stateAfter: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
j566 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1242 lastLocationAccess: - value: j566 stateAfter: - #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid j572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j576 
y: j409 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j576 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
lastLocationAccess: - 
value: j572 
stateAfter: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1240 lastLocationAccess: - value: j572 stateAfter: - #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v555 v557 v568 v570 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v555 v557 v568 v570 #next: v220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1204 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1204 lastLocationAccess: - value: a95 stateAfter: - #next: v626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j587 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j587 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j588 
=== Usages ===
v1243 v1245 v1246 
=== Predecessor ===
v626 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j588  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v227 j588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1205 
=== Succesors ===
next: i613 
=== Usages ===
v1244 
=== Predecessor ===
j587 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1205 #next: i613  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
i613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
lastLocationAccess: - 
=== Succesors ===
next: v592 
=== Usages ===
v620 
=== Predecessor ===
j588 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 lastLocationAccess: - #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i613 
y: i418 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i613 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v620 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v590 
=== Usages ===
=== Predecessor ===
i613 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v620 #trueSuccessor: v591 #falseSuccessor: v590  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a614 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a614  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j588 
index: - 
=== Succesors ===
=== Usages ===
a614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j588 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a614 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
a615 v621 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a614 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a614  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v621 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
a614 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v621 #trueSuccessor: v598 #falseSuccessor: v594  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j616 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j616  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
j616 v619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j616 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
=== Succesors ===
next: v604 
=== Usages ===
v601 j612 v1247 
=== Predecessor ===
v594 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j616 
y: j406 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j616 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a615 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a614 
=== Succesors ===
=== Usages ===
j606 v609 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a614  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v601 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v602 
=== Usages ===
=== Predecessor ===
j616 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v601 #trueSuccessor: v603 #falseSuccessor: v602  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a615 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a615 #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j617 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j617  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
j617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j617 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
lastLocationAccess: - 
=== Succesors ===
next: j606 
=== Usages ===
v1247 
=== Predecessor ===
v602 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 lastLocationAccess: - #next: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a615 
=== Succesors ===
next: v618 
=== Usages ===
v618 
=== Predecessor ===
j617 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a615 #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j617 
index: j616 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
lastLocationAccess: - 
value: j606 
stateAfter: - 
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
j606 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1247 lastLocationAccess: - value: j606 stateAfter: - #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j616 
y: j409 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j616 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
value: j612 
stateAfter: - 
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - value: j612 stateAfter: - #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v619 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v595 v597 v608 v610 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v595 v597 v608 v610 #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1205 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1205 lastLocationAccess: - value: a95 stateAfter: - #next: v666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j627 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j627 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j628 
=== Usages ===
v1248 v1250 v1251 
=== Predecessor ===
v666 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j628  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v245 j628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1206 
=== Succesors ===
next: i653 
=== Usages ===
v1249 
=== Predecessor ===
j627 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1206 #next: i653  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j627 
index: - 
=== Succesors ===
=== Usages ===
i653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
v660 
=== Predecessor ===
j628 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i653 
y: i418 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i653 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
i653 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v631 #falseSuccessor: v630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a654 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a654  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
a654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a654 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: v639 
=== Usages ===
a655 v661 
=== Predecessor ===
v630 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a654 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a654  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
a654 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v638 #falseSuccessor: v634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j656 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j656  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j627 
index: - 
=== Succesors ===
=== Usages ===
j656 v659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
lastLocationAccess: - 
=== Succesors ===
next: v644 
=== Usages ===
v641 j652 v1252 
=== Predecessor ===
v634 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1250 lastLocationAccess: - #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j656 
y: j406 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j656 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a655 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a654 
=== Succesors ===
=== Usages ===
j646 v649 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a654  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v643 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
j656 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v643 #falseSuccessor: v642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a655 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a655 #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v649 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j657 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j657  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j627 
index: - 
=== Succesors ===
=== Usages ===
j657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: j646 
=== Usages ===
v1252 
=== Predecessor ===
v642 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: j646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a655 
=== Succesors ===
next: v658 
=== Usages ===
v658 
=== Predecessor ===
j657 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a655 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: j656 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: j656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
value: j646 
stateAfter: - 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
j646 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - value: j646 stateAfter: - #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid j652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j656 
y: j409 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j656 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
lastLocationAccess: - 
value: j652 
stateAfter: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1250 lastLocationAccess: - value: j652 stateAfter: - #next: v648  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v659 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v635 v637 v648 v650 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v635 v637 v648 v650 #next: v245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1206 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1206 lastLocationAccess: - value: a95 stateAfter: - #next: v706  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j667 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j667 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j668 
=== Usages ===
v1253 v1255 v1256 
=== Predecessor ===
v706 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j668  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v252 j668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1207 
=== Succesors ===
next: i693 
=== Usages ===
v1254 
=== Predecessor ===
j667 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1207 #next: i693  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
i693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
=== Succesors ===
next: v672 
=== Usages ===
v700 
=== Predecessor ===
j668 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i693 
y: i418 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i693 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v671 
falseSuccessor: v670 
=== Usages ===
=== Predecessor ===
i693 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v671 #falseSuccessor: v670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a694 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a694  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
a694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a694 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: v679 
=== Usages ===
a695 v701 
=== Predecessor ===
v670 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a694 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a694  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v701 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
a694 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v701 #trueSuccessor: v678 #falseSuccessor: v674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j696 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j696  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
j696 v699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j696 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
lastLocationAccess: - 
=== Succesors ===
next: v684 
=== Usages ===
v681 j692 v1257 
=== Predecessor ===
v674 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 lastLocationAccess: - #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j696 
y: j406 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j696 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a695 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a694 
=== Succesors ===
=== Usages ===
j686 v689 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a694  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v681 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v682 
=== Usages ===
=== Predecessor ===
j696 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v681 #trueSuccessor: v683 #falseSuccessor: v682  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a695 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a695 #next: v690  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j697 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j697  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
j697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j697 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
lastLocationAccess: - 
=== Succesors ===
next: j686 
=== Usages ===
v1257 
=== Predecessor ===
v682 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 lastLocationAccess: - #next: j686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a695 
=== Succesors ===
next: v698 
=== Usages ===
v698 
=== Predecessor ===
j697 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a695 #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j697 
index: j696 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j697 index: j696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
value: j686 
stateAfter: - 
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
j686 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - value: j686 stateAfter: - #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j696 
y: j409 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j696 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
lastLocationAccess: - 
value: j692 
stateAfter: - 
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1255 lastLocationAccess: - value: j692 stateAfter: - #next: v688  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v675 v677 v688 v690 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v675 v677 v688 v690 #next: v252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1207 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1207 lastLocationAccess: - value: a95 stateAfter: - #next: v746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j707 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j707 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j708 
=== Usages ===
v1258 v1260 v1261 
=== Predecessor ===
v746 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j708  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v259 j708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1208 
=== Succesors ===
next: i733 
=== Usages ===
v1259 
=== Predecessor ===
j707 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1208 #next: i733  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j707 
index: - 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i733 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
=== Succesors ===
next: v712 
=== Usages ===
v740 
=== Predecessor ===
j708 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i733 
y: i418 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i733 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
i733 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v711 #falseSuccessor: v710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a734 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a734  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j708 
index: - 
=== Succesors ===
=== Usages ===
a734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j708 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a734 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
lastLocationAccess: - 
=== Succesors ===
next: v719 
=== Usages ===
a735 v741 
=== Predecessor ===
v710 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 lastLocationAccess: - #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a734 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a734  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v718 
falseSuccessor: v714 
=== Usages ===
=== Predecessor ===
a734 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v718 #falseSuccessor: v714  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v718 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j736 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j736  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j707 
index: - 
=== Succesors ===
=== Usages ===
j736 v739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j736 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: v724 
=== Usages ===
v721 j732 v1262 
=== Predecessor ===
v714 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j736 
y: j406 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j736 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a735 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a734 
=== Succesors ===
=== Usages ===
j726 v729 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a734  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
j736 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v723 #falseSuccessor: v722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a735 
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a735 #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j737 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j737  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j707 
index: - 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
=== Succesors ===
next: j726 
=== Usages ===
v1262 
=== Predecessor ===
v722 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - #next: j726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a735 
=== Succesors ===
next: v738 
=== Usages ===
v738 
=== Predecessor ===
j737 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a735 #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j737 
index: j736 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
value: j726 
stateAfter: - 
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
j726 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - value: j726 stateAfter: - #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid j732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j736 
y: j409 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j736 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
value: j732 
stateAfter: - 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - value: j732 stateAfter: - #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v715 v717 v728 v730 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v715 v717 v728 v730 #next: v259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1208 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1208 lastLocationAccess: - value: a95 stateAfter: - #next: v786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j747 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j747 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j748 
=== Usages ===
v1263 v1265 v1266 
=== Predecessor ===
v786 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j748  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v265 j748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1209 
=== Succesors ===
next: i773 
=== Usages ===
v1264 
=== Predecessor ===
j747 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1209 #next: i773  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
i773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i773 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
lastLocationAccess: - 
=== Succesors ===
next: v752 
=== Usages ===
v780 
=== Predecessor ===
j748 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 lastLocationAccess: - #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i773 
y: i418 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i773 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v751 
falseSuccessor: v750 
=== Usages ===
=== Predecessor ===
i773 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v751 #falseSuccessor: v750  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v751 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a774 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a774  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j748 
index: - 
=== Succesors ===
=== Usages ===
a774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a774 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
a775 v781 
=== Predecessor ===
v750 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a774 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a774  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v781 
=== Succesors ===
trueSuccessor: v758 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
a774 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v781 #trueSuccessor: v758 #falseSuccessor: v754  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v758 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j776 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j776  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
j776 v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v764 
=== Usages ===
v761 j772 v1267 
=== Predecessor ===
v754 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j776 
y: j406 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j776 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a775 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a774 
=== Succesors ===
=== Usages ===
j766 v769 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a774  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v763 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
j776 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v763 #falseSuccessor: v762  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a775 
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a775 #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j777 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j777  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
j777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j777 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: j766 
=== Usages ===
v1267 
=== Predecessor ===
v762 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 lastLocationAccess: - #next: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a775 
=== Succesors ===
next: v778 
=== Usages ===
v778 
=== Predecessor ===
j777 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a775 #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j777 
index: j776 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j777 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1267 
lastLocationAccess: - 
value: j766 
stateAfter: - 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
j766 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1267 lastLocationAccess: - value: j766 stateAfter: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid j772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j776 
y: j409 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j776 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
value: j772 
stateAfter: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - value: j772 stateAfter: - #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v755 v757 v768 v770 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v755 v757 v768 v770 #next: v265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1209 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1209 lastLocationAccess: - value: a95 stateAfter: - #next: v826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j787 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j787 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j788 
=== Usages ===
v1268 v1270 v1271 
=== Predecessor ===
v826 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j788  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v289 j788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1210 
=== Succesors ===
next: i813 
=== Usages ===
v1269 
=== Predecessor ===
j787 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1210 #next: i813  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j787 
index: - 
=== Succesors ===
=== Usages ===
i813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j787 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
lastLocationAccess: - 
=== Succesors ===
next: v792 
=== Usages ===
v820 
=== Predecessor ===
j788 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1268 lastLocationAccess: - #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i418 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i813 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v791 
falseSuccessor: v790 
=== Usages ===
=== Predecessor ===
i813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v791 #falseSuccessor: v790  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
v792 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v795  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v791 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a814 
=== Usages ===
=== Predecessor ===
v792 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a814  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j788 
index: - 
=== Succesors ===
=== Usages ===
a814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j788 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a814 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
lastLocationAccess: - 
=== Succesors ===
next: v799 
=== Usages ===
a815 v821 
=== Predecessor ===
v790 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 lastLocationAccess: - #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a814 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a814  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v794 
=== Usages ===
=== Predecessor ===
a814 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v798 #falseSuccessor: v794  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v797  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j816 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j816  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j787 
index: - 
=== Succesors ===
=== Usages ===
j816 v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j787 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j816 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
=== Succesors ===
next: v804 
=== Usages ===
v801 j812 v1272 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j406 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j816 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a815 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a814 
=== Succesors ===
=== Usages ===
j806 v809 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a814  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v803 
falseSuccessor: v802 
=== Usages ===
=== Predecessor ===
j816 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v803 #falseSuccessor: v802  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a815 
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a815 #next: v810  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j817 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j817  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j787 
index: - 
=== Succesors ===
=== Usages ===
j817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j787 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j817 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: j806 
=== Usages ===
v1272 
=== Predecessor ===
v802 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: j806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a815 
=== Succesors ===
next: v818 
=== Usages ===
v818 
=== Predecessor ===
j817 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a815 #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j817 
index: j816 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j817 index: j816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1272 
lastLocationAccess: - 
value: j806 
stateAfter: - 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
j806 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1272 lastLocationAccess: - value: j806 stateAfter: - #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid j812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j816 
y: j409 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j816 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
value: j812 
stateAfter: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - value: j812 stateAfter: - #next: v808  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v819 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v795 v797 v808 v810 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v795 v797 v808 v810 #next: v289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1210 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1210 lastLocationAccess: - value: a95 stateAfter: - #next: v866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j827 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j828 
=== Usages ===
v1273 v1275 v1276 
=== Predecessor ===
v866 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j828  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v296 j828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1211 
=== Succesors ===
next: i853 
=== Usages ===
v1274 
=== Predecessor ===
j827 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1211 #next: i853  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j827 
index: - 
=== Succesors ===
=== Usages ===
i853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j827 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i853 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1273 
lastLocationAccess: - 
=== Succesors ===
next: v832 
=== Usages ===
v860 
=== Predecessor ===
j828 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1273 lastLocationAccess: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i853 
y: i418 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i853 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v860 
=== Succesors ===
trueSuccessor: v831 
falseSuccessor: v830 
=== Usages ===
=== Predecessor ===
i853 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v860 #trueSuccessor: v831 #falseSuccessor: v830  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v831 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a854 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a854  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j828 
index: - 
=== Succesors ===
=== Usages ===
a854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a854 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
lastLocationAccess: - 
=== Succesors ===
next: v839 
=== Usages ===
a855 v861 
=== Predecessor ===
v830 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 lastLocationAccess: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a854 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a854  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v861 
=== Succesors ===
trueSuccessor: v838 
falseSuccessor: v834 
=== Usages ===
=== Predecessor ===
a854 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v861 #trueSuccessor: v838 #falseSuccessor: v834  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v838 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j856 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j856  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j827 
index: - 
=== Succesors ===
=== Usages ===
j856 v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j827 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j856 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
lastLocationAccess: - 
=== Succesors ===
next: v844 
=== Usages ===
v841 j852 v1277 
=== Predecessor ===
v834 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 lastLocationAccess: - #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j856 
y: j406 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j856 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a855 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a854 
=== Succesors ===
=== Usages ===
j846 v849 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a854  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v843 
falseSuccessor: v842 
=== Usages ===
=== Predecessor ===
j856 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v843 #falseSuccessor: v842  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a855 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a855 #next: v850  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j857 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j857  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j827 
index: - 
=== Succesors ===
=== Usages ===
j857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j827 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j857 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1276 
lastLocationAccess: - 
=== Succesors ===
next: j846 
=== Usages ===
v1277 
=== Predecessor ===
v842 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1276 lastLocationAccess: - #next: j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a855 
=== Succesors ===
next: v858 
=== Usages ===
v858 
=== Predecessor ===
j857 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a855 #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j857 
index: j856 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j857 index: j856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
value: j846 
stateAfter: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
j846 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - value: j846 stateAfter: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j856 
y: j409 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j856 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
lastLocationAccess: - 
value: j852 
stateAfter: - 
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1275 lastLocationAccess: - value: j852 stateAfter: - #next: v848  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v859 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v835 v837 v848 v850 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v835 v837 v848 v850 #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1211 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1211 lastLocationAccess: - value: a95 stateAfter: - #next: v906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j867 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j867 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j868 
=== Usages ===
v1278 v1280 v1281 
=== Predecessor ===
v906 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j868  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v303 j868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1212 
=== Succesors ===
next: i893 
=== Usages ===
v1279 
=== Predecessor ===
j867 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1212 #next: i893  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
i893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i893 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1278 
lastLocationAccess: - 
=== Succesors ===
next: v872 
=== Usages ===
v900 
=== Predecessor ===
j868 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1278 lastLocationAccess: - #next: v872  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i893 
y: i418 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i893 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v871 
falseSuccessor: v870 
=== Usages ===
=== Predecessor ===
i893 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v871 #falseSuccessor: v870  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v871 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a894 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a894  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j868 
index: - 
=== Succesors ===
=== Usages ===
a894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a894 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
lastLocationAccess: - 
=== Succesors ===
next: v879 
=== Usages ===
a895 v901 
=== Predecessor ===
v870 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 lastLocationAccess: - #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a894 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a894  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v901 
=== Succesors ===
trueSuccessor: v878 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
a894 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v901 #trueSuccessor: v878 #falseSuccessor: v874  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j896 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j896  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
j896 v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j896 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
lastLocationAccess: - 
=== Succesors ===
next: v884 
=== Usages ===
v881 j892 v1282 
=== Predecessor ===
v874 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1280 lastLocationAccess: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j896 
y: j406 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j896 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a895 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a894 
=== Succesors ===
=== Usages ===
j886 v889 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a894  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
j896 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v883 #falseSuccessor: v882  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a895 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a895 #next: v890  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v889 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j897 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j897  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
j897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j897 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1281 
lastLocationAccess: - 
=== Succesors ===
next: j886 
=== Usages ===
v1282 
=== Predecessor ===
v882 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1281 lastLocationAccess: - #next: j886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a895 
=== Succesors ===
next: v898 
=== Usages ===
v898 
=== Predecessor ===
j897 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a895 #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j897 
index: j896 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j897 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
value: j886 
stateAfter: - 
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
j886 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - value: j886 stateAfter: - #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j896 
y: j409 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j896 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
lastLocationAccess: - 
value: j892 
stateAfter: - 
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v898 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1280 lastLocationAccess: - value: j892 stateAfter: - #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v877 v888 v890 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v877 v888 v890 #next: v303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1212 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1212 lastLocationAccess: - value: a95 stateAfter: - #next: v946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j907 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j907 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j908 
=== Usages ===
v1283 v1285 v1286 
=== Predecessor ===
v946 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j908  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v309 j908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1213 
=== Succesors ===
next: i933 
=== Usages ===
v1284 
=== Predecessor ===
j907 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1213 #next: i933  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j907 
index: - 
=== Succesors ===
=== Usages ===
i933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j907 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i933 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
=== Succesors ===
next: v912 
=== Usages ===
v940 
=== Predecessor ===
j908 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i933 
y: i418 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i933 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v910 
=== Usages ===
=== Predecessor ===
i933 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v911 #falseSuccessor: v910  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a934 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a934  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j908 
index: - 
=== Succesors ===
=== Usages ===
a934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j908 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a934 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
lastLocationAccess: - 
=== Succesors ===
next: v919 
=== Usages ===
a935 v941 
=== Predecessor ===
v910 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1284 lastLocationAccess: - #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a934 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a934  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v941 
=== Succesors ===
trueSuccessor: v918 
falseSuccessor: v914 
=== Usages ===
=== Predecessor ===
a934 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v941 #trueSuccessor: v918 #falseSuccessor: v914  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j936 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j936  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j907 
index: - 
=== Succesors ===
=== Usages ===
j936 v939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j907 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j936 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
=== Succesors ===
next: v924 
=== Usages ===
v921 j932 v1287 
=== Predecessor ===
v914 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j936 
y: j406 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j936 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a935 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a934 
=== Succesors ===
=== Usages ===
j926 v929 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a934  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v921 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
j936 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v921 #trueSuccessor: v923 #falseSuccessor: v922  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v929 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a935 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a935 #next: v930  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j937 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j937  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j907 
index: - 
=== Succesors ===
=== Usages ===
j937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j907 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j937 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
lastLocationAccess: - 
=== Succesors ===
next: j926 
=== Usages ===
v1287 
=== Predecessor ===
v922 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1286 lastLocationAccess: - #next: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a935 
=== Succesors ===
next: v938 
=== Usages ===
v938 
=== Predecessor ===
j937 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a935 #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j937 
index: j936 
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j937 index: j936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
lastLocationAccess: - 
value: j926 
stateAfter: - 
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
j926 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1287 lastLocationAccess: - value: j926 stateAfter: - #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid j932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j936 
y: j409 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j936 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
value: j932 
stateAfter: - 
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - value: j932 stateAfter: - #next: v928  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v915 v917 v928 v930 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v915 v917 v928 v930 #next: v309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1213 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1213 lastLocationAccess: - value: a95 stateAfter: - #next: v986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j947 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j947 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j948 
=== Usages ===
v1288 v1290 v1291 
=== Predecessor ===
v986 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j948  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v317 j948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j948 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1214 
=== Succesors ===
next: i973 
=== Usages ===
v1289 
=== Predecessor ===
j947 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1214 #next: i973  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j947 
index: - 
=== Succesors ===
=== Usages ===
i973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i973 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v952 
=== Usages ===
v980 
=== Predecessor ===
j948 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - #next: v952  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i973 
y: i418 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i973 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v980 
=== Succesors ===
trueSuccessor: v951 
falseSuccessor: v950 
=== Usages ===
=== Predecessor ===
i973 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v980 #trueSuccessor: v951 #falseSuccessor: v950  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
v951 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a974 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a974  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j948 
index: - 
=== Succesors ===
=== Usages ===
a974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a974 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
lastLocationAccess: - 
=== Succesors ===
next: v959 
=== Usages ===
a975 v981 
=== Predecessor ===
v950 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1289 lastLocationAccess: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a974 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a974  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v981 
=== Succesors ===
trueSuccessor: v958 
falseSuccessor: v954 
=== Usages ===
=== Predecessor ===
a974 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v981 #trueSuccessor: v958 #falseSuccessor: v954  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v957  <|@  <|@
f <@*|@fixed>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
v958 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j976 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j976  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j947 
index: - 
=== Succesors ===
=== Usages ===
j976 v979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j976 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1290 
lastLocationAccess: - 
=== Succesors ===
next: v964 
=== Usages ===
v961 j972 v1292 
=== Predecessor ===
v954 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1290 lastLocationAccess: - #next: v964  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j976 
y: j406 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j976 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a975 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a974 
=== Succesors ===
=== Usages ===
j966 v969 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a974  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v961 
=== Succesors ===
trueSuccessor: v963 
falseSuccessor: v962 
=== Usages ===
=== Predecessor ===
j976 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v961 #trueSuccessor: v963 #falseSuccessor: v962  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a975 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a975 #next: v970  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j977 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j977  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j947 
index: - 
=== Succesors ===
=== Usages ===
j977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j977 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1291 
lastLocationAccess: - 
=== Succesors ===
next: j966 
=== Usages ===
v1292 
=== Predecessor ===
v962 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1291 lastLocationAccess: - #next: j966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a975 
=== Succesors ===
next: v978 
=== Usages ===
v978 
=== Predecessor ===
j977 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a975 #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j977 
index: j976 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j977 index: j976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1292 
lastLocationAccess: - 
value: j966 
stateAfter: - 
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
j966 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1292 lastLocationAccess: - value: j966 stateAfter: - #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid j972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j976 
y: j409 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j976 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1290 
lastLocationAccess: - 
value: j972 
stateAfter: - 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1290 lastLocationAccess: - value: j972 stateAfter: - #next: v968  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v955 v957 v968 v970 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v955 v957 v968 v970 #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1214 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1214 lastLocationAccess: - value: a95 stateAfter: - #next: v1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j987 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j987 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j988 
=== Usages ===
v1293 v1295 v1296 
=== Predecessor ===
v1026 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j988  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v323 j988 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1215 
=== Succesors ===
next: i1013 
=== Usages ===
v1294 
=== Predecessor ===
j987 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1215 #next: i1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j987 
index: - 
=== Succesors ===
=== Usages ===
i1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
lastLocationAccess: - 
=== Succesors ===
next: v992 
=== Usages ===
v1020 
=== Predecessor ===
j988 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1293 lastLocationAccess: - #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i418 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1013 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1020 
=== Succesors ===
trueSuccessor: v991 
falseSuccessor: v990 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1020 #trueSuccessor: v991 #falseSuccessor: v990  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1014 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j988 
index: - 
=== Succesors ===
=== Usages ===
a1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j988 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1014 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
lastLocationAccess: - 
=== Succesors ===
next: v999 
=== Usages ===
a1015 v1021 
=== Predecessor ===
v990 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 lastLocationAccess: - #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1014 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1021 
=== Succesors ===
trueSuccessor: v998 
falseSuccessor: v994 
=== Usages ===
=== Predecessor ===
a1014 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1021 #trueSuccessor: v998 #falseSuccessor: v994  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v997  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1016 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j987 
index: - 
=== Succesors ===
=== Usages ===
j1016 v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1016 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
lastLocationAccess: - 
=== Succesors ===
next: v1004 
=== Usages ===
v1001 j1012 v1297 
=== Predecessor ===
v994 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 lastLocationAccess: - #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1016 
y: j406 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1016 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a1015 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1014 
=== Succesors ===
=== Usages ===
j1006 v1009 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1001 
=== Succesors ===
trueSuccessor: v1003 
falseSuccessor: v1002 
=== Usages ===
=== Predecessor ===
j1016 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1001 #trueSuccessor: v1003 #falseSuccessor: v1002  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1015 
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1015 #next: v1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
v1009 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1017 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j987 
index: - 
=== Succesors ===
=== Usages ===
j1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1017 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1296 
lastLocationAccess: - 
=== Succesors ===
next: j1006 
=== Usages ===
v1297 
=== Predecessor ===
v1002 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1296 lastLocationAccess: - #next: j1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1015 
=== Succesors ===
next: v1018 
=== Usages ===
v1018 
=== Predecessor ===
j1017 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1015 #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: j1016 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: j1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1297 
lastLocationAccess: - 
value: j1006 
stateAfter: - 
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
j1006 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1297 lastLocationAccess: - value: j1006 stateAfter: - #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid j1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1016 
y: j409 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1016 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
lastLocationAccess: - 
value: j1012 
stateAfter: - 
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1295 lastLocationAccess: - value: j1012 stateAfter: - #next: v1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
v1019 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v995 v997 v1008 v1010 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v995 v997 v1008 v1010 #next: v323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1215 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1215 lastLocationAccess: - value: a95 stateAfter: - #next: v1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1027 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1027 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1028 
=== Usages ===
v1298 v1300 v1301 
=== Predecessor ===
v1066 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v329 j1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1216 
=== Succesors ===
next: i1053 
=== Usages ===
v1299 
=== Predecessor ===
j1027 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1216 #next: i1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
i1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1053 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
lastLocationAccess: - 
=== Succesors ===
next: v1032 
=== Usages ===
v1060 
=== Predecessor ===
j1028 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1298 lastLocationAccess: - #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1053 
y: i418 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1053 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1060 
=== Succesors ===
trueSuccessor: v1031 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
i1053 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1060 #trueSuccessor: v1031 #falseSuccessor: v1030  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1031 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1054 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1028 
index: - 
=== Succesors ===
=== Usages ===
a1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1028 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1054 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
lastLocationAccess: - 
=== Succesors ===
next: v1039 
=== Usages ===
a1055 v1061 
=== Predecessor ===
v1030 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 lastLocationAccess: - #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1054 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1061 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1034 
=== Usages ===
=== Predecessor ===
a1054 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1061 #trueSuccessor: v1038 #falseSuccessor: v1034  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1056 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
j1056 v1059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1056 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
=== Succesors ===
next: v1044 
=== Usages ===
v1041 j1052 v1302 
=== Predecessor ===
v1034 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - #next: v1044  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1056 
y: j406 
=== Succesors ===
=== Usages ===
v1044 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1056 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1054 
=== Succesors ===
=== Usages ===
j1046 v1049 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1041 
=== Succesors ===
trueSuccessor: v1043 
falseSuccessor: v1042 
=== Usages ===
=== Predecessor ===
j1056 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1041 #trueSuccessor: v1043 #falseSuccessor: v1042  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1055 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1055 #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1049 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1057 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
j1057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1057 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1301 
lastLocationAccess: - 
=== Succesors ===
next: j1046 
=== Usages ===
v1302 
=== Predecessor ===
v1042 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1301 lastLocationAccess: - #next: j1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1055 
=== Succesors ===
next: v1058 
=== Usages ===
v1058 
=== Predecessor ===
j1057 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1055 #next: v1058  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1057 
index: j1056 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1057 index: j1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
lastLocationAccess: - 
value: j1046 
stateAfter: - 
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
j1046 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1302 lastLocationAccess: - value: j1046 stateAfter: - #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1056 
y: j409 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1056 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
value: j1052 
stateAfter: - 
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - value: j1052 stateAfter: - #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1059 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1035 v1037 v1048 v1050 
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1035 v1037 v1048 v1050 #next: v329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1216 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1216 lastLocationAccess: - value: a95 stateAfter: - #next: v1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1067 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1067 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1068 
=== Usages ===
v1303 v1305 v1306 
=== Predecessor ===
v1106 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1068  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v335 j1068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1217 
=== Succesors ===
next: i1093 
=== Usages ===
v1304 
=== Predecessor ===
j1067 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1217 #next: i1093  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1067 
index: - 
=== Succesors ===
=== Usages ===
i1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1093 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1303 
lastLocationAccess: - 
=== Succesors ===
next: v1072 
=== Usages ===
v1100 
=== Predecessor ===
j1068 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1303 lastLocationAccess: - #next: v1072  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1093 
y: i418 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1093 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v1071 
falseSuccessor: v1070 
=== Usages ===
=== Predecessor ===
i1093 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v1071 #falseSuccessor: v1070  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1071 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1094 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1094  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1068 
index: - 
=== Succesors ===
=== Usages ===
a1094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1068 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1094 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1304 
lastLocationAccess: - 
=== Succesors ===
next: v1079 
=== Usages ===
a1095 v1101 
=== Predecessor ===
v1070 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1304 lastLocationAccess: - #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1094 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1101 
=== Succesors ===
trueSuccessor: v1078 
falseSuccessor: v1074 
=== Usages ===
=== Predecessor ===
a1094 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1101 #trueSuccessor: v1078 #falseSuccessor: v1074  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1078 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1096 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1067 
index: - 
=== Succesors ===
=== Usages ===
j1096 v1099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1096 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
lastLocationAccess: - 
=== Succesors ===
next: v1084 
=== Usages ===
v1081 j1092 v1307 
=== Predecessor ===
v1074 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1305 lastLocationAccess: - #next: v1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1096 
y: j406 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1096 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a1095 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1094 
=== Succesors ===
=== Usages ===
j1086 v1089 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v1083 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
j1096 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v1083 #falseSuccessor: v1082  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1095 
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1095 #next: v1090  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1089 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1097 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1097  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1067 
index: - 
=== Succesors ===
=== Usages ===
j1097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1097 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1306 
lastLocationAccess: - 
=== Succesors ===
next: j1086 
=== Usages ===
v1307 
=== Predecessor ===
v1082 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1306 lastLocationAccess: - #next: j1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1095 
=== Succesors ===
next: v1098 
=== Usages ===
v1098 
=== Predecessor ===
j1097 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1095 #next: v1098  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1097 
index: j1096 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1097 index: j1096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1307 
lastLocationAccess: - 
value: j1086 
stateAfter: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
j1086 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1307 lastLocationAccess: - value: j1086 stateAfter: - #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid j1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1096 
y: j409 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1096 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
lastLocationAccess: - 
value: j1092 
stateAfter: - 
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1305 lastLocationAccess: - value: j1092 stateAfter: - #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1099 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1075 v1077 v1088 v1090 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1075 v1077 v1088 v1090 #next: v335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1217 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1217 lastLocationAccess: - value: a95 stateAfter: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i149 
y: i341 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i149 y: i341  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v142 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v142 
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v142 #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v162 
values: i149 i167 
=== Succesors ===
=== Usages ===
v163 i167 v1202 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v162 values: i149 i167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 20
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.006139584328
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v178 
=== Succesors ===
next: v166 
=== Usages ===
v164 v168 i169 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v178 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i1158 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i169 y: i1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v165 #falseSuccessor: v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
v177 
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1108 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1108 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1109 
=== Usages ===
v1308 v1310 v1311 
=== Predecessor ===
v1147 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: i169 
=== Succesors ===
=== Usages ===
v174 j1109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1202 
=== Succesors ===
next: i1134 
=== Usages ===
v1309 
=== Predecessor ===
j1108 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1202 #next: i1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
i1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1134 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
=== Succesors ===
next: v1113 
=== Usages ===
v1141 
=== Predecessor ===
j1109 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1134 
y: i418 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1134 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
i1134 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1112 #falseSuccessor: v1111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1116 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1116  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
v1112 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1135 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1109 
index: - 
=== Succesors ===
=== Usages ===
a1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1135 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1309 
lastLocationAccess: - 
=== Succesors ===
next: v1120 
=== Usages ===
a1136 v1142 
=== Predecessor ===
v1111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1309 lastLocationAccess: - #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1135 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v1119 
falseSuccessor: v1115 
=== Usages ===
=== Predecessor ===
a1135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v1119 #falseSuccessor: v1115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
v1119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1137 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1137  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
j1137 v1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1137 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
lastLocationAccess: - 
=== Succesors ===
next: v1125 
=== Usages ===
v1122 j1133 v1312 
=== Predecessor ===
v1115 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1310 lastLocationAccess: - #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1137 
y: j406 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1137 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a1136 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1135 
=== Succesors ===
=== Usages ===
j1127 v1130 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1124 
falseSuccessor: v1123 
=== Usages ===
=== Predecessor ===
j1137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1124 #falseSuccessor: v1123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1136 
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1136 #next: v1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1138 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1138  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
j1138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1138 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1311 
lastLocationAccess: - 
=== Succesors ===
next: j1127 
=== Usages ===
v1312 
=== Predecessor ===
v1123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1311 lastLocationAccess: - #next: j1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1136 
=== Succesors ===
next: v1139 
=== Usages ===
v1139 
=== Predecessor ===
j1138 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1136 #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1138 
index: j1137 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1138 index: j1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1312 
lastLocationAccess: - 
value: j1127 
stateAfter: - 
=== Succesors ===
next: v1140 
=== Usages ===
=== Predecessor ===
j1127 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1312 lastLocationAccess: - value: j1127 stateAfter: - #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid j1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1137 
y: j409 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1137 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
lastLocationAccess: - 
value: j1133 
stateAfter: - 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1310 lastLocationAccess: - value: j1133 stateAfter: - #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
v1140 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1116 v1118 v1129 v1131 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1116 v1118 v1129 v1131 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1149 v165 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1149 v165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v177 
address: v1202 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v177 address: v1202 lastLocationAccess: - value: a95 stateAfter: - #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i169 
y: i4 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i169 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v162 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v162 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v162 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v46 v47 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v46 v47 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 28]
sourceFile: HashMap.java
sourceLine: 869
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a60 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a60  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 85
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
reason: BoundsCheckException
speculation: {0x0000000000000298[index: 20, len: 24, hash: 0x5377a5af]: GuardMovement@2[HotSpotMethod<HashMap.clear()>, 33, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1157 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a1157  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1195 ?17 ?7 v1196 v1197 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1157 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 11]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
=== Succesors ===
next: i1158 
=== Usages ===
a60 v1198 v1199 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - #next: i1158  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 866
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1157 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1158 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-16907|0xffffffffffffbdf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 35]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1198 
lastLocationAccess: - 
=== Succesors ===
next: i1159 
=== Usages ===
i185 v116 v72 j106 i125 i360 v163 v184 
=== Predecessor ===
a1157 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1198 lastLocationAccess: - #next: i1159  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1159 v56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1159 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
i5 
=== Predecessor ===
i1158 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1195 lastLocationAccess: - #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 v14 i32 i50 i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 6]
stamp: i32
=== Inputs ===
x: i1159 
y: i4 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1159 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.modCount
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: i1160 
=== Usages ===
=== Predecessor ===
i1159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1195 lastLocationAccess: - value: i5 stateAfter: - #next: i1160  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1160 v64 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1160 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 20]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
v14 
=== Predecessor ===
v56 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1160 
y: i4 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1160 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v137 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
i1160 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v137 #falseSuccessor: v138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 7]
sourceFile: HashMap.java
sourceLine: 867
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x65120669]: UnreachedCode@5[HotSpotMethod<HashMap.clear()>, 49]}
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 v72 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap.size
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 28]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
value: i13 
stateAfter: - 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - value: i13 stateAfter: - #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i13 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1158 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.016947388984342227
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v37 #falseSuccessor: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
v82 
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1158 
y: i124 
=== Succesors ===
=== Usages ===
j114 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1158 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i125 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i125  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1158 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j114 
y: j106 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j114 y: j106  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:867) [bci: 11]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a1157 
=== Succesors ===
=== Usages ===
v1217 ?17 v1216 v1215 v1200 v1201 v1202 v1203 v1204 v1205 v1206 v1207 v1208 v1209 v1210 v1211 v1212 v1213 v1214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1157  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i185 v116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v1152 
falseSuccessor: v1155 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v1152 #falseSuccessor: v1155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1150 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1149 
=== Predecessor ===
v1152 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1154 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1154  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i76 
=== Succesors ===
=== Usages ===
v1154 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1158 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v1153 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v1155 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v1153 #falseSuccessor: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1151 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1151  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1149 
=== Predecessor ===
v1153 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1150 v1151 
=== Succesors ===
next: v425 
=== Usages ===
v121 v177 v157 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1150 v1151 #next: v425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j380 
=== Usages ===
=== Predecessor ===
v1149 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j380 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j381 
=== Usages ===
v1218 v1220 v1221 
=== Predecessor ===
v425 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j381  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1157 
=== Succesors ===
=== Usages ===
v82 j381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j381 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1199 
=== Succesors ===
next: i411 
=== Usages ===
v1219 
=== Predecessor ===
j380 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1199 #next: i411  <|@  <|@
f <@~|@floating>@ <|@
tid v1218 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j380 
index: - 
=== Succesors ===
=== Usages ===
i411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j380 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i411 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1218 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
v419 
=== Predecessor ===
j381 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1218 lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v419 v459 v500 v540 v580 v620 v660 v700 v740 v780 v820 v860 v900 v940 v980 v1020 v1060 v1100 v1141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i411 
y: i418 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i411 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j410 j451 j492 j532 j572 j612 j652 j692 j732 j772 j812 j852 j892 j932 j972 j1012 j1052 j1092 j1133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j406 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 v394 v761 v440 v1081 v481 v921 v521 v1041 v561 v801 v601 v1001 v641 v881 v681 v961 v721 v841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v419 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v383 
=== Usages ===
=== Predecessor ===
i411 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v419 #trueSuccessor: v384 #falseSuccessor: v383  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a412 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a412  <|@  <|@
f <@~|@floating>@ <|@
tid v1219 <|@
result [v7|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j381 
index: - 
=== Succesors ===
=== Usages ===
a412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j381 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a412 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1219 
lastLocationAccess: - 
=== Succesors ===
next: v392 
=== Usages ===
a413 v420 
=== Predecessor ===
v383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1219 lastLocationAccess: - #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a412 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a412  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
a412 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v391 #falseSuccessor: v387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j414 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j414  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j380 
index: - 
=== Succesors ===
=== Usages ===
j414 v417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j380 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j414 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1220 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
v394 j410 v1222 
=== Predecessor ===
v387 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1220 lastLocationAccess: - #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j414 
y: j406 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j414 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a413 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a412 
=== Succesors ===
=== Usages ===
j399 v402 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a412  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v394 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v395 
=== Usages ===
=== Predecessor ===
j414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v394 #trueSuccessor: v396 #falseSuccessor: v395  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a413 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a413 #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j415 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j415  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j380 
index: - 
=== Succesors ===
=== Usages ===
j415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j380 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j415 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1221 
lastLocationAccess: - 
=== Succesors ===
next: j399 
=== Usages ===
v1222 
=== Predecessor ===
v395 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1221 lastLocationAccess: - #next: j399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a413 
=== Succesors ===
next: v416 
=== Usages ===
v416 
=== Predecessor ===
j415 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a413 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
result [v11|QWORD + v9|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j415 
index: j414 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j415 index: j414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1222 
lastLocationAccess: - 
value: j399 
stateAfter: - 
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
j399 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1222 lastLocationAccess: - value: j399 stateAfter: - #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j414 
y: j409 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j414 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1220 
lastLocationAccess: - 
value: j410 
stateAfter: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1220 lastLocationAccess: - value: j410 stateAfter: - #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v388 v390 v401 v403 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v388 v390 v401 v403 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid a95 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 v91 v154 v174 v198 v220 v227 v245 v252 v259 v265 v289 v296 v303 v309 v317 v323 v329 v335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v38 
address: v1199 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v38 address: v1199 lastLocationAccess: - value: a95 stateAfter: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i183 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1158 y: i183  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v184 
trueValue: i1158 
falseValue: i76 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v184 trueValue: i1158 falseValue: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v20 
values: i4 i32 
=== Succesors ===
=== Usages ===
i32 v24 v1200 i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v20 values: i4 i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.006139584328
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v19 
=== Succesors ===
next: v29 
=== Usages ===
i50 v26 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v19 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i185 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v28 #falseSuccessor: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
v121 
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j426 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j426 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j427 
=== Usages ===
v1223 v1225 v1226 
=== Predecessor ===
v465 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j427  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
result [v6|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: i50 
=== Succesors ===
=== Usages ===
v91 j427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j427 <|@
result [v6|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1200 
=== Succesors ===
next: i452 
=== Usages ===
v1224 
=== Predecessor ===
j426 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1200 #next: i452  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1223 
lastLocationAccess: - 
=== Succesors ===
next: v431 
=== Usages ===
v459 
=== Predecessor ===
j427 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1223 lastLocationAccess: - #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i452 
y: i418 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i452 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
i452 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v430 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a453 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a453  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
result [v15|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
a453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a453 <|@
result v16|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1224 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
a454 v460 
=== Predecessor ===
v429 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1224 lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a453 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a453  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v433 
=== Usages ===
=== Predecessor ===
a453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v437 #falseSuccessor: v433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j455 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j455  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
j455 v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j455 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
v440 j451 v1227 
=== Predecessor ===
v433 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1225 lastLocationAccess: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j455 
y: j406 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j455 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a454 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a453 
=== Succesors ===
=== Usages ===
j445 v448 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a453  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v441 
=== Usages ===
=== Predecessor ===
j455 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v442 #falseSuccessor: v441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a454 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a454 #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v448 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
j456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1226 
lastLocationAccess: - 
=== Succesors ===
next: j445 
=== Usages ===
v1227 
=== Predecessor ===
v441 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1226 lastLocationAccess: - #next: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a454 
=== Succesors ===
next: v457 
=== Usages ===
v457 
=== Predecessor ===
j456 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a454 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
result [v19|QWORD + v17|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j456 
index: j455 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: j455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1227 
lastLocationAccess: - 
value: j445 
stateAfter: - 
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
j445 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1227 lastLocationAccess: - value: j445 stateAfter: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j455 
y: j409 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j455 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1225 
lastLocationAccess: - 
value: j451 
stateAfter: - 
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1225 lastLocationAccess: - value: j451 stateAfter: - #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v434 v436 v447 v449 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v434 v436 v447 v449 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1149 v28 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1149 v28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v121 
address: v1200 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v121 address: v1200 lastLocationAccess: - value: a95 stateAfter: - #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i50 
y: i4 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i50 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v20 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v20 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i1158 
y: i359 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1158 y: i359  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i149 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v142 
values: i50 i356 
=== Succesors ===
=== Usages ===
v143 j1166 v1201 i169 i356 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v142 values: i50 i356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 20
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.006139584328
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v158 
=== Succesors ===
next: v146 
=== Usages ===
v144 v148 i149 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v158 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i149 
y: i360 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i149 y: i360  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.7241671292960365
stamp: void
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v145 #falseSuccessor: v144  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
v157 
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j467 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j467 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j468 
=== Usages ===
v1228 v1230 v1231 
=== Predecessor ===
v506 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j468  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
result [v6|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: i149 
=== Succesors ===
=== Usages ===
v154 j468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: i149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
result [v6|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1201 
=== Succesors ===
next: i493 
=== Usages ===
v1229 
=== Predecessor ===
j467 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1201 #next: i493  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
i493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i493 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1228 
lastLocationAccess: - 
=== Succesors ===
next: v472 
=== Usages ===
v500 
=== Predecessor ===
j468 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1228 lastLocationAccess: - #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i493 
y: i418 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i493 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v471 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
i493 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v471 #falseSuccessor: v470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v471 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a494 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a494  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
result [v24|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
a494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a494 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1229 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
a495 v501 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1229 lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a494 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
a494 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v478 #falseSuccessor: v474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j496 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j496  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
j496 v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j496 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1230 
lastLocationAccess: - 
=== Succesors ===
next: v484 
=== Usages ===
v481 j492 v1232 
=== Predecessor ===
v474 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1230 lastLocationAccess: - #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j496 
y: j406 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j496 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a495 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a494 
=== Succesors ===
=== Usages ===
j486 v489 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a494  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
j496 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v483 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a495 
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a495 #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j497 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j497 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1231 
lastLocationAccess: - 
=== Succesors ===
next: j486 
=== Usages ===
v1232 
=== Predecessor ===
v482 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1231 lastLocationAccess: - #next: j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j486 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a495 
=== Succesors ===
next: v498 
=== Usages ===
v498 
=== Predecessor ===
j497 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a495 #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
result [v28|QWORD + v26|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j497 
index: j496 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j497 index: j496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1232 
lastLocationAccess: - 
value: j486 
stateAfter: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
j486 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1232 lastLocationAccess: - value: j486 stateAfter: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j496 
y: j409 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j496 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1230 
lastLocationAccess: - 
value: j492 
stateAfter: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1230 lastLocationAccess: - value: j492 stateAfter: - #next: v488  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v475 v477 v488 v490 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v475 v477 v488 v490 #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1149 v145 
=== Succesors ===
=== Usages ===
v335 v154 v309 v198 v329 v220 v289 v227 v323 v245 v303 v252 v317 v259 v296 v265 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1149 v145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1201 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1201 lastLocationAccess: - value: a95 stateAfter: - #next: v546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j507 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j507 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j508 
=== Usages ===
v1233 v1235 v1236 
=== Predecessor ===
v546 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j508  <|@  <|@
f <@~|@floating>@ <|@
tid j1166 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i149 
=== Succesors ===
=== Usages ===
v1203 v1204 v1205 v1206 v1207 v1208 v1209 v1210 v1211 v1212 v1213 v1214 v1215 v1216 v1217 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i149  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v198 j508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1203 
=== Succesors ===
next: i533 
=== Usages ===
v1234 
=== Predecessor ===
j507 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1203 #next: i533  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
i533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1233 
lastLocationAccess: - 
=== Succesors ===
next: v512 
=== Usages ===
v540 
=== Predecessor ===
j508 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1233 lastLocationAccess: - #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i533 
y: i418 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i533 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
i533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v511 #falseSuccessor: v510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a534 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a534  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
result [v31|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j508 
index: - 
=== Succesors ===
=== Usages ===
a534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j508 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a534 <|@
result v32|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1234 
lastLocationAccess: - 
=== Succesors ===
next: v519 
=== Usages ===
a535 v541 
=== Predecessor ===
v510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1234 lastLocationAccess: - #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a534  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
a534 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v518 #falseSuccessor: v514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j536 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j536 v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j536 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1235 
lastLocationAccess: - 
=== Succesors ===
next: v524 
=== Usages ===
v521 j532 v1237 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1235 lastLocationAccess: - #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j536 
y: j406 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j536 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a535 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
j526 v529 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a534  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v521 
=== Succesors ===
trueSuccessor: v523 
falseSuccessor: v522 
=== Usages ===
=== Predecessor ===
j536 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v521 #trueSuccessor: v523 #falseSuccessor: v522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a535 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a535 #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j537 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j537  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j507 
index: - 
=== Succesors ===
=== Usages ===
j537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j507 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j537 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1236 
lastLocationAccess: - 
=== Succesors ===
next: j526 
=== Usages ===
v1237 
=== Predecessor ===
v522 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1236 lastLocationAccess: - #next: j526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j526 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a535 
=== Succesors ===
next: v538 
=== Usages ===
v538 
=== Predecessor ===
j537 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a535 #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
result [v35|QWORD + v33|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j537 
index: j536 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j537 index: j536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1237 
lastLocationAccess: - 
value: j526 
stateAfter: - 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
j526 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1237 lastLocationAccess: - value: j526 stateAfter: - #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j536 
y: j409 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j536 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1235 
lastLocationAccess: - 
value: j532 
stateAfter: - 
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1235 lastLocationAccess: - value: j532 stateAfter: - #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v515 v517 v528 v530 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v515 v517 v528 v530 #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1203 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1203 lastLocationAccess: - value: a95 stateAfter: - #next: v586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j547 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j547 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j548 
=== Usages ===
v1238 v1240 v1241 
=== Predecessor ===
v586 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j548  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v220 j548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j548 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1204 
=== Succesors ===
next: i573 
=== Usages ===
v1239 
=== Predecessor ===
j547 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1204 #next: i573  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j547 
index: - 
=== Succesors ===
=== Usages ===
i573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i573 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1238 
lastLocationAccess: - 
=== Succesors ===
next: v552 
=== Usages ===
v580 
=== Predecessor ===
j548 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1238 lastLocationAccess: - #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i573 
y: i418 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i573 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
i573 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v551 #falseSuccessor: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a574 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a574  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
result [v37|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j548 
index: - 
=== Succesors ===
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j548 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a574 <|@
result v38|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
lastLocationAccess: - 
=== Succesors ===
next: v559 
=== Usages ===
a575 v581 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1239 lastLocationAccess: - #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a574 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a574  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
a574 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v558 #falseSuccessor: v554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v557  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
v558 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j576 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j576  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j547 
index: - 
=== Succesors ===
=== Usages ===
j576 v579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
lastLocationAccess: - 
=== Succesors ===
next: v564 
=== Usages ===
v561 j572 v1242 
=== Predecessor ===
v554 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1240 lastLocationAccess: - #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j576 
y: j406 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j576 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a575 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a574 
=== Succesors ===
=== Usages ===
j566 v569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a574  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v563 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
j576 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v563 #falseSuccessor: v562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a575 
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a575 #next: v570  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
v569 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j577 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j577  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j547 
index: - 
=== Succesors ===
=== Usages ===
j577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j577 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
lastLocationAccess: - 
=== Succesors ===
next: j566 
=== Usages ===
v1242 
=== Predecessor ===
v562 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1241 lastLocationAccess: - #next: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j566 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a575 
=== Succesors ===
next: v578 
=== Usages ===
v578 
=== Predecessor ===
j577 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a575 #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
result [v41|QWORD + v39|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j577 
index: j576 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j577 index: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
lastLocationAccess: - 
value: j566 
stateAfter: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
j566 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1242 lastLocationAccess: - value: j566 stateAfter: - #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid j572 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j576 
y: j409 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j576 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
lastLocationAccess: - 
value: j572 
stateAfter: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1240 lastLocationAccess: - value: j572 stateAfter: - #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v555 v557 v568 v570 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v555 v557 v568 v570 #next: v220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1204 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1204 lastLocationAccess: - value: a95 stateAfter: - #next: v626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j587 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j587 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j588 
=== Usages ===
v1243 v1245 v1246 
=== Predecessor ===
v626 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j588  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v227 j588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j588 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1205 
=== Succesors ===
next: i613 
=== Usages ===
v1244 
=== Predecessor ===
j587 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1205 #next: i613  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
i613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
lastLocationAccess: - 
=== Succesors ===
next: v592 
=== Usages ===
v620 
=== Predecessor ===
j588 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 lastLocationAccess: - #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i613 
y: i418 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i613 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v620 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v590 
=== Usages ===
=== Predecessor ===
i613 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v620 #trueSuccessor: v591 #falseSuccessor: v590  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a614 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a614  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
result [v43|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j588 
index: - 
=== Succesors ===
=== Usages ===
a614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j588 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a614 <|@
result v44|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
a615 v621 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a614 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a614  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v621 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
a614 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v621 #trueSuccessor: v598 #falseSuccessor: v594  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j616 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j616  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
j616 v619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j616 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
=== Succesors ===
next: v604 
=== Usages ===
v601 j612 v1247 
=== Predecessor ===
v594 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j616 
y: j406 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j616 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a615 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a614 
=== Succesors ===
=== Usages ===
j606 v609 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a614  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v601 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v602 
=== Usages ===
=== Predecessor ===
j616 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v601 #trueSuccessor: v603 #falseSuccessor: v602  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a615 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a615 #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j617 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j617  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
j617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j617 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
lastLocationAccess: - 
=== Succesors ===
next: j606 
=== Usages ===
v1247 
=== Predecessor ===
v602 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 lastLocationAccess: - #next: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a615 
=== Succesors ===
next: v618 
=== Usages ===
v618 
=== Predecessor ===
j617 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a615 #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
result [v47|QWORD + v45|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j617 
index: j616 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
lastLocationAccess: - 
value: j606 
stateAfter: - 
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
j606 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1247 lastLocationAccess: - value: j606 stateAfter: - #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j616 
y: j409 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j616 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
lastLocationAccess: - 
value: j612 
stateAfter: - 
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1245 lastLocationAccess: - value: j612 stateAfter: - #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v619 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v595 v597 v608 v610 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v595 v597 v608 v610 #next: v227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1205 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1205 lastLocationAccess: - value: a95 stateAfter: - #next: v666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j627 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j627 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j628 
=== Usages ===
v1248 v1250 v1251 
=== Predecessor ===
v666 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j628  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v245 j628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j628 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1206 
=== Succesors ===
next: i653 
=== Usages ===
v1249 
=== Predecessor ===
j627 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1206 #next: i653  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j627 
index: - 
=== Succesors ===
=== Usages ===
i653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
v660 
=== Predecessor ===
j628 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i653 
y: i418 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i653 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
i653 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v631 #falseSuccessor: v630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a654 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a654  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
result [v49|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
a654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a654 <|@
result v50|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
lastLocationAccess: - 
=== Succesors ===
next: v639 
=== Usages ===
a655 v661 
=== Predecessor ===
v630 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 lastLocationAccess: - #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a654 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a654  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
a654 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v638 #falseSuccessor: v634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j656 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j656  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j627 
index: - 
=== Succesors ===
=== Usages ===
j656 v659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j656 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
lastLocationAccess: - 
=== Succesors ===
next: v644 
=== Usages ===
v641 j652 v1252 
=== Predecessor ===
v634 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1250 lastLocationAccess: - #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j656 
y: j406 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j656 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a655 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a654 
=== Succesors ===
=== Usages ===
j646 v649 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a654  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v641 
=== Succesors ===
trueSuccessor: v643 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
j656 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v641 #trueSuccessor: v643 #falseSuccessor: v642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a655 
=== Succesors ===
next: v650 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a655 #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v649 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j657 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j657  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j627 
index: - 
=== Succesors ===
=== Usages ===
j657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j657 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
lastLocationAccess: - 
=== Succesors ===
next: j646 
=== Usages ===
v1252 
=== Predecessor ===
v642 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 lastLocationAccess: - #next: j646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j646 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a655 
=== Succesors ===
next: v658 
=== Usages ===
v658 
=== Predecessor ===
j657 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a655 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
result [v53|QWORD + v51|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j657 
index: j656 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: j656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
lastLocationAccess: - 
value: j646 
stateAfter: - 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
j646 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1252 lastLocationAccess: - value: j646 stateAfter: - #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid j652 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j656 
y: j409 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j656 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
lastLocationAccess: - 
value: j652 
stateAfter: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1250 lastLocationAccess: - value: j652 stateAfter: - #next: v648  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
v659 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v635 v637 v648 v650 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v635 v637 v648 v650 #next: v245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1206 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1206 lastLocationAccess: - value: a95 stateAfter: - #next: v706  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j667 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j667 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j668 
=== Usages ===
v1253 v1255 v1256 
=== Predecessor ===
v706 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j668  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v252 j668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j668 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1207 
=== Succesors ===
next: i693 
=== Usages ===
v1254 
=== Predecessor ===
j667 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1207 #next: i693  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
i693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
lastLocationAccess: - 
=== Succesors ===
next: v672 
=== Usages ===
v700 
=== Predecessor ===
j668 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 lastLocationAccess: - #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i693 
y: i418 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i693 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v671 
falseSuccessor: v670 
=== Usages ===
=== Predecessor ===
i693 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v671 #falseSuccessor: v670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a694 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a694  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
result [v55|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j668 
index: - 
=== Succesors ===
=== Usages ===
a694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a694 <|@
result v56|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
lastLocationAccess: - 
=== Succesors ===
next: v679 
=== Usages ===
a695 v701 
=== Predecessor ===
v670 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 lastLocationAccess: - #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a694 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a694  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v701 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
a694 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v701 #trueSuccessor: v678 #falseSuccessor: v674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j696 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j696  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
j696 v699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j696 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
lastLocationAccess: - 
=== Succesors ===
next: v684 
=== Usages ===
v681 j692 v1257 
=== Predecessor ===
v674 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 lastLocationAccess: - #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j696 
y: j406 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j696 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a695 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a694 
=== Succesors ===
=== Usages ===
j686 v689 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a694  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v681 
=== Succesors ===
trueSuccessor: v683 
falseSuccessor: v682 
=== Usages ===
=== Predecessor ===
j696 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v681 #trueSuccessor: v683 #falseSuccessor: v682  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a695 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a695 #next: v690  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j697 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j697  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j667 
index: - 
=== Succesors ===
=== Usages ===
j697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j667 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j697 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
lastLocationAccess: - 
=== Succesors ===
next: j686 
=== Usages ===
v1257 
=== Predecessor ===
v682 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 lastLocationAccess: - #next: j686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j686 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a695 
=== Succesors ===
next: v698 
=== Usages ===
v698 
=== Predecessor ===
j697 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a695 #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
result [v59|QWORD + v57|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j697 
index: j696 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j697 index: j696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
lastLocationAccess: - 
value: j686 
stateAfter: - 
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
j686 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1257 lastLocationAccess: - value: j686 stateAfter: - #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid j692 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j696 
y: j409 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j696 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
lastLocationAccess: - 
value: j692 
stateAfter: - 
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1255 lastLocationAccess: - value: j692 stateAfter: - #next: v688  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v675 v677 v688 v690 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v675 v677 v688 v690 #next: v252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1207 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1207 lastLocationAccess: - value: a95 stateAfter: - #next: v746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j707 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j707 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j708 
=== Usages ===
v1258 v1260 v1261 
=== Predecessor ===
v746 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j708  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v259 j708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j708 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1208 
=== Succesors ===
next: i733 
=== Usages ===
v1259 
=== Predecessor ===
j707 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1208 #next: i733  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j707 
index: - 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i733 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
lastLocationAccess: - 
=== Succesors ===
next: v712 
=== Usages ===
v740 
=== Predecessor ===
j708 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1258 lastLocationAccess: - #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i733 
y: i418 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i733 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v740 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
i733 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v740 #trueSuccessor: v711 #falseSuccessor: v710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a734 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a734  <|@  <|@
f <@~|@floating>@ <|@
tid v1259 <|@
result [v61|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j708 
index: - 
=== Succesors ===
=== Usages ===
a734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j708 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a734 <|@
result v62|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1259 
lastLocationAccess: - 
=== Succesors ===
next: v719 
=== Usages ===
a735 v741 
=== Predecessor ===
v710 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1259 lastLocationAccess: - #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a734 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a734  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v741 
=== Succesors ===
trueSuccessor: v718 
falseSuccessor: v714 
=== Usages ===
=== Predecessor ===
a734 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v741 #trueSuccessor: v718 #falseSuccessor: v714  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v718 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j736 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j736  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j707 
index: - 
=== Succesors ===
=== Usages ===
j736 v739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j736 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
=== Succesors ===
next: v724 
=== Usages ===
v721 j732 v1262 
=== Predecessor ===
v714 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j736 
y: j406 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j736 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a735 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a734 
=== Succesors ===
=== Usages ===
j726 v729 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a734  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
j736 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v723 #falseSuccessor: v722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a735 
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a735 #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j737 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j737  <|@  <|@
f <@~|@floating>@ <|@
tid v1261 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j707 
index: - 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j707 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j737 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1261 
lastLocationAccess: - 
=== Succesors ===
next: j726 
=== Usages ===
v1262 
=== Predecessor ===
v722 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1261 lastLocationAccess: - #next: j726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j726 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a735 
=== Succesors ===
next: v738 
=== Usages ===
v738 
=== Predecessor ===
j737 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a735 #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
result [v65|QWORD + v63|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j737 
index: j736 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1262 
lastLocationAccess: - 
value: j726 
stateAfter: - 
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
j726 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1262 lastLocationAccess: - value: j726 stateAfter: - #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid j732 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j736 
y: j409 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j736 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1260 
lastLocationAccess: - 
value: j732 
stateAfter: - 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1260 lastLocationAccess: - value: j732 stateAfter: - #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v715 v717 v728 v730 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v715 v717 v728 v730 #next: v259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1208 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v786 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1208 lastLocationAccess: - value: a95 stateAfter: - #next: v786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j747 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j747 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j748 
=== Usages ===
v1263 v1265 v1266 
=== Predecessor ===
v786 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j748  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v265 j748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j748 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1209 
=== Succesors ===
next: i773 
=== Usages ===
v1264 
=== Predecessor ===
j747 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1209 #next: i773  <|@  <|@
f <@~|@floating>@ <|@
tid v1263 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
i773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i773 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1263 
lastLocationAccess: - 
=== Succesors ===
next: v752 
=== Usages ===
v780 
=== Predecessor ===
j748 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1263 lastLocationAccess: - #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i773 
y: i418 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i773 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v751 
falseSuccessor: v750 
=== Usages ===
=== Predecessor ===
i773 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v751 #falseSuccessor: v750  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v751 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a774 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a774  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
result [v67|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j748 
index: - 
=== Succesors ===
=== Usages ===
a774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a774 <|@
result v68|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1264 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
a775 v781 
=== Predecessor ===
v750 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1264 lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a774 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a774  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v781 
=== Succesors ===
trueSuccessor: v758 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
a774 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v781 #trueSuccessor: v758 #falseSuccessor: v754  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v758 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j776 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j776  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
j776 v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
=== Succesors ===
next: v764 
=== Usages ===
v761 j772 v1267 
=== Predecessor ===
v754 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j776 
y: j406 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j776 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a775 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a774 
=== Succesors ===
=== Usages ===
j766 v769 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a774  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v763 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
j776 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v763 #falseSuccessor: v762  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a775 
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a775 #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j777 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j777  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j747 
index: - 
=== Succesors ===
=== Usages ===
j777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j777 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1266 
lastLocationAccess: - 
=== Succesors ===
next: j766 
=== Usages ===
v1267 
=== Predecessor ===
v762 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1266 lastLocationAccess: - #next: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j766 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a775 
=== Succesors ===
next: v778 
=== Usages ===
v778 
=== Predecessor ===
j777 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a775 #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
result [v71|QWORD + v69|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j777 
index: j776 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j777 index: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1267 
lastLocationAccess: - 
value: j766 
stateAfter: - 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
j766 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1267 lastLocationAccess: - value: j766 stateAfter: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid j772 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j776 
y: j409 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j776 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1265 
lastLocationAccess: - 
value: j772 
stateAfter: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1265 lastLocationAccess: - value: j772 stateAfter: - #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v755 v757 v768 v770 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v755 v757 v768 v770 #next: v265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1209 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1209 lastLocationAccess: - value: a95 stateAfter: - #next: v826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j787 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j787 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j788 
=== Usages ===
v1268 v1270 v1271 
=== Predecessor ===
v826 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j788  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v289 j788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j788 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 48] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1210 
=== Succesors ===
next: i813 
=== Usages ===
v1269 
=== Predecessor ===
j787 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1210 #next: i813  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j787 
index: - 
=== Succesors ===
=== Usages ===
i813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j787 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1268 
lastLocationAccess: - 
=== Succesors ===
next: v792 
=== Usages ===
v820 
=== Predecessor ===
j788 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1268 lastLocationAccess: - #next: v792  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i418 
=== Succesors ===
=== Usages ===
v792 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i813 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v791 
falseSuccessor: v790 
=== Usages ===
=== Predecessor ===
i813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v791 #falseSuccessor: v790  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
v792 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v795  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v791 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a814 
=== Usages ===
=== Predecessor ===
v792 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a814  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
result [v73|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j788 
index: - 
=== Succesors ===
=== Usages ===
a814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j788 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a814 <|@
result v74|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1269 
lastLocationAccess: - 
=== Succesors ===
next: v799 
=== Usages ===
a815 v821 
=== Predecessor ===
v790 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1269 lastLocationAccess: - #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a814 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a814  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v794 
=== Usages ===
=== Predecessor ===
a814 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v798 #falseSuccessor: v794  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v797  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j816 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j816  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j787 
index: - 
=== Succesors ===
=== Usages ===
j816 v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j787 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j816 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
=== Succesors ===
next: v804 
=== Usages ===
v801 j812 v1272 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j406 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j816 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a815 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a814 
=== Succesors ===
=== Usages ===
j806 v809 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a814  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v803 
falseSuccessor: v802 
=== Usages ===
=== Predecessor ===
j816 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v803 #falseSuccessor: v802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a815 
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a815 #next: v810  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j817 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j817  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j787 
index: - 
=== Succesors ===
=== Usages ===
j817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j787 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j817 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1271 
lastLocationAccess: - 
=== Succesors ===
next: j806 
=== Usages ===
v1272 
=== Predecessor ===
v802 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1271 lastLocationAccess: - #next: j806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j806 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a815 
=== Succesors ===
next: v818 
=== Usages ===
v818 
=== Predecessor ===
j817 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a815 #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
result [v77|QWORD + v75|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j817 
index: j816 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j817 index: j816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1272 
lastLocationAccess: - 
value: j806 
stateAfter: - 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
j806 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1272 lastLocationAccess: - value: j806 stateAfter: - #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid j812 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j816 
y: j409 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j816 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1270 
lastLocationAccess: - 
value: j812 
stateAfter: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1270 lastLocationAccess: - value: j812 stateAfter: - #next: v808  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v819 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v795 v797 v808 v810 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v795 v797 v808 v810 #next: v289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1210 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1210 lastLocationAccess: - value: a95 stateAfter: - #next: v866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j827 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j827 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j828 
=== Usages ===
v1273 v1275 v1276 
=== Predecessor ===
v866 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j828  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v296 j828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j828 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 52] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1211 
=== Succesors ===
next: i853 
=== Usages ===
v1274 
=== Predecessor ===
j827 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1211 #next: i853  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j827 
index: - 
=== Succesors ===
=== Usages ===
i853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j827 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i853 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1273 
lastLocationAccess: - 
=== Succesors ===
next: v832 
=== Usages ===
v860 
=== Predecessor ===
j828 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1273 lastLocationAccess: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i853 
y: i418 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i853 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v860 
=== Succesors ===
trueSuccessor: v831 
falseSuccessor: v830 
=== Usages ===
=== Predecessor ===
i853 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v860 #trueSuccessor: v831 #falseSuccessor: v830  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v831 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a854 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a854  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
result [v79|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j828 
index: - 
=== Succesors ===
=== Usages ===
a854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j828 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a854 <|@
result v80|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1274 
lastLocationAccess: - 
=== Succesors ===
next: v839 
=== Usages ===
a855 v861 
=== Predecessor ===
v830 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1274 lastLocationAccess: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a854 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a854  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v861 
=== Succesors ===
trueSuccessor: v838 
falseSuccessor: v834 
=== Usages ===
=== Predecessor ===
a854 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v861 #trueSuccessor: v838 #falseSuccessor: v834  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v838 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j856 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j856  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j827 
index: - 
=== Succesors ===
=== Usages ===
j856 v859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j827 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j856 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
lastLocationAccess: - 
=== Succesors ===
next: v844 
=== Usages ===
v841 j852 v1277 
=== Predecessor ===
v834 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1275 lastLocationAccess: - #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j856 
y: j406 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j856 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a855 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a854 
=== Succesors ===
=== Usages ===
j846 v849 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a854  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v843 
falseSuccessor: v842 
=== Usages ===
=== Predecessor ===
j856 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v843 #falseSuccessor: v842  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a855 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a855 #next: v850  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j857 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j857  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j827 
index: - 
=== Succesors ===
=== Usages ===
j857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j827 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j857 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1276 
lastLocationAccess: - 
=== Succesors ===
next: j846 
=== Usages ===
v1277 
=== Predecessor ===
v842 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1276 lastLocationAccess: - #next: j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j846 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a855 
=== Succesors ===
next: v858 
=== Usages ===
v858 
=== Predecessor ===
j857 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a855 #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
result [v83|QWORD + v81|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j857 
index: j856 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j857 index: j856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1277 
lastLocationAccess: - 
value: j846 
stateAfter: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
j846 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1277 lastLocationAccess: - value: j846 stateAfter: - #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j856 
y: j409 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j856 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1275 
lastLocationAccess: - 
value: j852 
stateAfter: - 
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1275 lastLocationAccess: - value: j852 stateAfter: - #next: v848  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v859 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v835 v837 v848 v850 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v835 v837 v848 v850 #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1211 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1211 lastLocationAccess: - value: a95 stateAfter: - #next: v906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j867 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j867 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j868 
=== Usages ===
v1278 v1280 v1281 
=== Predecessor ===
v906 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j868  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v303 j868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 56] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1212 
=== Succesors ===
next: i893 
=== Usages ===
v1279 
=== Predecessor ===
j867 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1212 #next: i893  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
i893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i893 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1278 
lastLocationAccess: - 
=== Succesors ===
next: v872 
=== Usages ===
v900 
=== Predecessor ===
j868 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1278 lastLocationAccess: - #next: v872  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i893 
y: i418 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i893 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v871 
falseSuccessor: v870 
=== Usages ===
=== Predecessor ===
i893 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v871 #falseSuccessor: v870  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v871 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a894 
=== Usages ===
=== Predecessor ===
v872 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a894  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result [v85|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j868 
index: - 
=== Succesors ===
=== Usages ===
a894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a894 <|@
result v86|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1279 
lastLocationAccess: - 
=== Succesors ===
next: v879 
=== Usages ===
a895 v901 
=== Predecessor ===
v870 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1279 lastLocationAccess: - #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a894 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a894  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v901 
=== Succesors ===
trueSuccessor: v878 
falseSuccessor: v874 
=== Usages ===
=== Predecessor ===
a894 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v901 #trueSuccessor: v878 #falseSuccessor: v874  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j896 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j896  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
j896 v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j896 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
lastLocationAccess: - 
=== Succesors ===
next: v884 
=== Usages ===
v881 j892 v1282 
=== Predecessor ===
v874 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1280 lastLocationAccess: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j896 
y: j406 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j896 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a895 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a894 
=== Succesors ===
=== Usages ===
j886 v889 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a894  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
j896 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v883 #falseSuccessor: v882  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a895 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a895 #next: v890  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v889 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j897 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j897  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j867 
index: - 
=== Succesors ===
=== Usages ===
j897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j897 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1281 
lastLocationAccess: - 
=== Succesors ===
next: j886 
=== Usages ===
v1282 
=== Predecessor ===
v882 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1281 lastLocationAccess: - #next: j886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j886 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a895 
=== Succesors ===
next: v898 
=== Usages ===
v898 
=== Predecessor ===
j897 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a895 #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
result [v89|QWORD + v87|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j897 
index: j896 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j897 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1282 
lastLocationAccess: - 
value: j886 
stateAfter: - 
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
j886 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1282 lastLocationAccess: - value: j886 stateAfter: - #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j896 
y: j409 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j896 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1280 
lastLocationAccess: - 
value: j892 
stateAfter: - 
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v898 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1280 lastLocationAccess: - value: j892 stateAfter: - #next: v888  <|@  <|@
f <@*|@fixed>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v877 v888 v890 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v877 v888 v890 #next: v303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1212 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1212 lastLocationAccess: - value: a95 stateAfter: - #next: v946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j907 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j907 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j908 
=== Usages ===
v1283 v1285 v1286 
=== Predecessor ===
v946 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j908  <|@  <|@
f <@~|@floating>@ <|@
tid v1213 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v309 j908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j908 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 60] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1213 
=== Succesors ===
next: i933 
=== Usages ===
v1284 
=== Predecessor ===
j907 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1213 #next: i933  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j907 
index: - 
=== Succesors ===
=== Usages ===
i933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j907 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i933 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1283 
lastLocationAccess: - 
=== Succesors ===
next: v912 
=== Usages ===
v940 
=== Predecessor ===
j908 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1283 lastLocationAccess: - #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i933 
y: i418 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i933 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v910 
=== Usages ===
=== Predecessor ===
i933 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v911 #falseSuccessor: v910  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a934 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a934  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
result [v91|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j908 
index: - 
=== Succesors ===
=== Usages ===
a934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j908 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a934 <|@
result v92|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1284 
lastLocationAccess: - 
=== Succesors ===
next: v919 
=== Usages ===
a935 v941 
=== Predecessor ===
v910 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1284 lastLocationAccess: - #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a934 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a934  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v941 
=== Succesors ===
trueSuccessor: v918 
falseSuccessor: v914 
=== Usages ===
=== Predecessor ===
a934 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v941 #trueSuccessor: v918 #falseSuccessor: v914  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v918 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j936 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j936  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j907 
index: - 
=== Succesors ===
=== Usages ===
j936 v939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j907 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j936 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
=== Succesors ===
next: v924 
=== Usages ===
v921 j932 v1287 
=== Predecessor ===
v914 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j936 
y: j406 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j936 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a935 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a934 
=== Succesors ===
=== Usages ===
j926 v929 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a934  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v921 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
j936 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v921 #trueSuccessor: v923 #falseSuccessor: v922  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v929 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a935 
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a935 #next: v930  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j937 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j937  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j907 
index: - 
=== Succesors ===
=== Usages ===
j937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j907 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j937 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1286 
lastLocationAccess: - 
=== Succesors ===
next: j926 
=== Usages ===
v1287 
=== Predecessor ===
v922 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1286 lastLocationAccess: - #next: j926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j926 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a935 
=== Succesors ===
next: v938 
=== Usages ===
v938 
=== Predecessor ===
j937 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a935 #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
result [v95|QWORD + v93|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j937 
index: j936 
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j937 index: j936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1287 
lastLocationAccess: - 
value: j926 
stateAfter: - 
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
j926 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1287 lastLocationAccess: - value: j926 stateAfter: - #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid j932 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j936 
y: j409 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j936 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1285 
lastLocationAccess: - 
value: j932 
stateAfter: - 
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1285 lastLocationAccess: - value: j932 stateAfter: - #next: v928  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v915 v917 v928 v930 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v915 v917 v928 v930 #next: v309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1213 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1213 lastLocationAccess: - value: a95 stateAfter: - #next: v986  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j947 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j947 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j948 
=== Usages ===
v1288 v1290 v1291 
=== Predecessor ===
v986 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j948  <|@  <|@
f <@~|@floating>@ <|@
tid v1214 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v317 j948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j948 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 64] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1214 
=== Succesors ===
next: i973 
=== Usages ===
v1289 
=== Predecessor ===
j947 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1214 #next: i973  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j947 
index: - 
=== Succesors ===
=== Usages ===
i973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i973 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
lastLocationAccess: - 
=== Succesors ===
next: v952 
=== Usages ===
v980 
=== Predecessor ===
j948 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 lastLocationAccess: - #next: v952  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i973 
y: i418 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i973 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v980 
=== Succesors ===
trueSuccessor: v951 
falseSuccessor: v950 
=== Usages ===
=== Predecessor ===
i973 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v980 #trueSuccessor: v951 #falseSuccessor: v950  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
v951 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a974 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a974  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
result [v97|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j948 
index: - 
=== Succesors ===
=== Usages ===
a974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a974 <|@
result v98|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
lastLocationAccess: - 
=== Succesors ===
next: v959 
=== Usages ===
a975 v981 
=== Predecessor ===
v950 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1289 lastLocationAccess: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a974 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a974  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v981 
=== Succesors ===
trueSuccessor: v958 
falseSuccessor: v954 
=== Usages ===
=== Predecessor ===
a974 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v981 #trueSuccessor: v958 #falseSuccessor: v954  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v957  <|@  <|@
f <@*|@fixed>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
v958 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j976 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j976  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j947 
index: - 
=== Succesors ===
=== Usages ===
j976 v979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j976 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1290 
lastLocationAccess: - 
=== Succesors ===
next: v964 
=== Usages ===
v961 j972 v1292 
=== Predecessor ===
v954 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1290 lastLocationAccess: - #next: v964  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j976 
y: j406 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j976 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a975 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a974 
=== Succesors ===
=== Usages ===
j966 v969 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a974  <|@  <|@
f <@*|@fixed>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v961 
=== Succesors ===
trueSuccessor: v963 
falseSuccessor: v962 
=== Usages ===
=== Predecessor ===
j976 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v961 #trueSuccessor: v963 #falseSuccessor: v962  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a975 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a975 #next: v970  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j977 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j977  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j947 
index: - 
=== Succesors ===
=== Usages ===
j977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j947 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j977 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1291 
lastLocationAccess: - 
=== Succesors ===
next: j966 
=== Usages ===
v1292 
=== Predecessor ===
v962 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1291 lastLocationAccess: - #next: j966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j966 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a975 
=== Succesors ===
next: v978 
=== Usages ===
v978 
=== Predecessor ===
j977 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a975 #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
result [v101|QWORD + v99|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j977 
index: j976 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j977 index: j976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1292 
lastLocationAccess: - 
value: j966 
stateAfter: - 
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
j966 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1292 lastLocationAccess: - value: j966 stateAfter: - #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid j972 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j976 
y: j409 
=== Succesors ===
=== Usages ===
v979 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j976 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1290 
lastLocationAccess: - 
value: j972 
stateAfter: - 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1290 lastLocationAccess: - value: j972 stateAfter: - #next: v968  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
v979 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v955 v957 v968 v970 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v955 v957 v968 v970 #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1214 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1214 lastLocationAccess: - value: a95 stateAfter: - #next: v1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j987 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j987 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j988 
=== Usages ===
v1293 v1295 v1296 
=== Predecessor ===
v1026 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j988  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v323 j988 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j988 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 68] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1215 
=== Succesors ===
next: i1013 
=== Usages ===
v1294 
=== Predecessor ===
j987 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1215 #next: i1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j987 
index: - 
=== Succesors ===
=== Usages ===
i1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1293 
lastLocationAccess: - 
=== Succesors ===
next: v992 
=== Usages ===
v1020 
=== Predecessor ===
j988 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1293 lastLocationAccess: - #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i418 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1013 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1020 
=== Succesors ===
trueSuccessor: v991 
falseSuccessor: v990 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1020 #trueSuccessor: v991 #falseSuccessor: v990  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
v991 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1014 
=== Usages ===
=== Predecessor ===
v992 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
result [v103|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j988 
index: - 
=== Succesors ===
=== Usages ===
a1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j988 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1014 <|@
result v104|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
lastLocationAccess: - 
=== Succesors ===
next: v999 
=== Usages ===
a1015 v1021 
=== Predecessor ===
v990 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 lastLocationAccess: - #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1014 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1021 
=== Succesors ===
trueSuccessor: v998 
falseSuccessor: v994 
=== Usages ===
=== Predecessor ===
a1014 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1021 #trueSuccessor: v998 #falseSuccessor: v994  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v997  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1016 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j987 
index: - 
=== Succesors ===
=== Usages ===
j1016 v1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1016 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
lastLocationAccess: - 
=== Succesors ===
next: v1004 
=== Usages ===
v1001 j1012 v1297 
=== Predecessor ===
v994 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 lastLocationAccess: - #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1016 
y: j406 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1016 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a1015 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1014 
=== Succesors ===
=== Usages ===
j1006 v1009 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1001 
=== Succesors ===
trueSuccessor: v1003 
falseSuccessor: v1002 
=== Usages ===
=== Predecessor ===
j1016 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1001 #trueSuccessor: v1003 #falseSuccessor: v1002  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1015 
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1015 #next: v1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
v1009 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1017 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j987 
index: - 
=== Succesors ===
=== Usages ===
j1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j987 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1017 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1296 
lastLocationAccess: - 
=== Succesors ===
next: j1006 
=== Usages ===
v1297 
=== Predecessor ===
v1002 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1296 lastLocationAccess: - #next: j1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1006 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1015 
=== Succesors ===
next: v1018 
=== Usages ===
v1018 
=== Predecessor ===
j1017 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1015 #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
result [v107|QWORD + v105|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1017 
index: j1016 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1017 index: j1016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1297 
lastLocationAccess: - 
value: j1006 
stateAfter: - 
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
j1006 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1297 lastLocationAccess: - value: j1006 stateAfter: - #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid j1012 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1016 
y: j409 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1016 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
lastLocationAccess: - 
value: j1012 
stateAfter: - 
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1295 lastLocationAccess: - value: j1012 stateAfter: - #next: v1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
v1019 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v995 v997 v1008 v1010 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v995 v997 v1008 v1010 #next: v323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1215 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1215 lastLocationAccess: - value: a95 stateAfter: - #next: v1066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1027 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1027  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1027 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1028 
=== Usages ===
v1298 v1300 v1301 
=== Predecessor ===
v1066 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1028  <|@  <|@
f <@~|@floating>@ <|@
tid v1216 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v329 j1028 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1028 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 72] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1216 
=== Succesors ===
next: i1053 
=== Usages ===
v1299 
=== Predecessor ===
j1027 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1216 #next: i1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
i1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1053 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
lastLocationAccess: - 
=== Succesors ===
next: v1032 
=== Usages ===
v1060 
=== Predecessor ===
j1028 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1298 lastLocationAccess: - #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1053 
y: i418 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1053 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1060 
=== Succesors ===
trueSuccessor: v1031 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
i1053 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1060 #trueSuccessor: v1031 #falseSuccessor: v1030  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1031 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1054 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1054  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
result [v109|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1028 
index: - 
=== Succesors ===
=== Usages ===
a1054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1028 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1054 <|@
result v110|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
lastLocationAccess: - 
=== Succesors ===
next: v1039 
=== Usages ===
a1055 v1061 
=== Predecessor ===
v1030 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 lastLocationAccess: - #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1054 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1061 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1034 
=== Usages ===
=== Predecessor ===
a1054 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1061 #trueSuccessor: v1038 #falseSuccessor: v1034  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1056 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
j1056 v1059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1056 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
=== Succesors ===
next: v1044 
=== Usages ===
v1041 j1052 v1302 
=== Predecessor ===
v1034 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - #next: v1044  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1056 
y: j406 
=== Succesors ===
=== Usages ===
v1044 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1056 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
result v112|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1054 
=== Succesors ===
=== Usages ===
j1046 v1049 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1054  <|@  <|@
f <@*|@fixed>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1041 
=== Succesors ===
trueSuccessor: v1043 
falseSuccessor: v1042 
=== Usages ===
=== Predecessor ===
j1056 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1041 #trueSuccessor: v1043 #falseSuccessor: v1042  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1049 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1055 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
v1043 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1055 #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1049 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1057 
=== Usages ===
=== Predecessor ===
v1044 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1027 
index: - 
=== Succesors ===
=== Usages ===
j1057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1027 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1057 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1301 
lastLocationAccess: - 
=== Succesors ===
next: j1046 
=== Usages ===
v1302 
=== Predecessor ===
v1042 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1301 lastLocationAccess: - #next: j1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1046 <|@
result v112|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1055 
=== Succesors ===
next: v1058 
=== Usages ===
v1058 
=== Predecessor ===
j1057 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1055 #next: v1058  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
result [v113|QWORD + v111|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1057 
index: j1056 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1057 index: j1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
lastLocationAccess: - 
value: j1046 
stateAfter: - 
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
j1046 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1302 lastLocationAccess: - value: j1046 stateAfter: - #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1056 
y: j409 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1056 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
lastLocationAccess: - 
value: j1052 
stateAfter: - 
=== Succesors ===
next: v1048 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1300 lastLocationAccess: - value: j1052 stateAfter: - #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
v1059 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1035 v1037 v1048 v1050 
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1035 v1037 v1048 v1050 #next: v329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1216 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1216 lastLocationAccess: - value: a95 stateAfter: - #next: v1106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1067 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1067 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1068 
=== Usages ===
v1303 v1305 v1306 
=== Predecessor ===
v1106 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1068  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: j1166 
=== Succesors ===
=== Usages ===
v335 j1068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: j1166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1068 <|@
result [v6|QWORD[.] + v30|QWORD * 4 + 76] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1217 
=== Succesors ===
next: i1093 
=== Usages ===
v1304 
=== Predecessor ===
j1067 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1217 #next: i1093  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1067 
index: - 
=== Succesors ===
=== Usages ===
i1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1093 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1303 
lastLocationAccess: - 
=== Succesors ===
next: v1072 
=== Usages ===
v1100 
=== Predecessor ===
j1068 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1303 lastLocationAccess: - #next: v1072  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1093 
y: i418 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1093 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v1071 
falseSuccessor: v1070 
=== Usages ===
=== Predecessor ===
i1093 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v1071 #falseSuccessor: v1070  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1071 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1094 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1094  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
result [v115|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1068 
index: - 
=== Succesors ===
=== Usages ===
a1094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1068 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1094 <|@
result v116|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1304 
lastLocationAccess: - 
=== Succesors ===
next: v1079 
=== Usages ===
a1095 v1101 
=== Predecessor ===
v1070 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1304 lastLocationAccess: - #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1094 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1101 
=== Succesors ===
trueSuccessor: v1078 
falseSuccessor: v1074 
=== Usages ===
=== Predecessor ===
a1094 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1101 #trueSuccessor: v1078 #falseSuccessor: v1074  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1078 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1096 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1305 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1067 
index: - 
=== Succesors ===
=== Usages ===
j1096 v1099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1096 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
lastLocationAccess: - 
=== Succesors ===
next: v1084 
=== Usages ===
v1081 j1092 v1307 
=== Predecessor ===
v1074 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1305 lastLocationAccess: - #next: v1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1096 
y: j406 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1096 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a1095 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1094 
=== Succesors ===
=== Usages ===
j1086 v1089 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v1083 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
j1096 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v1083 #falseSuccessor: v1082  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1095 
=== Succesors ===
next: v1090 
=== Usages ===
=== Predecessor ===
v1083 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1095 #next: v1090  <|@  <|@
f <@*|@fixed>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1089 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1097 
=== Usages ===
=== Predecessor ===
v1084 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1097  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1067 
index: - 
=== Succesors ===
=== Usages ===
j1097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1097 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1306 
lastLocationAccess: - 
=== Succesors ===
next: j1086 
=== Usages ===
v1307 
=== Predecessor ===
v1082 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1306 lastLocationAccess: - #next: j1086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1086 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1095 
=== Succesors ===
next: v1098 
=== Usages ===
v1098 
=== Predecessor ===
j1097 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1095 #next: v1098  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
result [v119|QWORD + v117|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1097 
index: j1096 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1097 index: j1096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1307 
lastLocationAccess: - 
value: j1086 
stateAfter: - 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
j1086 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1307 lastLocationAccess: - value: j1086 stateAfter: - #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid j1092 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1096 
y: j409 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1096 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
lastLocationAccess: - 
value: j1092 
stateAfter: - 
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1305 lastLocationAccess: - value: j1092 stateAfter: - #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1099 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1075 v1077 v1088 v1090 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1075 v1077 v1088 v1090 #next: v335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v157 
address: v1217 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v157 address: v1217 lastLocationAccess: - value: a95 stateAfter: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid i356 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i149 
y: i341 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i149 y: i341  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v142 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v142 
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v142 #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i169 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v162 
values: i149 i167 
=== Succesors ===
=== Usages ===
v163 i167 v1202 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v162 values: i149 i167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 20
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 58.006139584328
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v178 
=== Succesors ===
next: v166 
=== Usages ===
v164 v168 i169 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v178 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i169 
y: i1158 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i169 y: i1158  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v165 #falseSuccessor: v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
v177 
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1108 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1108 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1109 
=== Usages ===
v1308 v1310 v1311 
=== Predecessor ===
v1147 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
result [v6|QWORD[.] + v122|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a60 
index: i169 
=== Succesors ===
=== Usages ===
v174 j1109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a60 index: i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1109 <|@
result [v6|QWORD[.] + v122|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1202 
=== Succesors ===
next: i1134 
=== Usages ===
v1309 
=== Predecessor ===
j1108 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1202 #next: i1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
i1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1134 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1308 
lastLocationAccess: - 
=== Succesors ===
next: v1113 
=== Usages ===
v1141 
=== Predecessor ===
j1109 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1308 lastLocationAccess: - #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1134 
y: i418 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1134 y: i418  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
i1134 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1112 #falseSuccessor: v1111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1116 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1116  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
v1112 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1135 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1309 <|@
result [v123|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1109 
index: - 
=== Succesors ===
=== Usages ===
a1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1109 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1135 <|@
result v124|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1309 
lastLocationAccess: - 
=== Succesors ===
next: v1120 
=== Usages ===
a1136 v1142 
=== Predecessor ===
v1111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1309 lastLocationAccess: - #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1135 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v1119 
falseSuccessor: v1115 
=== Usages ===
=== Predecessor ===
a1135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v1119 #falseSuccessor: v1115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
v1119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1137 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1137  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
j1137 v1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1137 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
lastLocationAccess: - 
=== Succesors ===
next: v1125 
=== Usages ===
v1122 j1133 v1312 
=== Predecessor ===
v1115 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1310 lastLocationAccess: - #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1137 
y: j406 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1137 y: j406  <|@  <|@
f <@~|@floating>@ <|@
tid a1136 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1135 
=== Succesors ===
=== Usages ===
j1127 v1130 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1135  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1124 
falseSuccessor: v1123 
=== Usages ===
=== Predecessor ===
j1137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1124 #falseSuccessor: v1123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1136 
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v1124 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1136 #next: v1131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1138 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1138  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
j1138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1138 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1311 
lastLocationAccess: - 
=== Succesors ===
next: j1127 
=== Usages ===
v1312 
=== Predecessor ===
v1123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1311 lastLocationAccess: - #next: j1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1127 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1136 
=== Succesors ===
next: v1139 
=== Usages ===
v1139 
=== Predecessor ===
j1138 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1136 #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
result [v127|QWORD + v125|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1138 
index: j1137 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1138 index: j1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1312 
lastLocationAccess: - 
value: j1127 
stateAfter: - 
=== Succesors ===
next: v1140 
=== Usages ===
=== Predecessor ===
j1127 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1312 lastLocationAccess: - value: j1127 stateAfter: - #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid j1133 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: i64
=== Inputs ===
x: j1137 
y: j409 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1137 y: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
lastLocationAccess: - 
value: j1133 
stateAfter: - 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1139 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1310 lastLocationAccess: - value: j1133 stateAfter: - #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
v1140 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1116 v1118 v1129 v1131 
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1116 v1118 v1129 v1131 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
guards: v1149 v165 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1149 v165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v177 
address: v1202 
lastLocationAccess: - 
value: a95 
stateAfter: - 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v177 address: v1202 lastLocationAccess: - value: a95 stateAfter: - #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 43]
stamp: i32
=== Inputs ===
x: i169 
y: i4 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i169 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:869) [bci: 33]
stamp: void
=== Inputs ===
loopBegin: v162 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v162 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v162 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v46 v47 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v46 v47 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:872) [bci: 49]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<HashMap.clear()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:868) [bci: 28]
sourceFile: HashMap.java
sourceLine: 869
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a60 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a60  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 85
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:870) [bci: 42]
reason: BoundsCheckException
speculation: {0x0000000000000298[index: 20, len: 24, hash: 0x5377a5af]: GuardMovement@2[HotSpotMethod<HashMap.clear()>, 33, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  106  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  106  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 6[[92, 94[[154, 156[[220, 222[[272, 274[[322, 324[[372, 374[[422, 424[[472, 474[[522, 524[[572, 574[[622, 624[[672, 674[[722, 724[[772, 774[[822, 824[[872, 874[[922, 924[[972, 974[[1036, 1038[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 38[[1058, 1065[[1066, 1073[6 MustHaveRegister 8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [8, 82[[86, 100[8 MustHaveRegister 10 MustHaveRegister 30 MustHaveRegister 56 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 82[[86, 1050[10 MustHaveRegister 20 MustHaveRegister 24 ShouldHaveRegister 28 ShouldHaveRegister 36 ShouldHaveRegister 102 ShouldHaveRegister 104 MustHaveRegister 170 MustHaveRegister 992 MustHaveRegister 1049 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v2|d [24, 26[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [26, 32[26 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [28, 32[28 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v1|d [30, 82[[86, 1050[[1058, 1065[30 MustHaveRegister 122 MustHaveRegister 162 MustHaveRegister 167 LiveAtLoopEnd 188 MustHaveRegister 228 MustHaveRegister 240 MustHaveRegister 280 MustHaveRegister 290 MustHaveRegister 330 MustHaveRegister 340 MustHaveRegister 380 MustHaveRegister 390 MustHaveRegister 430 MustHaveRegister 440 MustHaveRegister 480 MustHaveRegister 490 MustHaveRegister 530 MustHaveRegister 540 MustHaveRegister 580 MustHaveRegister 590 MustHaveRegister 630 MustHaveRegister 640 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister 730 MustHaveRegister 740 MustHaveRegister 780 MustHaveRegister 790 MustHaveRegister 830 MustHaveRegister 840 MustHaveRegister 880 MustHaveRegister 890 MustHaveRegister 930 MustHaveRegister 940 MustHaveRegister 980 MustHaveRegister 985 LiveAtLoopEnd 1004 MustHaveRegister 1044 MustHaveRegister 1049 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [58, 66[58 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [64, 76[64 MustHaveRegister 68 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v8|d [66, 74[[90, 92[66 MustHaveRegister 74 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [104, 168[104 MustHaveRegister 110 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v21|d [108, 164[[168, 173[110 ShouldHaveRegister 122 MustHaveRegister 162 MustHaveRegister 164 ShouldHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [124, 132[124 MustHaveRegister 126 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [130, 142[130 MustHaveRegister 134 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v16|d [132, 140[[152, 154[132 MustHaveRegister 140 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v14|d [164, 167[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [170, 986[170 MustHaveRegister 176 MustHaveRegister 985 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v121|d [174, 982[[986, 989[176 ShouldHaveRegister 188 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister 982 MustHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [190, 198[190 MustHaveRegister 192 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [196, 208[196 MustHaveRegister 200 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v25|d [198, 206[[218, 220[198 MustHaveRegister 206 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [230, 980[230 MustHaveRegister 240 MustHaveRegister 280 MustHaveRegister 290 MustHaveRegister 330 MustHaveRegister 340 MustHaveRegister 380 MustHaveRegister 390 MustHaveRegister 430 MustHaveRegister 440 MustHaveRegister 480 MustHaveRegister 490 MustHaveRegister 530 MustHaveRegister 540 MustHaveRegister 580 MustHaveRegister 590 MustHaveRegister 630 MustHaveRegister 640 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister 730 MustHaveRegister 740 MustHaveRegister 780 MustHaveRegister 790 MustHaveRegister 830 MustHaveRegister 840 MustHaveRegister 880 MustHaveRegister 890 MustHaveRegister 930 MustHaveRegister 940 MustHaveRegister 980 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [242, 250[242 MustHaveRegister 244 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [248, 260[248 MustHaveRegister 252 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v32|d [250, 258[[270, 272[250 MustHaveRegister 258 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [260, 262[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [290, 292[290 MustHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [292, 300[292 MustHaveRegister 294 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [298, 310[298 MustHaveRegister 302 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v38|d [300, 308[[320, 322[300 MustHaveRegister 308 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [342, 350[342 MustHaveRegister 344 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [348, 360[348 MustHaveRegister 352 MustHaveRegister 358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v44|d [350, 358[[370, 372[350 MustHaveRegister 358 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [392, 400[392 MustHaveRegister 394 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [398, 410[398 MustHaveRegister 402 MustHaveRegister 408 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v50|d [400, 408[[420, 422[400 MustHaveRegister 408 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [442, 450[442 MustHaveRegister 444 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [448, 460[448 MustHaveRegister 452 MustHaveRegister 458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v56|d [450, 458[[470, 472[450 MustHaveRegister 458 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [492, 500[492 MustHaveRegister 494 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [498, 510[498 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v62|d [500, 508[[520, 522[500 MustHaveRegister 508 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [510, 512[510 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [540, 542[540 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [542, 550[542 MustHaveRegister 544 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [548, 560[548 MustHaveRegister 552 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v68|d [550, 558[[570, 572[550 MustHaveRegister 558 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [556, 558[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [560, 562[560 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [590, 592[590 MustHaveRegister 592 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d -1 [592, 600[592 MustHaveRegister 594 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [598, 610[598 MustHaveRegister 602 MustHaveRegister 608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q v74|d [600, 608[[620, 622[600 MustHaveRegister 608 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q -1 [606, 608[606 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q -1 [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d -1 [642, 650[642 MustHaveRegister 644 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q -1 [648, 660[648 MustHaveRegister 652 MustHaveRegister 658 MustHaveRegister 660 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q v80|d [650, 658[[670, 672[650 MustHaveRegister 658 MustHaveRegister 672 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [660, 662[660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q -1 [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [692, 700[692 MustHaveRegister 694 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q -1 [698, 710[698 MustHaveRegister 702 MustHaveRegister 708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q v86|d [700, 708[[720, 722[700 MustHaveRegister 708 MustHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q -1 [706, 708[706 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q -1 [710, 712[710 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [742, 750[742 MustHaveRegister 744 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[v93|q]" v93|q -1 [748, 760[748 MustHaveRegister 752 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q v92|d [750, 758[[770, 772[750 MustHaveRegister 758 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q -1 [760, 762[760 MustHaveRegister 762 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q -1 [790, 792[790 MustHaveRegister 792 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d -1 [792, 800[792 MustHaveRegister 794 MustHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q -1 [798, 810[798 MustHaveRegister 802 MustHaveRegister 808 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[v100|q]" v100|q v98|d [800, 808[[820, 822[800 MustHaveRegister 808 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[v101|q]" v101|q -1 [806, 808[806 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[v102|q]" v102|q -1 [810, 812[810 MustHaveRegister 812 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[v103|q]" v103|q -1 [840, 842[840 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d -1 [842, 850[842 MustHaveRegister 844 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[v105|q]" v105|q -1 [848, 860[848 MustHaveRegister 852 MustHaveRegister 858 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[v106|q]" v106|q v104|d [850, 858[[870, 872[850 MustHaveRegister 858 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q -1 [856, 858[856 MustHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q -1 [860, 862[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d -1 [892, 900[892 MustHaveRegister 894 MustHaveRegister 900 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[v111|q]" v111|q -1 [898, 910[898 MustHaveRegister 902 MustHaveRegister 908 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[v112|q]" v112|q v110|d [900, 908[[920, 922[900 MustHaveRegister 908 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[v113|q]" v113|q -1 [906, 908[906 MustHaveRegister 908 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[v114|q]" v114|q -1 [910, 912[910 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[v115|q]" v115|q -1 [940, 942[940 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v116|d DWORD "[v116|d]" v116|d -1 [942, 950[942 MustHaveRegister 944 MustHaveRegister 950 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[v117|q]" v117|q -1 [948, 960[948 MustHaveRegister 952 MustHaveRegister 958 MustHaveRegister 960 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q v116|d [950, 958[[970, 972[950 MustHaveRegister 958 MustHaveRegister 972 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[v119|q]" v119|q -1 [956, 958[956 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q -1 [960, 962[960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[v121|d]" v121|d v23|d [982, 985[982 MustHaveRegister 984 ShouldHaveRegister  "NoSpillStore"
  v122|d DWORD "[v122|d]" v122|d v23|d [990, 1046[992 ShouldHaveRegister 1004 MustHaveRegister 1044 MustHaveRegister 1046 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[v123|q]" v123|q -1 [1004, 1006[1004 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[v124|d]" v124|d -1 [1006, 1014[1006 MustHaveRegister 1008 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[v125|q]" v125|q -1 [1012, 1024[1012 MustHaveRegister 1016 MustHaveRegister 1022 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[v126|q]" v126|q v124|d [1014, 1022[[1034, 1036[1014 MustHaveRegister 1022 MustHaveRegister 1036 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[v127|q]" v127|q -1 [1020, 1022[1020 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[v128|q]" v128|q -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v129|d DWORD "[v129|d]" v129|d v122|d [1046, 1049[1046 MustHaveRegister 1048 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 6[[92, 94[[154, 156[[220, 222[[272, 274[[322, 324[[372, 374[[422, 424[[472, 474[[522, 524[[572, 574[[622, 624[[672, 674[[722, 724[[772, 774[[822, 824[[872, 874[[922, 924[[972, 974[[1036, 1038[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 38[[1058, 1065[[1066, 1073[6 MustHaveRegister 8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [8, 82[[86, 100[8 MustHaveRegister 10 MustHaveRegister 30 MustHaveRegister 56 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [10, 82[[86, 1050[10 MustHaveRegister 20 MustHaveRegister 24 ShouldHaveRegister 28 ShouldHaveRegister 36 ShouldHaveRegister 102 ShouldHaveRegister 104 MustHaveRegister 170 MustHaveRegister 992 MustHaveRegister 1049 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d v2|d [24, 26[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r8|q]" v4|q -1 [26, 32[26 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [28, 32[28 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rcx|q]" v6|q v1|d [30, 82[[86, 1050[[1058, 1065[30 MustHaveRegister 122 MustHaveRegister 162 MustHaveRegister 167 LiveAtLoopEnd 188 MustHaveRegister 228 MustHaveRegister 240 MustHaveRegister 280 MustHaveRegister 290 MustHaveRegister 330 MustHaveRegister 340 MustHaveRegister 380 MustHaveRegister 390 MustHaveRegister 430 MustHaveRegister 440 MustHaveRegister 480 MustHaveRegister 490 MustHaveRegister 530 MustHaveRegister 540 MustHaveRegister 580 MustHaveRegister 590 MustHaveRegister 630 MustHaveRegister 640 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister 730 MustHaveRegister 740 MustHaveRegister 780 MustHaveRegister 790 MustHaveRegister 830 MustHaveRegister 840 MustHaveRegister 880 MustHaveRegister 890 MustHaveRegister 930 MustHaveRegister 940 MustHaveRegister 980 MustHaveRegister 985 LiveAtLoopEnd 1004 MustHaveRegister 1044 MustHaveRegister 1049 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rsi|d]" v8|d -1 [58, 66[58 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r8|q]" v9|q -1 [64, 76[64 MustHaveRegister 68 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|d [66, 74[[90, 92[66 MustHaveRegister 74 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r9|q]" v11|q -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [104, 168[104 MustHaveRegister 110 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d v21|d [108, 164[[168, 173[110 ShouldHaveRegister 122 MustHaveRegister 162 MustHaveRegister 164 ShouldHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [124, 132[124 MustHaveRegister 126 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q -1 [130, 142[130 MustHaveRegister 134 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|d [132, 140[[152, 154[132 MustHaveRegister 140 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d v14|d [164, 167[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d -1 [170, 986[170 MustHaveRegister 176 MustHaveRegister 985 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v121|d [174, 982[[986, 989[176 ShouldHaveRegister 188 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister 982 MustHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [190, 198[190 MustHaveRegister 192 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q -1 [196, 208[196 MustHaveRegister 200 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v25|d [198, 206[[218, 220[198 MustHaveRegister 206 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbx|q]" v28|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q -1 [230, 980[230 MustHaveRegister 240 MustHaveRegister 280 MustHaveRegister 290 MustHaveRegister 330 MustHaveRegister 340 MustHaveRegister 380 MustHaveRegister 390 MustHaveRegister 430 MustHaveRegister 440 MustHaveRegister 480 MustHaveRegister 490 MustHaveRegister 530 MustHaveRegister 540 MustHaveRegister 580 MustHaveRegister 590 MustHaveRegister 630 MustHaveRegister 640 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister 730 MustHaveRegister 740 MustHaveRegister 780 MustHaveRegister 790 MustHaveRegister 830 MustHaveRegister 840 MustHaveRegister 880 MustHaveRegister 890 MustHaveRegister 930 MustHaveRegister 940 MustHaveRegister 980 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rsi|d]" v32|d -1 [242, 250[242 MustHaveRegister 244 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbx|q]" v33|q -1 [248, 260[248 MustHaveRegister 252 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rsi|q]" v34|q v32|d [250, 258[[270, 272[250 MustHaveRegister 258 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [260, 262[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [290, 292[290 MustHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rsi|d]" v38|d -1 [292, 300[292 MustHaveRegister 294 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q -1 [298, 310[298 MustHaveRegister 302 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v38|d [300, 308[[320, 322[300 MustHaveRegister 308 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [342, 350[342 MustHaveRegister 344 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rbx|q]" v45|q -1 [348, 360[348 MustHaveRegister 352 MustHaveRegister 358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v44|d [350, 358[[370, 372[350 MustHaveRegister 358 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdi|q]" v47|q -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [392, 400[392 MustHaveRegister 394 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rbx|q]" v51|q -1 [398, 410[398 MustHaveRegister 402 MustHaveRegister 408 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|d [400, 408[[420, 422[400 MustHaveRegister 408 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d -1 [442, 450[442 MustHaveRegister 444 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rbx|q]" v57|q -1 [448, 460[448 MustHaveRegister 452 MustHaveRegister 458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v56|d [450, 458[[470, 472[450 MustHaveRegister 458 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q -1 [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [492, 500[492 MustHaveRegister 494 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rbx|q]" v63|q -1 [498, 510[498 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v62|d [500, 508[[520, 522[500 MustHaveRegister 508 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q -1 [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [510, 512[510 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [540, 542[540 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [542, 550[542 MustHaveRegister 544 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rbx|q]" v69|q -1 [548, 560[548 MustHaveRegister 552 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|d [550, 558[[570, 572[550 MustHaveRegister 558 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q -1 [556, 558[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [560, 562[560 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [590, 592[590 MustHaveRegister 592 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[rsi|d]" v74|d -1 [592, 600[592 MustHaveRegister 594 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rbx|q]" v75|q -1 [598, 610[598 MustHaveRegister 602 MustHaveRegister 608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v74|d [600, 608[[620, 622[600 MustHaveRegister 608 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [606, 608[606 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q -1 [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d -1 [642, 650[642 MustHaveRegister 644 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rbx|q]" v81|q -1 [648, 660[648 MustHaveRegister 652 MustHaveRegister 658 MustHaveRegister 660 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q v80|d [650, 658[[670, 672[650 MustHaveRegister 658 MustHaveRegister 672 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q -1 [660, 662[660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rsi|q]" v85|q -1 [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [692, 700[692 MustHaveRegister 694 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rbx|q]" v87|q -1 [698, 710[698 MustHaveRegister 702 MustHaveRegister 708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rsi|q]" v88|q v86|d [700, 708[[720, 722[700 MustHaveRegister 708 MustHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rdi|q]" v89|q -1 [706, 708[706 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [710, 712[710 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [742, 750[742 MustHaveRegister 744 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rbx|q]" v93|q -1 [748, 760[748 MustHaveRegister 752 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q v92|d [750, 758[[770, 772[750 MustHaveRegister 758 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q -1 [760, 762[760 MustHaveRegister 762 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [790, 792[790 MustHaveRegister 792 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rsi|d]" v98|d -1 [792, 800[792 MustHaveRegister 794 MustHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rbx|q]" v99|q -1 [798, 810[798 MustHaveRegister 802 MustHaveRegister 808 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rsi|q]" v100|q v98|d [800, 808[[820, 822[800 MustHaveRegister 808 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[rdi|q]" v101|q -1 [806, 808[806 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q -1 [810, 812[810 MustHaveRegister 812 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[rsi|q]" v103|q -1 [840, 842[840 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[rsi|d]" v104|d -1 [842, 850[842 MustHaveRegister 844 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rbx|q]" v105|q -1 [848, 860[848 MustHaveRegister 852 MustHaveRegister 858 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[rsi|q]" v106|q v104|d [850, 858[[870, 872[850 MustHaveRegister 858 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [856, 858[856 MustHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [860, 862[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rsi|d]" v110|d -1 [892, 900[892 MustHaveRegister 894 MustHaveRegister 900 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rbx|q]" v111|q -1 [898, 910[898 MustHaveRegister 902 MustHaveRegister 908 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q v110|d [900, 908[[920, 922[900 MustHaveRegister 908 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rdi|q]" v113|q -1 [906, 908[906 MustHaveRegister 908 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [910, 912[910 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[rsi|q]" v115|q -1 [940, 942[940 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v116|d DWORD "[rsi|d]" v116|d -1 [942, 950[942 MustHaveRegister 944 MustHaveRegister 950 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rbx|q]" v117|q -1 [948, 960[948 MustHaveRegister 952 MustHaveRegister 958 MustHaveRegister 960 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q v116|d [950, 958[[970, 972[950 MustHaveRegister 958 MustHaveRegister 972 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rdi|q]" v119|q -1 [956, 958[956 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q -1 [960, 962[960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r8|d]" v121|d v23|d [982, 985[982 MustHaveRegister 984 ShouldHaveRegister  "NoSpillStore"
  v122|d DWORD "[r8|d]" v122|d v23|d [990, 1046[992 ShouldHaveRegister 1004 MustHaveRegister 1044 MustHaveRegister 1046 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[rsi|q]" v123|q -1 [1004, 1006[1004 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rsi|d]" v124|d -1 [1006, 1014[1006 MustHaveRegister 1008 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[r10|q]" v125|q -1 [1012, 1024[1012 MustHaveRegister 1016 MustHaveRegister 1022 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q v124|d [1014, 1022[[1034, 1036[1014 MustHaveRegister 1022 MustHaveRegister 1036 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[r9|q]" v127|q -1 [1020, 1022[1020 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v129|d DWORD "[r8|d]" v129|d v122|d [1046, 1049[1046 MustHaveRegister 1048 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  106  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 6[[92, 94[[154, 156[[220, 222[[272, 274[[322, 324[[372, 374[[422, 424[[472, 474[[522, 524[[572, 574[[622, 624[[672, 674[[722, 724[[772, 774[[822, 824[[872, 874[[922, 924[[972, 974[[1036, 1038[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 38[[1058, 1065[[1066, 1073[6 MustHaveRegister 8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [8, 82[[86, 100[8 MustHaveRegister 10 MustHaveRegister 30 MustHaveRegister 56 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [10, 82[[86, 1050[10 MustHaveRegister 20 MustHaveRegister 24 ShouldHaveRegister 28 ShouldHaveRegister 36 ShouldHaveRegister 102 ShouldHaveRegister 104 MustHaveRegister 170 MustHaveRegister 992 MustHaveRegister 1049 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d v2|d [24, 26[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r8|q]" v4|q -1 [26, 32[26 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [28, 32[28 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rcx|q]" v6|q v1|d [30, 82[[86, 1050[[1058, 1065[30 MustHaveRegister 122 MustHaveRegister 162 MustHaveRegister 167 LiveAtLoopEnd 188 MustHaveRegister 228 MustHaveRegister 240 MustHaveRegister 280 MustHaveRegister 290 MustHaveRegister 330 MustHaveRegister 340 MustHaveRegister 380 MustHaveRegister 390 MustHaveRegister 430 MustHaveRegister 440 MustHaveRegister 480 MustHaveRegister 490 MustHaveRegister 530 MustHaveRegister 540 MustHaveRegister 580 MustHaveRegister 590 MustHaveRegister 630 MustHaveRegister 640 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister 730 MustHaveRegister 740 MustHaveRegister 780 MustHaveRegister 790 MustHaveRegister 830 MustHaveRegister 840 MustHaveRegister 880 MustHaveRegister 890 MustHaveRegister 930 MustHaveRegister 940 MustHaveRegister 980 MustHaveRegister 985 LiveAtLoopEnd 1004 MustHaveRegister 1044 MustHaveRegister 1049 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rsi|d]" v8|d -1 [58, 66[58 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r8|q]" v9|q -1 [64, 76[64 MustHaveRegister 68 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|d [66, 74[[90, 92[66 MustHaveRegister 74 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r9|q]" v11|q -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [104, 168[104 MustHaveRegister 110 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d v21|d [108, 164[[168, 173[110 ShouldHaveRegister 122 MustHaveRegister 162 MustHaveRegister 164 ShouldHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [124, 132[124 MustHaveRegister 126 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q -1 [130, 142[130 MustHaveRegister 134 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|d [132, 140[[152, 154[132 MustHaveRegister 140 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d v14|d [164, 167[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d -1 [170, 986[170 MustHaveRegister 176 MustHaveRegister 985 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v121|d [174, 982[[986, 989[176 ShouldHaveRegister 188 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister 982 MustHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [190, 198[190 MustHaveRegister 192 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q -1 [196, 208[196 MustHaveRegister 200 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v25|d [198, 206[[218, 220[198 MustHaveRegister 206 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbx|q]" v28|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q -1 [230, 980[230 MustHaveRegister 240 MustHaveRegister 280 MustHaveRegister 290 MustHaveRegister 330 MustHaveRegister 340 MustHaveRegister 380 MustHaveRegister 390 MustHaveRegister 430 MustHaveRegister 440 MustHaveRegister 480 MustHaveRegister 490 MustHaveRegister 530 MustHaveRegister 540 MustHaveRegister 580 MustHaveRegister 590 MustHaveRegister 630 MustHaveRegister 640 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister 730 MustHaveRegister 740 MustHaveRegister 780 MustHaveRegister 790 MustHaveRegister 830 MustHaveRegister 840 MustHaveRegister 880 MustHaveRegister 890 MustHaveRegister 930 MustHaveRegister 940 MustHaveRegister 980 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rsi|d]" v32|d -1 [242, 250[242 MustHaveRegister 244 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbx|q]" v33|q -1 [248, 260[248 MustHaveRegister 252 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rsi|q]" v34|q v32|d [250, 258[[270, 272[250 MustHaveRegister 258 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [260, 262[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [290, 292[290 MustHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rsi|d]" v38|d -1 [292, 300[292 MustHaveRegister 294 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q -1 [298, 310[298 MustHaveRegister 302 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v38|d [300, 308[[320, 322[300 MustHaveRegister 308 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [342, 350[342 MustHaveRegister 344 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rbx|q]" v45|q -1 [348, 360[348 MustHaveRegister 352 MustHaveRegister 358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v44|d [350, 358[[370, 372[350 MustHaveRegister 358 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdi|q]" v47|q -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [392, 400[392 MustHaveRegister 394 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rbx|q]" v51|q -1 [398, 410[398 MustHaveRegister 402 MustHaveRegister 408 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|d [400, 408[[420, 422[400 MustHaveRegister 408 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d -1 [442, 450[442 MustHaveRegister 444 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rbx|q]" v57|q -1 [448, 460[448 MustHaveRegister 452 MustHaveRegister 458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v56|d [450, 458[[470, 472[450 MustHaveRegister 458 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q -1 [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [492, 500[492 MustHaveRegister 494 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rbx|q]" v63|q -1 [498, 510[498 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v62|d [500, 508[[520, 522[500 MustHaveRegister 508 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q -1 [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [510, 512[510 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [540, 542[540 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [542, 550[542 MustHaveRegister 544 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rbx|q]" v69|q -1 [548, 560[548 MustHaveRegister 552 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|d [550, 558[[570, 572[550 MustHaveRegister 558 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q -1 [556, 558[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [560, 562[560 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [590, 592[590 MustHaveRegister 592 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[rsi|d]" v74|d -1 [592, 600[592 MustHaveRegister 594 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rbx|q]" v75|q -1 [598, 610[598 MustHaveRegister 602 MustHaveRegister 608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v74|d [600, 608[[620, 622[600 MustHaveRegister 608 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [606, 608[606 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q -1 [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d -1 [642, 650[642 MustHaveRegister 644 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rbx|q]" v81|q -1 [648, 660[648 MustHaveRegister 652 MustHaveRegister 658 MustHaveRegister 660 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q v80|d [650, 658[[670, 672[650 MustHaveRegister 658 MustHaveRegister 672 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q -1 [660, 662[660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rsi|q]" v85|q -1 [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [692, 700[692 MustHaveRegister 694 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rbx|q]" v87|q -1 [698, 710[698 MustHaveRegister 702 MustHaveRegister 708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rsi|q]" v88|q v86|d [700, 708[[720, 722[700 MustHaveRegister 708 MustHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rdi|q]" v89|q -1 [706, 708[706 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [710, 712[710 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [742, 750[742 MustHaveRegister 744 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rbx|q]" v93|q -1 [748, 760[748 MustHaveRegister 752 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q v92|d [750, 758[[770, 772[750 MustHaveRegister 758 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q -1 [760, 762[760 MustHaveRegister 762 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [790, 792[790 MustHaveRegister 792 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rsi|d]" v98|d -1 [792, 800[792 MustHaveRegister 794 MustHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rbx|q]" v99|q -1 [798, 810[798 MustHaveRegister 802 MustHaveRegister 808 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rsi|q]" v100|q v98|d [800, 808[[820, 822[800 MustHaveRegister 808 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[rdi|q]" v101|q -1 [806, 808[806 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q -1 [810, 812[810 MustHaveRegister 812 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[rsi|q]" v103|q -1 [840, 842[840 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[rsi|d]" v104|d -1 [842, 850[842 MustHaveRegister 844 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rbx|q]" v105|q -1 [848, 860[848 MustHaveRegister 852 MustHaveRegister 858 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[rsi|q]" v106|q v104|d [850, 858[[870, 872[850 MustHaveRegister 858 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [856, 858[856 MustHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [860, 862[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rsi|d]" v110|d -1 [892, 900[892 MustHaveRegister 894 MustHaveRegister 900 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rbx|q]" v111|q -1 [898, 910[898 MustHaveRegister 902 MustHaveRegister 908 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q v110|d [900, 908[[920, 922[900 MustHaveRegister 908 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rdi|q]" v113|q -1 [906, 908[906 MustHaveRegister 908 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [910, 912[910 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[rsi|q]" v115|q -1 [940, 942[940 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v116|d DWORD "[rsi|d]" v116|d -1 [942, 950[942 MustHaveRegister 944 MustHaveRegister 950 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rbx|q]" v117|q -1 [948, 960[948 MustHaveRegister 952 MustHaveRegister 958 MustHaveRegister 960 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q v116|d [950, 958[[970, 972[950 MustHaveRegister 958 MustHaveRegister 972 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rdi|q]" v119|q -1 [956, 958[956 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q -1 [960, 962[960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r8|d]" v121|d v23|d [982, 985[982 MustHaveRegister 984 ShouldHaveRegister  "NoSpillStore"
  v122|d DWORD "[r8|d]" v122|d v23|d [990, 1046[992 ShouldHaveRegister 1004 MustHaveRegister 1044 MustHaveRegister 1046 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[rsi|q]" v123|q -1 [1004, 1006[1004 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rsi|d]" v124|d -1 [1006, 1014[1006 MustHaveRegister 1008 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[r10|q]" v125|q -1 [1012, 1024[1012 MustHaveRegister 1016 MustHaveRegister 1022 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q v124|d [1014, 1022[[1034, 1036[1014 MustHaveRegister 1022 MustHaveRegister 1036 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[r9|q]" v127|q -1 [1020, 1022[1020 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v129|d DWORD "[r8|d]" v129|d v122|d [1046, 1049[1046 MustHaveRegister 1048 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  106  <|@ instruction JUMP ~[int[1|0x1]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[v21|DWORD] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[v14|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[v121|DWORD] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[v23|DWORD] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[v129|DWORD] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 6[[92, 94[[154, 156[[220, 222[[272, 274[[322, 324[[372, 374[[422, 424[[472, 474[[522, 524[[572, 574[[622, 624[[672, 674[[722, 724[[772, 774[[822, 824[[872, 874[[922, 924[[972, 974[[1036, 1038[ "NoOptimization"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 38[[1058, 1065[[1066, 1073[6 MustHaveRegister 8 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [8, 82[[86, 100[8 MustHaveRegister 10 MustHaveRegister 30 MustHaveRegister 56 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [10, 82[[86, 1050[10 MustHaveRegister 20 MustHaveRegister 24 ShouldHaveRegister 28 ShouldHaveRegister 36 ShouldHaveRegister 102 ShouldHaveRegister 104 MustHaveRegister 170 MustHaveRegister 992 MustHaveRegister 1049 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d v2|d [24, 26[24 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r8|q]" v4|q -1 [26, 32[26 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q -1 [28, 32[28 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rcx|q]" v6|q v1|d [30, 82[[86, 1050[[1058, 1065[30 MustHaveRegister 122 MustHaveRegister 162 MustHaveRegister 167 LiveAtLoopEnd 188 MustHaveRegister 228 MustHaveRegister 240 MustHaveRegister 280 MustHaveRegister 290 MustHaveRegister 330 MustHaveRegister 340 MustHaveRegister 380 MustHaveRegister 390 MustHaveRegister 430 MustHaveRegister 440 MustHaveRegister 480 MustHaveRegister 490 MustHaveRegister 530 MustHaveRegister 540 MustHaveRegister 580 MustHaveRegister 590 MustHaveRegister 630 MustHaveRegister 640 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister 730 MustHaveRegister 740 MustHaveRegister 780 MustHaveRegister 790 MustHaveRegister 830 MustHaveRegister 840 MustHaveRegister 880 MustHaveRegister 890 MustHaveRegister 930 MustHaveRegister 940 MustHaveRegister 980 MustHaveRegister 985 LiveAtLoopEnd 1004 MustHaveRegister 1044 MustHaveRegister 1049 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [56, 58[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rsi|d]" v8|d -1 [58, 66[58 MustHaveRegister 60 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r8|q]" v9|q -1 [64, 76[64 MustHaveRegister 68 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|d [66, 74[[90, 92[66 MustHaveRegister 74 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r9|q]" v11|q -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [104, 168[104 MustHaveRegister 110 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d v21|d [108, 164[[168, 173[110 ShouldHaveRegister 122 MustHaveRegister 162 MustHaveRegister 164 ShouldHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rsi|d]" v16|d -1 [124, 132[124 MustHaveRegister 126 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r9|q]" v17|q -1 [130, 142[130 MustHaveRegister 134 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|d [132, 140[[152, 154[132 MustHaveRegister 140 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d v14|d [164, 167[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d -1 [170, 986[170 MustHaveRegister 176 MustHaveRegister 985 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v121|d [174, 982[[986, 989[176 ShouldHaveRegister 188 MustHaveRegister 228 MustHaveRegister 230 ShouldHaveRegister 982 MustHaveRegister 988 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [188, 190[188 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [190, 198[190 MustHaveRegister 192 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r9|q]" v26|q -1 [196, 208[196 MustHaveRegister 200 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v25|d [198, 206[[218, 220[198 MustHaveRegister 206 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbx|q]" v28|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q -1 [230, 980[230 MustHaveRegister 240 MustHaveRegister 280 MustHaveRegister 290 MustHaveRegister 330 MustHaveRegister 340 MustHaveRegister 380 MustHaveRegister 390 MustHaveRegister 430 MustHaveRegister 440 MustHaveRegister 480 MustHaveRegister 490 MustHaveRegister 530 MustHaveRegister 540 MustHaveRegister 580 MustHaveRegister 590 MustHaveRegister 630 MustHaveRegister 640 MustHaveRegister 680 MustHaveRegister 690 MustHaveRegister 730 MustHaveRegister 740 MustHaveRegister 780 MustHaveRegister 790 MustHaveRegister 830 MustHaveRegister 840 MustHaveRegister 880 MustHaveRegister 890 MustHaveRegister 930 MustHaveRegister 940 MustHaveRegister 980 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rsi|q]" v31|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rsi|d]" v32|d -1 [242, 250[242 MustHaveRegister 244 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rbx|q]" v33|q -1 [248, 260[248 MustHaveRegister 252 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rsi|q]" v34|q v32|d [250, 258[[270, 272[250 MustHaveRegister 258 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [260, 262[260 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [290, 292[290 MustHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rsi|d]" v38|d -1 [292, 300[292 MustHaveRegister 294 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q -1 [298, 310[298 MustHaveRegister 302 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v38|d [300, 308[[320, 322[300 MustHaveRegister 308 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [342, 350[342 MustHaveRegister 344 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rbx|q]" v45|q -1 [348, 360[348 MustHaveRegister 352 MustHaveRegister 358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v44|d [350, 358[[370, 372[350 MustHaveRegister 358 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdi|q]" v47|q -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [392, 400[392 MustHaveRegister 394 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rbx|q]" v51|q -1 [398, 410[398 MustHaveRegister 402 MustHaveRegister 408 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|d [400, 408[[420, 422[400 MustHaveRegister 408 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q -1 [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rsi|d]" v56|d -1 [442, 450[442 MustHaveRegister 444 MustHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rbx|q]" v57|q -1 [448, 460[448 MustHaveRegister 452 MustHaveRegister 458 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v56|d [450, 458[[470, 472[450 MustHaveRegister 458 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q -1 [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q -1 [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [492, 500[492 MustHaveRegister 494 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rbx|q]" v63|q -1 [498, 510[498 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v62|d [500, 508[[520, 522[500 MustHaveRegister 508 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q -1 [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [510, 512[510 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [540, 542[540 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [542, 550[542 MustHaveRegister 544 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rbx|q]" v69|q -1 [548, 560[548 MustHaveRegister 552 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q v68|d [550, 558[[570, 572[550 MustHaveRegister 558 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q -1 [556, 558[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [560, 562[560 MustHaveRegister 562 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [590, 592[590 MustHaveRegister 592 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[rsi|d]" v74|d -1 [592, 600[592 MustHaveRegister 594 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rbx|q]" v75|q -1 [598, 610[598 MustHaveRegister 602 MustHaveRegister 608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v74|d [600, 608[[620, 622[600 MustHaveRegister 608 MustHaveRegister 622 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [606, 608[606 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rsi|q]" v78|q -1 [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [640, 642[640 MustHaveRegister 642 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d -1 [642, 650[642 MustHaveRegister 644 MustHaveRegister 650 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rbx|q]" v81|q -1 [648, 660[648 MustHaveRegister 652 MustHaveRegister 658 MustHaveRegister 660 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q v80|d [650, 658[[670, 672[650 MustHaveRegister 658 MustHaveRegister 672 ShouldHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [656, 658[656 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q -1 [660, 662[660 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[rsi|q]" v85|q -1 [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [692, 700[692 MustHaveRegister 694 MustHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rbx|q]" v87|q -1 [698, 710[698 MustHaveRegister 702 MustHaveRegister 708 MustHaveRegister 710 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[rsi|q]" v88|q v86|d [700, 708[[720, 722[700 MustHaveRegister 708 MustHaveRegister 722 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rdi|q]" v89|q -1 [706, 708[706 MustHaveRegister 708 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rsi|q]" v90|q -1 [710, 712[710 MustHaveRegister 712 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[rsi|d]" v92|d -1 [742, 750[742 MustHaveRegister 744 MustHaveRegister 750 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[rbx|q]" v93|q -1 [748, 760[748 MustHaveRegister 752 MustHaveRegister 758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q v92|d [750, 758[[770, 772[750 MustHaveRegister 758 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q -1 [760, 762[760 MustHaveRegister 762 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rsi|q]" v97|q -1 [790, 792[790 MustHaveRegister 792 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[rsi|d]" v98|d -1 [792, 800[792 MustHaveRegister 794 MustHaveRegister 800 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rbx|q]" v99|q -1 [798, 810[798 MustHaveRegister 802 MustHaveRegister 808 MustHaveRegister 810 MustHaveRegister  "NoSpillStore"
  v100|q QWORD "[rsi|q]" v100|q v98|d [800, 808[[820, 822[800 MustHaveRegister 808 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[rdi|q]" v101|q -1 [806, 808[806 MustHaveRegister 808 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[rsi|q]" v102|q -1 [810, 812[810 MustHaveRegister 812 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[rsi|q]" v103|q -1 [840, 842[840 MustHaveRegister 842 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[rsi|d]" v104|d -1 [842, 850[842 MustHaveRegister 844 MustHaveRegister 850 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rbx|q]" v105|q -1 [848, 860[848 MustHaveRegister 852 MustHaveRegister 858 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v106|q QWORD "[rsi|q]" v106|q v104|d [850, 858[[870, 872[850 MustHaveRegister 858 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdi|q]" v107|q -1 [856, 858[856 MustHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [860, 862[860 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rsi|d]" v110|d -1 [892, 900[892 MustHaveRegister 894 MustHaveRegister 900 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[rbx|q]" v111|q -1 [898, 910[898 MustHaveRegister 902 MustHaveRegister 908 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[rsi|q]" v112|q v110|d [900, 908[[920, 922[900 MustHaveRegister 908 MustHaveRegister 922 ShouldHaveRegister  "NoSpillStore"
  v113|q QWORD "[rdi|q]" v113|q -1 [906, 908[906 MustHaveRegister 908 MustHaveRegister  "NoSpillStore"
  v114|q QWORD "[rsi|q]" v114|q -1 [910, 912[910 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v115|q QWORD "[rsi|q]" v115|q -1 [940, 942[940 MustHaveRegister 942 MustHaveRegister  "NoSpillStore"
  v116|d DWORD "[rsi|d]" v116|d -1 [942, 950[942 MustHaveRegister 944 MustHaveRegister 950 MustHaveRegister  "NoSpillStore"
  v117|q QWORD "[rbx|q]" v117|q -1 [948, 960[948 MustHaveRegister 952 MustHaveRegister 958 MustHaveRegister 960 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[rsi|q]" v118|q v116|d [950, 958[[970, 972[950 MustHaveRegister 958 MustHaveRegister 972 ShouldHaveRegister  "NoSpillStore"
  v119|q QWORD "[rdi|q]" v119|q -1 [956, 958[956 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[rsi|q]" v120|q -1 [960, 962[960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r8|d]" v121|d v23|d [982, 985[982 MustHaveRegister 984 ShouldHaveRegister  "NoSpillStore"
  v122|d DWORD "[r8|d]" v122|d v23|d [990, 1046[992 ShouldHaveRegister 1004 MustHaveRegister 1044 MustHaveRegister 1046 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[rsi|q]" v123|q -1 [1004, 1006[1004 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v124|d DWORD "[rsi|d]" v124|d -1 [1006, 1014[1006 MustHaveRegister 1008 MustHaveRegister 1014 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[r10|q]" v125|q -1 [1012, 1024[1012 MustHaveRegister 1016 MustHaveRegister 1022 MustHaveRegister 1024 MustHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q v124|d [1014, 1022[[1034, 1036[1014 MustHaveRegister 1022 MustHaveRegister 1036 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[r9|q]" v127|q -1 [1020, 1022[1020 MustHaveRegister 1022 MustHaveRegister  "NoSpillStore"
  v128|q QWORD "[rsi|q]" v128|q -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v129|d DWORD "[r8|d]" v129|d v122|d [1046, 1049[1046 MustHaveRegister 1048 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [v122|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD[_] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [v0|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v3|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction v4|QWORD = MOVSXD v3|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction v5|QWORD = MOV v2|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction v7|QWORD[*] = LEA [v1|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction v8|DWORD[_] = MOV [v7|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: v8|DWORD[_], y: v8|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: v9|QWORD, y: v9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction v11|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [v11|QWORD + v9|QWORD * 1 - 8], y: v10|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction v12|QWORD = LEA [v9|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: v12|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [v1|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction v13|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v15|QWORD[.+] = LEA [v6|QWORD[.] + v14|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction v16|DWORD[_] = MOV [v15|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: v16|DWORD[_], y: v16|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction v17|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: v17|QWORD, y: v17|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v19|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v19|QWORD + v17|QWORD * 1 - 8], y: v18|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction v20|QWORD = LEA [v17|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: v20|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction v21|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v22|DWORD = LEA [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction v24|QWORD[.+] = LEA [v6|QWORD[.] + v23|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction v25|DWORD[_] = MOV [v24|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: v25|DWORD[_], y: v25|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v26|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction v28|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: v29|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [v6|QWORD[.] + v23|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction v30|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v31|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction v32|DWORD[_] = MOV [v31|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction v33|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: v33|QWORD, y: v33|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction v35|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [v35|QWORD + v33|QWORD * 1 - 8], y: v34|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction v36|QWORD = LEA [v33|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: v36|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction v37|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction v38|DWORD[_] = MOV [v37|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: v38|DWORD[_], y: v38|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction v39|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v41|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [v41|QWORD + v39|QWORD * 1 - 8], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction v42|QWORD = LEA [v39|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: v42|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction v44|DWORD[_] = MOV [v43|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: v44|DWORD[_], y: v44|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction v45|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction v47|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [v47|QWORD + v45|QWORD * 1 - 8], y: v46|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction v48|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: v48|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction v49|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction v55|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction v56|DWORD[_] = MOV [v55|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: v56|DWORD[_], y: v56|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction v57|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: v57|QWORD, y: v57|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction v59|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v59|QWORD + v57|QWORD * 1 - 8], y: v58|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction v60|QWORD = LEA [v57|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: v60|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction v61|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction v62|DWORD[_] = MOV [v61|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: v62|DWORD[_], y: v62|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction v63|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: v63|QWORD, y: v63|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction v65|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [v65|QWORD + v63|QWORD * 1 - 8], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction v66|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: v66|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction rsi|QWORD[.] = MOVE v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction v67|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction v68|DWORD[_] = MOV [v67|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: v68|DWORD[_], y: v68|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction v69|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|QWORD, y: v69|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction v71|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [v71|QWORD + v69|QWORD * 1 - 8], y: v70|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction v72|QWORD = LEA [v69|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: v72|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction v73|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction v74|DWORD[_] = MOV [v73|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v74|DWORD[_], y: v74|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v75|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: v75|QWORD, y: v75|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction v77|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [v77|QWORD + v75|QWORD * 1 - 8], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction v78|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: v78|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction v79|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction v80|DWORD[_] = MOV [v79|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: v80|DWORD[_], y: v80|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction v81|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: v81|QWORD, y: v81|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction v83|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [v83|QWORD + v81|QWORD * 1 - 8], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction v84|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: v84|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction rsi|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction v85|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction v86|DWORD[_] = MOV [v85|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: v86|DWORD[_], y: v86|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction v87|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: v87|QWORD, y: v87|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction v89|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [v89|QWORD + v87|QWORD * 1 - 8], y: v88|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction v90|QWORD = LEA [v87|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: v90|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction rsi|QWORD[.] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction v91|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction v92|DWORD[_] = MOV [v91|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: v92|DWORD[_], y: v92|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction v93|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: v93|QWORD, y: v93|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction v95|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [v95|QWORD + v93|QWORD * 1 - 8], y: v94|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction v96|QWORD = LEA [v93|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: v96|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction rsi|QWORD[.] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction v97|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction v98|DWORD[_] = MOV [v97|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction v99|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: v99|QWORD, y: v99|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction v101|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [v101|QWORD + v99|QWORD * 1 - 8], y: v100|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction v102|QWORD = LEA [v99|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: v102|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction v103|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction v104|DWORD[_] = MOV [v103|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: v104|DWORD[_], y: v104|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction v105|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: v105|QWORD, y: v105|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction v107|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [v107|QWORD + v105|QWORD * 1 - 8], y: v106|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction v108|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: v108|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction v109|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction v110|DWORD[_] = MOV [v109|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: v110|DWORD[_], y: v110|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction v111|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v110|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: v111|QWORD, y: v111|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction v113|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [v113|QWORD + v111|QWORD * 1 - 8], y: v112|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction v114|QWORD = LEA [v111|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: v114|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction v115|QWORD[.+] = LEA [v6|QWORD[.] + v30|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction v116|DWORD[_] = MOV [v115|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: v116|DWORD[_], y: v116|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction v117|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction v118|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: v117|QWORD, y: v117|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction v119|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v119|QWORD + v117|QWORD * 1 - 8], y: v118|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction v120|QWORD = LEA [v117|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: v120|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE v118|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [v6|QWORD[.] + v30|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction v121|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v122|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction v123|QWORD[.+] = LEA [v6|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction v124|DWORD[_] = MOV [v123|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: v124|DWORD[_], y: v124|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction v125|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v124|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: v125|QWORD, y: v125|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction v127|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [v127|QWORD + v125|QWORD * 1 - 8], y: v126|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction v128|QWORD = LEA [v125|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: v128|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD[.] = MOVE v126|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [v6|QWORD[.] + v122|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction v129|DWORD = INC v122|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: v0|QWORD[.] v6|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606144315216056693
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B151" 
    xhandlers
    flags 
    probability 4580541973710170272
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B3 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576820534258052746
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576305360396507357
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546955341531438869
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B140" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B140 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705274
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" "B47" "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B56 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B56" "B58" "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" "B65" "B68" "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B77 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B84 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" "B89" "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B91 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B91" "B93" "B96" "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B98 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" "B103" "B102" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B105 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B112 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B114 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B116" 
    successors "B119" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B119 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B119 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B121 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B128 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B126" "B128" "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B133 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612412902317324600
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4583096131299705272
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B133" "B135" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B141" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" "B149" 
    successors "B142" "B150" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B150 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576305360396507358
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B143 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546955341531438870
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B145 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B143" "B145" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B151" 
    xhandlers
    flags 
    probability 4607029770290587837
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:866) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction INC [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B151" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   20  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction r9|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B152" 
    xhandlers
    flags 
    probability 4602526170663217339
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B15" "B10" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B14" "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4607029770290587835
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction CMP r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B24" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B23" "B22" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576877775798224458
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  164  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B24 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B24" 
    successors "B17" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607119210197106133
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562222146112678766
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561382005056297721
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560557726877825095
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4546222649817240979
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B141" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607029770290587836
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r10|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580955
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" "B33" "B32" 
    successors "B41" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr  230  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  232  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" "B40" "B39" 
    successors "B48" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD <|@ <|@
      nr  282  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" "B47" "B46" 
    successors "B55" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD <|@ <|@
      nr  332  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" "B54" "B53" 
    successors "B62" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" "B61" "B60" 
    successors "B69" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD <|@ <|@
      nr  432  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B62" "B64" "B68" "B67" 
    successors "B76" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" "B75" "B74" 
    successors "B83" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD <|@ <|@
      nr  532  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B76" "B78" "B82" "B81" 
    successors "B90" "B85" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" "B89" "B88" 
    successors "B97" "B92" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" "B96" "B95" 
    successors "B104" "B99" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD <|@ <|@
      nr  682  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" "B103" "B102" 
    successors "B111" "B106" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD <|@ <|@
      nr  732  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" "B110" "B109" 
    successors "B118" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD <|@ <|@
      nr  782  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B117" "B116" 
    successors "B125" "B120" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD <|@ <|@
      nr  832  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B124" "B123" 
    successors "B132" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B125" "B127" "B131" "B130" 
    successors "B139" "B134" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B132" "B134" "B138" "B137" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612994067152580954
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD <|@ <|@
      nr  982  <|@ instruction r8|DWORD = LEA [r8|DWORD + 16] size: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~[] destination: B139 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B139" 
    successors "B27" "B141" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4615207704838908810
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B149" "B144" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576877775798224460
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B142" "B144" "B148" "B147" 
    successors "B141" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576877775798224459
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B149 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B26" "B149" 
    successors "B142" "B151" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607119210197106134
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  992  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956757
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  192  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226931
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457780
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  250  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD <|@ <|@
      nr  642  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  644  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  652  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  658  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B136" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  944  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" "B138" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  952  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  956  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  960  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B90" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD <|@ <|@
      nr  592  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  602  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B76" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD <|@ <|@
      nr  492  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  494  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  508  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B83" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  544  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  562  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  308  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B62" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  444  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  894  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  908  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  344  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B118" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  794  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  808  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  810  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B125" "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B104" "B101" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  694  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  698  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  712  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598320938599956756
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  744  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597536793918226929
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  750  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596699916555457779
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577140
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B139" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4582352240310577139
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B149" "B146" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4562222146112678767
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1006  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr 1008  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B147" "B148" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4561382005056297723
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr 1016  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4560557726877825096
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 1026  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B149" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4546222649817240980
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591748061259414062
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD <|@ <|@
      nr   60  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591039697199789149
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4590402169546126727
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction r9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   76  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4576253843010352816
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction MOV [r15|QWORD + 1156] y: -34835 size: DWORD <|@ <|@
      nr 1070  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:867) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1060  <|@ instruction MOV [r15|QWORD + 1156] y: -21787 size: DWORD <|@ <|@
      nr 1062  <|@ instruction MOV [r15|QWORD + 1168] y: 664 size: QWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:869) [bci: 31]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #44         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #44         // modCount:int
    10: aload_0       
    11: getfield      #21         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #32         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #32         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f855a07000048896c2410448b5624468b1cd50c000000ff4618837e14010f8cf6060000c74614000000004585db0f84b0000000458bc341ffc84d63c0458bcb418bca48c1e1034d3bc80f870a0000004183fb020f83e306000041807f40000f857206000042c704d510000000000000004183fb0341ba02000000450f42d341b801000000e919000000669041807f40000f851700000042c74481100000000041ffc0453bd00f8e4f000000ebde4a8d7481108b3685f674de4d8b4f2848c1e6034d85c90f8413000000498b5f384a89740bf8498d71f849897728ebbae800000000ebb3488b6c24104883c418493ba7500400000f8776060000c3458d53f0e94f0100000f1f84000000000041807f40000f858001000042c7448110000000004d63c841807f40000f859f01000042c74489140000000041807f40000f85cf02000042c74489180000000041807f40000f859303000042c744891c0000000041807f40000f85dd02000042c74489200000000041807f40000f85ff02000042c74489240000000041807f40000f851302000042c74489280000000041807f40000f853502000042c744892c0000000041807f40000f85b501000042c74489300000000041807f40000f853501000042c74489340000000041807f40000f85a903000042c74489380000000041807f40000f85cb03000042c744893c0000000041807f40000f851503000042c74489400000000041807f40000f853703000042c74489440000000041807f40000f858102000042c74489480000000041807f40000f85f300000042c744894c00000000458d4010453bd00f8fb0feffffe92b0000006666660f1f84000000000041807f40000f852004000042c74481100000000041ffc0660f1f840000000000453bd80f8e4ffeffffebd54a8d7481108b3685f60f8471feffff4d8b4f2848c1e6034d85c90f8440030000498b5f384a89740bf8498d71f849897728e94afeffff4a8d7489148b3685f60f8452feffff498b5f2848c1e6034885db0f8414030000498b7f384889741ff8488d73f849897728e92bfeffff4a8d7489348b3685f60f84bcfeffff498b5f2848c1e6034885db0f8410030000498b7f384889741ff8488d73f849897728e995feffff4a8d74894c8b3685f60f84fefeffff498b5f2848c1e6034885db0f84e4020000498b7f384889741ff8488d73f849897728e9d7feffff4a8d7489308b3685f60f843cfeffff498b5f2848c1e6034885db0f847c020000498b7f384889741ff8488d73f849897728e915feffff4a8d7489288b3685f60f84defdffff498b5f2848c1e6034885db0f848c020000498b7f384889741ff8488d73f849897728e9b7fdffff4a8d74892c8b3685f60f84bcfdffff498b5f2848c1e6034885db0f8474020000498b7f384889741ff8488d73f849897728e995fdffff4a8d7489188b3685f60f8422fdffff498b5f2848c1e6034885db0f842a020000498b7f384889741ff8488d73f849897728e9fbfcffff4a8d7489208b3685f60f8414fdffff498b5f2848c1e6034885db0f8412020000498b7f384889741ff8488d73f849897728e9edfcffff4a8d7489248b3685f60f84f2fcffff498b5f2848c1e6034885db0f84e6010000498b7f384889741ff8488d73f849897728e9cbfcffff4a8d7489488b3685f60f8470fdffff498b5f2848c1e6034885db0f84ba010000498b7f384889741ff8488d73f849897728e949fdffff4a8d74891c8b3685f60f845efcffff498b5f2848c1e6034885db0f843e010000498b7f384889741ff8488d73f849897728e937fcffff4a8d7489408b3685f60f84dcfcffff498b5f2848c1e6034885db0f84ea000000498b7f384889741ff8488d73f849897728e9b5fcffff4a8d7489448b3685f60f84bafcffff498b5f2848c1e6034885db0f84f0000000498b7f384889741ff8488d73f849897728e993fcffff4a8d7489388b3685f60f8448fcffff498b5f2848c1e6034885db0f846a000000498b7f384889741ff8488d73f849897728e921fcffff4a8d74893c8b3685f60f8426fcffff498b5f2848c1e6034885db0f843e000000498b7f384889741ff8488d73f849897728e9fffbffffe800000000e916fbffffe800000000e923fbffffe800000000e9a5fbffffe800000000e9c3fbffffe800000000e9cdfbffffe800000000e9d7fbffffe800000000e991fbffffe800000000e9fffbffffe800000000e905fbffffe800000000e937fbffffe800000000e9ddfaffffe800000000e9affbffffe800000000e92dfbffffe800000000e9e7faffffe800000000e9f1faffffe800000000e99bfbffff4a8d7481108b3685f60f84d1fbffff4d8b572848c1e6034d85d20f84160000004d8b4f384b897411f8498d72f849897728e9aafbffffe800000000e9a0fbffff4a8d34d5100000008b3685f60f847cf9ffff4d8b472848c1e6034d85c00f84160000004d8b4f384b897401f8498d70f849897728e955f9ffffe800000000e94bf9ffff41c78784040000ed77ffff49c7879004000014000000e8000000000f1f84000000000041c78784040000e5aaffff49c7879004000098020000e8000000000f1f84000000000048896c2410e800000000e997f8fffff4488d0d76f9ffff49898f68040000e949f8fffff441c78784040000f5bdffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD  <||@
  Comment 63 8 r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 67 10 r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 67 [rsi:0, r10:0]at java.util.HashMap.clear(HashMap.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 75 12 INC [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 78 14 CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 88 block B2 null  <||@
  Comment 88 16 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 88 18 MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 95 20 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 104 block B4 null  <||@
  Comment 104 22 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 24 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 110 26 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 113 28 r9|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 116 30 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 123 32 CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 132 block B6 null  <||@
  Comment 132 34 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 36 CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null  <||@
  Comment 142 block B8 null  <||@
  Comment 142 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 48 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null  <||@
  Comment 153 block B15 null  <||@
  Comment 153 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 153 100 MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 165 102 CMP r11|DWORD y: 3 size: DWORD  <||@
  Comment 169 104 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<|  <||@
  Comment 179 -1 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 185 106 JUMP ~[] destination: B15 -> B16  <||@
  Comment 190 block B17 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 190 112 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 114 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null  <||@
  Comment 203 block B24 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 203 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 203 162 MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 212 164 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 215 166 JUMP ~[] destination: B24 -> B16  <||@
  Comment 215 block B16 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 215 108 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 215 110 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD  <||@
  Comment 226 block B19 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 226 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 226 122 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 231 124 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 233 126 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 237 block B21 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 237 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 237 130 r9|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 241 132 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 245 134 TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD  <||@
  Comment 254 block B23 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 254 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 254 138 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 258 140 MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 263 142 rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 267 144 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 271 146 JUMP ~[] destination: B23 -> B24  <||@
  Comment 273 block B22 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 273 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 273 156 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 273 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 278 158 JUMP ~[] destination: B22 -> B24  <||@
  Comment 280 block B151 null  <||@
  Comment 280 1054 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 280 1056 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 289 POLL_RETURN_FAR  <||@
  Comment 303 block B25 null  <||@
  Comment 303 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 170 r10|DWORD = LEA [r11|DWORD - 16] size: DWORD  <||@
  Comment 307 172 JUMP ~[] destination: B25 -> B26  <||@
  Comment 312 block B27 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 312 178 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 180 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null  <||@
  Comment 331 block B34 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 331 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 228 MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 340 230 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 343 232 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null  <||@
  Comment 354 block B41 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 354 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 354 280 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD  <||@
  Comment 363 282 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null  <||@
  Comment 374 block B48 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 374 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 374 330 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD  <||@
  Comment 383 332 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null  <||@
  Comment 394 block B55 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 394 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 380 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD  <||@
  Comment 403 382 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 414 block B62 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 414 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 414 430 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD  <||@
  Comment 423 432 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null  <||@
  Comment 434 block B69 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 434 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 434 480 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD  <||@
  Comment 443 482 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null  <||@
  Comment 454 block B76 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 454 528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 530 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD  <||@
  Comment 463 532 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null  <||@
  Comment 474 block B83 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 474 578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 474 580 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD  <||@
  Comment 483 582 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null  <||@
  Comment 494 block B90 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 494 628 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 630 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD  <||@
  Comment 503 632 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null  <||@
  Comment 514 block B97 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 514 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 514 680 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD  <||@
  Comment 523 682 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null  <||@
  Comment 534 block B104 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 534 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 534 730 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD  <||@
  Comment 543 732 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null  <||@
  Comment 554 block B111 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 554 778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 554 780 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD  <||@
  Comment 563 782 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null  <||@
  Comment 574 block B118 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 574 828 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 574 830 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD  <||@
  Comment 583 832 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null  <||@
  Comment 594 block B125 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 594 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 594 880 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD  <||@
  Comment 603 882 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null  <||@
  Comment 614 block B132 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 614 928 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 614 930 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD  <||@
  Comment 623 932 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null  <||@
  Comment 634 block B139 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 634 978 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 634 980 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD  <||@
  Comment 643 982 r8|DWORD = LEA [r8|DWORD + 16] size: DWORD  <||@
  Comment 647 984 JUMP ~[] destination: B139 -> B26  <||@
  Comment 647 block B26 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 647 174 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 647 176 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD  <||@
  Comment 661 block B142 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 661 994 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 672 996 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null  <||@
  Comment 683 block B149 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 683 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 683 1044 MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 692 1046 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 695 1048 JUMP ~[] destination: B149 -> B141  <||@
  Comment 695 block B141 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 695 990 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 704 992 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD  <||@
  Comment 715 block B29 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 715 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 715 188 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 720 190 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 722 192 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 730 block B31 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 730 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 730 196 r9|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 734 198 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 738 200 TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 747 block B33 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 747 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 747 204 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 751 206 MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 756 208 rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 760 210 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 764 212 JUMP ~[] destination: B33 -> B34  <||@
  Comment 769 block B36 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 769 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 769 240 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD  <||@
  Comment 774 242 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 776 244 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 784 block B38 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 784 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 784 248 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 788 250 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 792 252 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD  <||@
  Comment 801 block B40 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 801 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 801 256 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 805 258 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 810 260 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 814 262 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 818 264 JUMP ~[] destination: B40 -> B41  <||@
  Comment 823 block B92 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 823 638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 823 640 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD  <||@
  Comment 828 642 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 830 644 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD  <||@
  Comment 838 block B94 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 838 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 838 648 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 842 650 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 846 652 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD  <||@
  Comment 855 block B96 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 855 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 855 656 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 859 658 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 864 660 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 868 662 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 872 664 JUMP ~[] destination: B96 -> B97  <||@
  Comment 877 block B134 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 877 938 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 877 940 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD  <||@
  Comment 882 942 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 884 944 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD  <||@
  Comment 892 block B136 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 892 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 892 948 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 896 950 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 900 952 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD  <||@
  Comment 909 block B138 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 909 954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 909 956 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 913 958 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 918 960 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 922 962 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 926 964 JUMP ~[] destination: B138 -> B139  <||@
  Comment 931 block B85 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 931 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 931 590 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD  <||@
  Comment 936 592 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 938 594 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD  <||@
  Comment 946 block B87 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 946 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 946 598 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 950 600 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 954 602 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD  <||@
  Comment 963 block B89 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 963 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 963 606 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 967 608 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 972 610 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 976 612 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 980 614 JUMP ~[] destination: B89 -> B90  <||@
  Comment 985 block B71 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 985 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 985 490 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD  <||@
  Comment 990 492 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 992 494 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD  <||@
  Comment 1000 block B73 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1000 496 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 498 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1004 500 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1008 502 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD  <||@
  Comment 1017 block B75 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1017 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 506 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1021 508 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1026 510 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1030 512 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1034 514 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1039 block B78 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1039 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1039 540 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD  <||@
  Comment 1044 542 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1046 544 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD  <||@
  Comment 1054 block B80 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1054 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1054 548 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1058 550 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1062 552 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD  <||@
  Comment 1071 block B82 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1071 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1071 556 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1075 558 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1080 560 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1084 562 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1088 564 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1093 block B43 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1093 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1093 290 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD  <||@
  Comment 1098 292 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1100 294 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD  <||@
  Comment 1108 block B45 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1108 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1108 298 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1112 300 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1116 302 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD  <||@
  Comment 1125 block B47 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1125 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1125 306 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1129 308 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1134 310 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1138 312 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1142 314 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1147 block B57 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1147 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1147 390 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD  <||@
  Comment 1152 392 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1154 394 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD  <||@
  Comment 1162 block B59 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1162 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1162 398 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1166 400 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1170 402 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD  <||@
  Comment 1179 block B61 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1179 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1179 406 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1183 408 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1188 410 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1192 412 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1196 414 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1201 block B64 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1201 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 440 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD  <||@
  Comment 1206 442 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1208 444 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD  <||@
  Comment 1216 block B66 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1216 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1216 448 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1220 450 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1224 452 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD  <||@
  Comment 1233 block B68 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1233 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1233 456 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1237 458 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1242 460 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1246 462 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1250 464 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1255 block B127 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1255 888 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1255 890 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD  <||@
  Comment 1260 892 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1262 894 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD  <||@
  Comment 1270 block B129 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1270 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1270 898 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1274 900 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1278 902 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD  <||@
  Comment 1287 block B131 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1287 904 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1287 906 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1291 908 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1296 910 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1300 912 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1304 914 JUMP ~[] destination: B131 -> B132  <||@
  Comment 1309 block B50 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1309 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1309 340 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD  <||@
  Comment 1314 342 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1316 344 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 1324 block B52 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1324 346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1324 348 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1328 350 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1332 352 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 1341 block B54 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1341 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1341 356 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1345 358 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1350 360 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1354 362 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1358 364 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1363 block B113 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1363 788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1363 790 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD  <||@
  Comment 1368 792 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1370 794 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD  <||@
  Comment 1378 block B115 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1378 796 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1378 798 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1382 800 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1386 802 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD  <||@
  Comment 1395 block B117 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1395 804 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1395 806 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1399 808 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1404 810 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1408 812 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1412 814 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1417 block B120 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1417 838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1417 840 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD  <||@
  Comment 1422 842 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1424 844 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD  <||@
  Comment 1432 block B122 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1432 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1432 848 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1436 850 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1440 852 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD  <||@
  Comment 1449 block B124 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1449 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1449 856 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1453 858 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1458 860 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1462 862 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1466 864 JUMP ~[] destination: B124 -> B125  <||@
  Comment 1471 block B99 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1471 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1471 690 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD  <||@
  Comment 1476 692 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1478 694 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD  <||@
  Comment 1486 block B101 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1486 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1486 698 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1490 700 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1494 702 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD  <||@
  Comment 1503 block B103 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1503 704 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1503 706 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1507 708 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1512 710 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1516 712 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1520 714 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1525 block B106 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1525 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1525 740 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD  <||@
  Comment 1530 742 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1532 744 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD  <||@
  Comment 1540 block B108 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1540 746 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1540 748 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1544 750 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1548 752 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD  <||@
  Comment 1557 block B110 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1557 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1557 756 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1561 758 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1566 760 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1570 762 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1574 764 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1579 block B32 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1579 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1579 222 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1579 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1584 224 JUMP ~[] destination: B32 -> B34  <||@
  Comment 1589 block B39 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1589 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1589 274 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1589 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1594 276 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1599 block B88 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1599 620 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1599 624 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1599 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1604 626 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1609 block B102 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1609 720 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1609 724 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1609 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1614 726 JUMP ~[] destination: B102 -> B104  <||@
  Comment 1619 block B109 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1619 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1619 774 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1619 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1624 776 JUMP ~[] destination: B109 -> B111  <||@
  Comment 1629 block B116 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1629 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1629 824 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1629 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1634 826 JUMP ~[] destination: B116 -> B118  <||@
  Comment 1639 block B95 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1639 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1639 674 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1639 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1644 676 JUMP ~[] destination: B95 -> B97  <||@
  Comment 1649 block B137 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1649 970 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1649 974 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1649 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1654 976 JUMP ~[] destination: B137 -> B139  <||@
  Comment 1659 block B53 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1659 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1659 374 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1659 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1664 376 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1669 block B74 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1669 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1669 524 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1669 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1674 526 JUMP ~[] destination: B74 -> B76  <||@
  Comment 1679 block B46 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1679 320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1679 324 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1679 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1684 326 JUMP ~[] destination: B46 -> B48  <||@
  Comment 1689 block B123 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1689 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1689 874 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1689 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1694 876 JUMP ~[] destination: B123 -> B125  <||@
  Comment 1699 block B81 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1699 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1699 574 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1699 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1704 576 JUMP ~[] destination: B81 -> B83  <||@
  Comment 1709 block B60 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1709 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1709 424 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1709 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1714 426 JUMP ~[] destination: B60 -> B62  <||@
  Comment 1719 block B67 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1719 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1719 474 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1719 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1724 476 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1729 block B130 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1729 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1729 924 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1729 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1734 926 JUMP ~[] destination: B130 -> B132  <||@
  Comment 1739 block B144 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 1739 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1739 1004 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1744 1006 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1746 1008 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD  <||@
  Comment 1754 block B146 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 1754 1010 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1754 1012 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1758 1014 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1762 1016 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD  <||@
  Comment 1771 block B148 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 1771 1018 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1771 1020 r9|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1775 1022 MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1780 1024 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1784 1026 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1788 1028 JUMP ~[] destination: B148 -> B149  <||@
  Comment 1793 block B147 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 1793 1034 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1793 1038 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1793 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1798 1040 JUMP ~[] destination: B147 -> B149  <||@
  Comment 1803 block B10 null  <||@
  Comment 1803 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1803 56 rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD  <||@
  Comment 1811 58 rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD  <||@
  Comment 1813 60 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 1821 block B12 null  <||@
  Comment 1821 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1821 64 r8|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1825 66 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1829 68 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 1838 block B14 null  <||@
  Comment 1838 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1838 72 r9|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1842 74 MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1847 76 rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 1851 78 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1855 80 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1860 block B13 null  <||@
  Comment 1860 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1860 94 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1860 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1865 96 JUMP ~[] destination: B13 -> B15  <||@
  Comment 1870 block B1 null  <||@
  Comment 1870 1066 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1870 1068 MOV [r15|QWORD + 1156] y: -34835 size: DWORD  <||@
  Comment 1881 1070 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1892 1072 DEOPT info [bci:10]  <||@
  Comment 1892 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1897 [rsi:0]at java.util.HashMap.clear(HashMap.java:867) [bci: 10, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1905 block B152 null  <||@
  Comment 1905 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1905 1060 MOV [r15|QWORD + 1156] y: -21787 size: DWORD  <||@
  Comment 1916 1062 MOV [r15|QWORD + 1168] y: 664 size: QWORD  <||@
  Comment 1927 1064 DEOPT info [bci:31]  <||@
  Comment 1927 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1932 [rcx:0, rsi:0]at java.util.HashMap.clear(HashMap.java:869) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 1945 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 1970 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 1998 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2003 [rsi:0, r10:0]at java.util.HashMap.clear(HashMap.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2011 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2011 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2017 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 2017 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2104[java.util.HashMap.clear()]"
  method "HotSpotCompilation-2104[java.util.HashMap.clear()]"
  date 1714038183729
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba637dfd40 448b560849bc000000fbb97f00004d03d44d33e4493bc20f8523533aff66669089842400c0feff4883ec189041817f20000000000f855a07000048896c2410448b5624468b1cd50c000000ff4618837e14010f8cf6060000c74614000000004585db0f84b0000000458bc341ffc84d63c0458bcb418bca48c1e1034d3bc80f870a0000004183fb020f83e306000041807f40000f857206000042c704d510000000000000004183fb0341ba02000000450f42d341b801000000e919000000669041807f40000f851700000042c74481100000000041ffc0453bd00f8e4f000000ebde4a8d7481108b3685f674de4d8b4f2848c1e6034d85c90f8413000000498b5f384a89740bf8498d71f849897728ebbae8aa634effebb3488b6c24104883c418493ba7500400000f8776060000c3458d53f0e94f0100000f1f84000000000041807f40000f858001000042c7448110000000004d63c841807f40000f859f01000042c74489140000000041807f40000f85cf02000042c74489180000000041807f40000f859303000042c744891c0000000041807f40000f85dd02000042c74489200000000041807f40000f85ff02000042c74489240000000041807f40000f851302000042c74489280000000041807f40000f853502000042c744892c0000000041807f40000f85b501000042c74489300000000041807f40000f853501000042c74489340000000041807f40000f85a903000042c74489380000000041807f40000f85cb03000042c744893c0000000041807f40000f851503000042c74489400000000041807f40000f853703000042c74489440000000041807f40000f858102000042c74489480000000041807f40000f85f300000042c744894c00000000458d4010453bd00f8fb0feffffe92b0000006666660f1f84000000000041807f40000f852004000042c74481100000000041ffc0660f1f840000000000453bd80f8e4ffeffffebd54a8d7481108b3685f60f8471feffff4d8b4f2848c1e6034d85c90f8440030000498b5f384a89740bf8498d71f849897728e94afeffff4a8d7489148b3685f60f8452feffff498b5f2848c1e6034885db0f8414030000498b7f384889741ff8488d73f849897728e92bfeffff4a8d7489348b3685f60f84bcfeffff498b5f2848c1e6034885db0f8410030000498b7f384889741ff8488d73f849897728e995feffff4a8d74894c8b3685f60f84fefeffff498b5f2848c1e6034885db0f84e4020000498b7f384889741ff8488d73f849897728e9d7feffff4a8d7489308b3685f60f843cfeffff498b5f2848c1e6034885db0f847c020000498b7f384889741ff8488d73f849897728e915feffff4a8d7489288b3685f60f84defdffff498b5f2848c1e6034885db0f848c020000498b7f384889741ff8488d73f849897728e9b7fdffff4a8d74892c8b3685f60f84bcfdffff498b5f2848c1e6034885db0f8474020000498b7f384889741ff8488d73f849897728e995fdffff4a8d7489188b3685f60f8422fdffff498b5f2848c1e6034885db0f842a020000498b7f384889741ff8488d73f849897728e9fbfcffff4a8d7489208b3685f60f8414fdffff498b5f2848c1e6034885db0f8412020000498b7f384889741ff8488d73f849897728e9edfcffff4a8d7489248b3685f60f84f2fcffff498b5f2848c1e6034885db0f84e6010000498b7f384889741ff8488d73f849897728e9cbfcffff4a8d7489488b3685f60f8470fdffff498b5f2848c1e6034885db0f84ba010000498b7f384889741ff8488d73f849897728e949fdffff4a8d74891c8b3685f60f845efcffff498b5f2848c1e6034885db0f843e010000498b7f384889741ff8488d73f849897728e937fcffff4a8d7489408b3685f60f84dcfcffff498b5f2848c1e6034885db0f84ea000000498b7f384889741ff8488d73f849897728e9b5fcffff4a8d7489448b3685f60f84bafcffff498b5f2848c1e6034885db0f84f0000000498b7f384889741ff8488d73f849897728e993fcffff4a8d7489388b3685f60f8448fcffff498b5f2848c1e6034885db0f846a000000498b7f384889741ff8488d73f849897728e921fcffff4a8d74893c8b3685f60f8426fcffff498b5f2848c1e6034885db0f843e000000498b7f384889741ff8488d73f849897728e9fffbffffe8905e4effe916fbffffe8865e4effe923fbffffe87c5e4effe9a5fbffffe8725e4effe9c3fbffffe8685e4effe9cdfbffffe85e5e4effe9d7fbffffe8545e4effe991fbffffe84a5e4effe9fffbffffe8405e4effe905fbffffe8365e4effe937fbffffe82c5e4effe9ddfaffffe8225e4effe9affbffffe8185e4effe92dfbffffe80e5e4effe9e7faffffe8045e4effe9f1faffffe8fa5d4effe99bfbffff4a8d7481108b3685f60f84d1fbffff4d8b572848c1e6034d85d20f84160000004d8b4f384b897411f8498d72f849897728e9aafbffffe8ba5d4effe9a0fbffff4a8d34d5100000008b3685f60f847cf9ffff4d8b472848c1e6034d85c00f84160000004d8b4f384b897401f8498d70f849897728e955f9ffffe8775d4effe94bf9ffff41c78784040000ed77ffff49c7879004000014000000e8d1ac3aff0f1f84000000000041c78784040000e5aaffff49c7879004000098020000e8aeac3aff0f1f84000000000048896c2410e842ad38ffe997f8fffff4488d0d76f9ffff49898f68040000e909bb3afff441c78784040000f5bdffff49c7879004000000000000e867ac3aff0f1f840000000000e8e0594efff4e8faa93afff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@fec94b1 slotKind: QWORD  <||@
  Comment 63 8 r10|DWORD[_] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 67 10 r11|DWORD = MOV [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 67 [rsi:0, r10:0]at java.util.HashMap.clear(HashMap.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 75 12 INC [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 78 14 CMPCONSTBRANCH [rsi|QWORD[.] + 20] trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 88 block B2 null  <||@
  Comment 88 16 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 88 18 MOV [rsi|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 95 20 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.016947388984342227 condition: = trueDestination: B2 -> B151 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 104 block B4 null  <||@
  Comment 104 22 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 104 24 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 110 26 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 113 28 r9|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 116 30 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 123 32 CMPBRANCH (x: r9|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 132 block B6 null  <||@
  Comment 132 34 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 36 CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B8 falseDestination: B6 -> B152 y: 2 size: DWORD inlinedY: null  <||@
  Comment 142 block B8 null  <||@
  Comment 142 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 48 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B15 falseDestination: B8 -> B10 y: 0 size: BYTE inlinedY: null  <||@
  Comment 153 block B15 null  <||@
  Comment 153 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 153 100 MOV [r10|DWORD[_] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 165 102 CMP r11|DWORD y: 3 size: DWORD  <||@
  Comment 169 104 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r11|DWORD) condition: |<|  <||@
  Comment 179 -1 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 185 106 JUMP ~[] destination: B15 -> B16  <||@
  Comment 190 block B17 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 190 112 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 192 114 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B17 -> B24 falseDestination: B17 -> B19 y: 0 size: BYTE inlinedY: null  <||@
  Comment 203 block B24 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 203 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 203 162 MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 212 164 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 215 166 JUMP ~[] destination: B24 -> B16  <||@
  Comment 215 block B16 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 215 108 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 215 110 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B25 size: DWORD  <||@
  Comment 226 block B19 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 226 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 226 122 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 231 124 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 233 126 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 237 block B21 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 237 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 237 130 r9|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 241 132 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 245 134 TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD  <||@
  Comment 254 block B23 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 254 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 254 138 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 258 140 MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 263 142 rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 267 144 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 271 146 JUMP ~[] destination: B23 -> B24  <||@
  Comment 273 block B22 loop 0 depth 1 header:20|LoopBegin  <||@
  Comment 273 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 273 156 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 273 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 278 158 JUMP ~[] destination: B22 -> B24  <||@
  Comment 280 block B151 null  <||@
  Comment 280 1054 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 280 1056 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 289 POLL_RETURN_FAR  <||@
  Comment 303 block B25 null  <||@
  Comment 303 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 170 r10|DWORD = LEA [r11|DWORD - 16] size: DWORD  <||@
  Comment 307 172 JUMP ~[] destination: B25 -> B26  <||@
  Comment 312 block B27 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 312 178 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 180 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B34 falseDestination: B27 -> B29 y: 0 size: BYTE inlinedY: null  <||@
  Comment 331 block B34 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 331 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 228 MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 340 230 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 343 232 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B34 -> B41 falseDestination: B34 -> B36 y: 0 size: BYTE inlinedY: null  <||@
  Comment 354 block B41 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 354 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 354 280 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 20] y: 0 size: DWORD  <||@
  Comment 363 282 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B48 falseDestination: B41 -> B43 y: 0 size: BYTE inlinedY: null  <||@
  Comment 374 block B48 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 374 328 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 374 330 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 24] y: 0 size: DWORD  <||@
  Comment 383 332 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B55 falseDestination: B48 -> B50 y: 0 size: BYTE inlinedY: null  <||@
  Comment 394 block B55 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 394 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 380 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 28] y: 0 size: DWORD  <||@
  Comment 403 382 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B62 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 414 block B62 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 414 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 414 430 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 32] y: 0 size: DWORD  <||@
  Comment 423 432 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B62 -> B69 falseDestination: B62 -> B64 y: 0 size: BYTE inlinedY: null  <||@
  Comment 434 block B69 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 434 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 434 480 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 36] y: 0 size: DWORD  <||@
  Comment 443 482 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B69 -> B76 falseDestination: B69 -> B71 y: 0 size: BYTE inlinedY: null  <||@
  Comment 454 block B76 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 454 528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 530 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 40] y: 0 size: DWORD  <||@
  Comment 463 532 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B76 -> B83 falseDestination: B76 -> B78 y: 0 size: BYTE inlinedY: null  <||@
  Comment 474 block B83 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 474 578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 474 580 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 44] y: 0 size: DWORD  <||@
  Comment 483 582 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B83 -> B90 falseDestination: B83 -> B85 y: 0 size: BYTE inlinedY: null  <||@
  Comment 494 block B90 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 494 628 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 630 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 48] y: 0 size: DWORD  <||@
  Comment 503 632 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B90 -> B97 falseDestination: B90 -> B92 y: 0 size: BYTE inlinedY: null  <||@
  Comment 514 block B97 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 514 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 514 680 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 52] y: 0 size: DWORD  <||@
  Comment 523 682 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B97 -> B104 falseDestination: B97 -> B99 y: 0 size: BYTE inlinedY: null  <||@
  Comment 534 block B104 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 534 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 534 730 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 56] y: 0 size: DWORD  <||@
  Comment 543 732 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B104 -> B111 falseDestination: B104 -> B106 y: 0 size: BYTE inlinedY: null  <||@
  Comment 554 block B111 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 554 778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 554 780 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 60] y: 0 size: DWORD  <||@
  Comment 563 782 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B111 -> B118 falseDestination: B111 -> B113 y: 0 size: BYTE inlinedY: null  <||@
  Comment 574 block B118 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 574 828 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 574 830 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 64] y: 0 size: DWORD  <||@
  Comment 583 832 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B118 -> B125 falseDestination: B118 -> B120 y: 0 size: BYTE inlinedY: null  <||@
  Comment 594 block B125 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 594 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 594 880 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 68] y: 0 size: DWORD  <||@
  Comment 603 882 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B125 -> B132 falseDestination: B125 -> B127 y: 0 size: BYTE inlinedY: null  <||@
  Comment 614 block B132 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 614 928 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 614 930 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 72] y: 0 size: DWORD  <||@
  Comment 623 932 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B132 -> B139 falseDestination: B132 -> B134 y: 0 size: BYTE inlinedY: null  <||@
  Comment 634 block B139 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 634 978 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 634 980 MOV [rcx|QWORD[.] + r9|QWORD * 4 + 76] y: 0 size: DWORD  <||@
  Comment 643 982 r8|DWORD = LEA [r8|DWORD + 16] size: DWORD  <||@
  Comment 647 984 JUMP ~[] destination: B139 -> B26  <||@
  Comment 647 block B26 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 647 174 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 647 176 CMPBRANCH (x: r10|DWORD, y: r8|DWORD) trueDestinationProbability: 0.7241671292960365 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B141 size: DWORD  <||@
  Comment 661 block B142 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 661 994 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 672 996 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B142 -> B149 falseDestination: B142 -> B144 y: 0 size: BYTE inlinedY: null  <||@
  Comment 683 block B149 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 683 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 683 1044 MOV [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: 0 size: DWORD  <||@
  Comment 692 1046 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 695 1048 JUMP ~[] destination: B149 -> B141  <||@
  Comment 695 block B141 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 695 990 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 704 992 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B141 -> B142 falseDestination: B141 -> B151 size: DWORD  <||@
  Comment 715 block B29 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 715 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 715 188 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 720 190 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 722 192 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 730 block B31 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 730 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 730 196 r9|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 734 198 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 738 200 TESTBRANCH (x: r9|QWORD, y: r9|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: QWORD  <||@
  Comment 747 block B33 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 747 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 747 204 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 751 206 MOV (x: [rbx|QWORD + r9|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 756 208 rsi|QWORD = LEA [r9|QWORD - 8] size: QWORD  <||@
  Comment 760 210 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 764 212 JUMP ~[] destination: B33 -> B34  <||@
  Comment 769 block B36 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 769 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 769 240 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 20] size: QWORD  <||@
  Comment 774 242 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 776 244 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B36 -> B41 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 784 block B38 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 784 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 784 248 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 788 250 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 792 252 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD  <||@
  Comment 801 block B40 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 801 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 801 256 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 805 258 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 810 260 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 814 262 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 818 264 JUMP ~[] destination: B40 -> B41  <||@
  Comment 823 block B92 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 823 638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 823 640 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 52] size: QWORD  <||@
  Comment 828 642 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 830 644 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B92 -> B97 falseDestination: B92 -> B94 size: DWORD  <||@
  Comment 838 block B94 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 838 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 838 648 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 842 650 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 846 652 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 size: QWORD  <||@
  Comment 855 block B96 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 855 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 855 656 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 859 658 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 864 660 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 868 662 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 872 664 JUMP ~[] destination: B96 -> B97  <||@
  Comment 877 block B134 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 877 938 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 877 940 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 76] size: QWORD  <||@
  Comment 882 942 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 884 944 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B134 -> B139 falseDestination: B134 -> B136 size: DWORD  <||@
  Comment 892 block B136 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 892 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 892 948 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 896 950 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 900 952 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B138 size: QWORD  <||@
  Comment 909 block B138 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 909 954 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 909 956 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 913 958 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 918 960 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 922 962 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 926 964 JUMP ~[] destination: B138 -> B139  <||@
  Comment 931 block B85 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 931 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 931 590 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 48] size: QWORD  <||@
  Comment 936 592 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 938 594 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B85 -> B90 falseDestination: B85 -> B87 size: DWORD  <||@
  Comment 946 block B87 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 946 596 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 946 598 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 950 600 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 954 602 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 size: QWORD  <||@
  Comment 963 block B89 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 963 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 963 606 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 967 608 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 972 610 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 976 612 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 980 614 JUMP ~[] destination: B89 -> B90  <||@
  Comment 985 block B71 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 985 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 985 490 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 40] size: QWORD  <||@
  Comment 990 492 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 992 494 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B71 -> B76 falseDestination: B71 -> B73 size: DWORD  <||@
  Comment 1000 block B73 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1000 496 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 498 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1004 500 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1008 502 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: QWORD  <||@
  Comment 1017 block B75 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1017 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1017 506 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1021 508 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1026 510 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1030 512 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1034 514 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1039 block B78 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1039 538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1039 540 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 44] size: QWORD  <||@
  Comment 1044 542 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1046 544 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B78 -> B83 falseDestination: B78 -> B80 size: DWORD  <||@
  Comment 1054 block B80 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1054 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1054 548 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1058 550 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1062 552 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 size: QWORD  <||@
  Comment 1071 block B82 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1071 554 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1071 556 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1075 558 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1080 560 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1084 562 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1088 564 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1093 block B43 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1093 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1093 290 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 24] size: QWORD  <||@
  Comment 1098 292 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1100 294 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B43 -> B48 falseDestination: B43 -> B45 size: DWORD  <||@
  Comment 1108 block B45 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1108 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1108 298 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1112 300 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1116 302 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD  <||@
  Comment 1125 block B47 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1125 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1125 306 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1129 308 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1134 310 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1138 312 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1142 314 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1147 block B57 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1147 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1147 390 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 32] size: QWORD  <||@
  Comment 1152 392 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1154 394 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 size: DWORD  <||@
  Comment 1162 block B59 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1162 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1162 398 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1166 400 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1170 402 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 size: QWORD  <||@
  Comment 1179 block B61 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1179 404 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1179 406 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1183 408 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1188 410 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1192 412 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1196 414 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1201 block B64 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1201 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 440 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 36] size: QWORD  <||@
  Comment 1206 442 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1208 444 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 size: DWORD  <||@
  Comment 1216 block B66 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1216 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1216 448 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1220 450 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1224 452 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 size: QWORD  <||@
  Comment 1233 block B68 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1233 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1233 456 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1237 458 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1242 460 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1246 462 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1250 464 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1255 block B127 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1255 888 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1255 890 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 72] size: QWORD  <||@
  Comment 1260 892 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1262 894 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B127 -> B132 falseDestination: B127 -> B129 size: DWORD  <||@
  Comment 1270 block B129 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1270 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1270 898 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1274 900 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1278 902 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 size: QWORD  <||@
  Comment 1287 block B131 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1287 904 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1287 906 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1291 908 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1296 910 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1300 912 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1304 914 JUMP ~[] destination: B131 -> B132  <||@
  Comment 1309 block B50 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1309 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1309 340 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 28] size: QWORD  <||@
  Comment 1314 342 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1316 344 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B50 -> B55 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 1324 block B52 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1324 346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1324 348 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1328 350 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1332 352 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 1341 block B54 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1341 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1341 356 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1345 358 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1350 360 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1354 362 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1358 364 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1363 block B113 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1363 788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1363 790 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 64] size: QWORD  <||@
  Comment 1368 792 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1370 794 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B113 -> B118 falseDestination: B113 -> B115 size: DWORD  <||@
  Comment 1378 block B115 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1378 796 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1378 798 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1382 800 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1386 802 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B117 size: QWORD  <||@
  Comment 1395 block B117 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1395 804 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1395 806 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1399 808 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1404 810 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1408 812 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1412 814 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1417 block B120 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1417 838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1417 840 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 68] size: QWORD  <||@
  Comment 1422 842 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1424 844 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B120 -> B125 falseDestination: B120 -> B122 size: DWORD  <||@
  Comment 1432 block B122 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1432 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1432 848 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1436 850 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1440 852 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B122 -> B123 falseDestination: B122 -> B124 size: QWORD  <||@
  Comment 1449 block B124 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1449 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1449 856 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1453 858 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1458 860 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1462 862 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1466 864 JUMP ~[] destination: B124 -> B125  <||@
  Comment 1471 block B99 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1471 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1471 690 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 56] size: QWORD  <||@
  Comment 1476 692 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1478 694 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B99 -> B104 falseDestination: B99 -> B101 size: DWORD  <||@
  Comment 1486 block B101 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1486 696 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1486 698 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1490 700 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1494 702 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 size: QWORD  <||@
  Comment 1503 block B103 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1503 704 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1503 706 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1507 708 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1512 710 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1516 712 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1520 714 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1525 block B106 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1525 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1525 740 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r9|QWORD * 4 + 60] size: QWORD  <||@
  Comment 1530 742 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1532 744 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B106 -> B111 falseDestination: B106 -> B108 size: DWORD  <||@
  Comment 1540 block B108 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1540 746 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1540 748 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1544 750 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1548 752 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 size: QWORD  <||@
  Comment 1557 block B110 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1557 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1557 756 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1561 758 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1566 760 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 1570 762 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1574 764 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1579 block B32 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1579 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1579 222 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1579 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1584 224 JUMP ~[] destination: B32 -> B34  <||@
  Comment 1589 block B39 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1589 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1589 274 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1589 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1594 276 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1599 block B88 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1599 620 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1599 624 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1599 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1604 626 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1609 block B102 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1609 720 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1609 724 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1609 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1614 726 JUMP ~[] destination: B102 -> B104  <||@
  Comment 1619 block B109 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1619 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1619 774 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1619 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1624 776 JUMP ~[] destination: B109 -> B111  <||@
  Comment 1629 block B116 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1629 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1629 824 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1629 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1634 826 JUMP ~[] destination: B116 -> B118  <||@
  Comment 1639 block B95 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1639 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1639 674 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1639 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1644 676 JUMP ~[] destination: B95 -> B97  <||@
  Comment 1649 block B137 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1649 970 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1649 974 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1649 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1654 976 JUMP ~[] destination: B137 -> B139  <||@
  Comment 1659 block B53 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1659 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1659 374 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1659 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1664 376 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1669 block B74 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1669 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1669 524 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1669 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1674 526 JUMP ~[] destination: B74 -> B76  <||@
  Comment 1679 block B46 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1679 320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1679 324 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1679 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1684 326 JUMP ~[] destination: B46 -> B48  <||@
  Comment 1689 block B123 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1689 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1689 874 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1689 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1694 876 JUMP ~[] destination: B123 -> B125  <||@
  Comment 1699 block B81 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1699 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1699 574 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1699 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1704 576 JUMP ~[] destination: B81 -> B83  <||@
  Comment 1709 block B60 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1709 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1709 424 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1709 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1714 426 JUMP ~[] destination: B60 -> B62  <||@
  Comment 1719 block B67 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1719 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1719 474 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1719 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1724 476 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1729 block B130 loop 1 depth 1 header:142|LoopBegin  <||@
  Comment 1729 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1729 924 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1729 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1734 926 JUMP ~[] destination: B130 -> B132  <||@
  Comment 1739 block B144 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 1739 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1739 1004 rsi|QWORD[.+] = LEA [rcx|QWORD[.] + r8|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1744 1006 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1746 1008 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B144 -> B149 falseDestination: B144 -> B146 size: DWORD  <||@
  Comment 1754 block B146 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 1754 1010 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1754 1012 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1758 1014 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1762 1016 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B148 size: QWORD  <||@
  Comment 1771 block B148 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 1771 1018 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1771 1020 r9|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1775 1022 MOV (x: [r9|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1780 1024 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1784 1026 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1788 1028 JUMP ~[] destination: B148 -> B149  <||@
  Comment 1793 block B147 loop 2 depth 1 header:162|LoopBegin  <||@
  Comment 1793 1034 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1793 1038 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1793 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1798 1040 JUMP ~[] destination: B147 -> B149  <||@
  Comment 1803 block B10 null  <||@
  Comment 1803 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1803 56 rsi|QWORD[*] = LEA [r10|DWORD[_] * 8 + 16] size: QWORD  <||@
  Comment 1811 58 rsi|DWORD[_] = MOV [rsi|QWORD[*]] size: DWORD  <||@
  Comment 1813 60 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 1821 block B12 null  <||@
  Comment 1821 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1821 64 r8|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1825 66 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@667f3af0 encoding: base: 0 shift: 3  <||@
  Comment 1829 68 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 1838 block B14 null  <||@
  Comment 1838 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1838 72 r9|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1842 74 MOV (x: [r9|QWORD + r8|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1847 76 rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 1851 78 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1855 80 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1860 block B13 null  <||@
  Comment 1860 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1860 94 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1860 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1865 96 JUMP ~[] destination: B13 -> B15  <||@
  Comment 1870 block B1 null  <||@
  Comment 1870 1066 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1870 1068 MOV [r15|QWORD + 1156] y: -34835 size: DWORD  <||@
  Comment 1881 1070 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1892 1072 DEOPT info [bci:10]  <||@
  Comment 1892 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1897 [rsi:0]at java.util.HashMap.clear(HashMap.java:867) [bci: 10, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1905 block B152 null  <||@
  Comment 1905 1058 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1905 1060 MOV [r15|QWORD + 1156] y: -21787 size: DWORD  <||@
  Comment 1916 1062 MOV [r15|QWORD + 1168] y: 664 size: QWORD  <||@
  Comment 1927 1064 DEOPT info [bci:31]  <||@
  Comment 1927 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1932 [rcx:0, rsi:0]at java.util.HashMap.clear(HashMap.java:869) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |-   <||@
  Comment 1945 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 1970 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 1998 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2003 [rsi:0, r10:0]at java.util.HashMap.clear(HashMap.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 2011 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2011 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2017 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 2017 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
