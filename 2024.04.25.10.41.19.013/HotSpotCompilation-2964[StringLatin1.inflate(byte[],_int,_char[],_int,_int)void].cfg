begin_compilation
  name " HotSpotCompilation-2964[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  method "HotSpotCompilation-2964[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  date 1714038089621
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a509  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 v555 v556 v557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a72 
index: - 
=== Succesors ===
=== Usages ===
a509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a509 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
=== Succesors ===
next: a510 
=== Usages ===
v553 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - #next: a510  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a72 
index: - 
=== Succesors ===
=== Usages ===
a510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a510 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
lastLocationAccess: - 
=== Succesors ===
next: a511 
=== Usages ===
v552 
=== Predecessor ===
a509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v556 lastLocationAccess: - #next: a511  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a72 
index: - 
=== Succesors ===
=== Usages ===
a511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a511 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
lastLocationAccess: - 
=== Succesors ===
next: a512 
=== Usages ===
v550 
=== Predecessor ===
a510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v554 lastLocationAccess: - #next: a512  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a72 
index: - 
=== Succesors ===
=== Usages ===
a512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
=== Succesors ===
next: j505 
=== Usages ===
v551 
=== Predecessor ===
a511 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - #next: j505  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 23728
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a509 
=== Succesors ===
=== Usages ===
v47 j505 v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
=== Succesors ===
next: v507 
=== Usages ===
j499 j503 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid i498 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 77
stableDimension: 0
stamp: i32
stampKind: i32
value: int[77|0x4d]
=== Inputs ===
=== Succesors ===
=== Usages ===
j499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j499 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j505 
y: i498 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j505 y: i498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
value: j499 
stateAfter: - 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
j505 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - value: j499 stateAfter: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 23728
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a510 
=== Succesors ===
=== Usages ===
v47 v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a510  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j505 
y: i502 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j505 y: i502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
value: j503 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - value: j503 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 23728
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a511 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a511  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 23728
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a512 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v550 v551 v552 v553 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v550 v551 v552 v553 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v174 i277 i162 v70 i438 v245 v276 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i23 i30 i53 i54 i69 v70 i249 i250 i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i21 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.02691690320311102
stamp: void
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v50 #falseSuccessor: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i513 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i513  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v580 v578 v558 v559 v562 v564 v566 v568 v570 v572 v574 v576 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v559 i54 v95 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v581 v579 v560 v561 v563 v565 v567 v569 v571 v573 v575 v577 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v561 i53 v109 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.inflate(byte[], int, char[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 763
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 
=== Succesors ===
=== Usages ===
v445 i513 i514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i513 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-23051|0xffffffffffffa5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v558 
lastLocationAccess: - 
=== Succesors ===
next: v470 
=== Usages ===
v95 v170 j160 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v558 lastLocationAccess: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j444 j444 j444 j444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i2 
y: i21 
=== Succesors ===
=== Usages ===
v170 i67 j164 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i161 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i161  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i162 
=== Succesors ===
=== Usages ===
j167 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i162  <|@  <|@
f <@~|@floating>@ <|@
tid j166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-1 - 4294967294]
=== Inputs ===
x: j526 
y: j166 
=== Succesors ===
=== Usages ===
j168 j179 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j526 y: j166  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 i277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i173 
=== Succesors ===
=== Usages ===
v470 v486 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v466 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
i513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v466 #falseSuccessor: v469  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
v466 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
j168 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j168 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j164 
y: j167 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j164 y: j167  <|@  <|@
f <@~|@floating>@ <|@
tid j160 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i513 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i513  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j168 
y: j160 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j168 y: j160  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -30747
stableDimension: 0
stamp: i32 [-30747]
stampKind: i32
value: int[-30747|0xffffffffffff87e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v477 #falseSuccessor: v474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i513 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i513  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v467 #falseSuccessor: v475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v464 v465 
=== Succesors ===
next: i514 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v464 v465 #next: i514  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i514 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-26891|0xffffffffffff96f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v486 
=== Usages ===
v109 v181 j177 
=== Predecessor ===
v463 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v560 lastLocationAccess: - #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i4 
y: i21 
=== Succesors ===
=== Usages ===
v181 i68 j178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v482 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
i514 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v482 #falseSuccessor: v485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v482 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i53 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j167 
y: j178 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j167 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i514 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i514  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j179 
y: j177 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j179 y: j177  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -33307
stableDimension: 0
stamp: i32 [-33307]
stampKind: i32
value: int[-33307|0xffffffffffff7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v490 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v493 #falseSuccessor: v490  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i514 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i514  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v483 #falseSuccessor: v491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v480 v481 
=== Succesors ===
next: v205 
=== Usages ===
v185 v270 v239 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v480 v481 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i513 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i513  <|@  <|@
f <@~|@floating>@ <|@
tid j442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j444 j444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v202 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i514 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i514  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v206 #falseSuccessor: v208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i515 
=== Usages ===
v117 
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i515  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i2 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
=== Succesors ===
next: v117 
=== Usages ===
i142 
=== Predecessor ===
v206 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i4 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i515 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v206 
address: v561 
lastLocationAccess: - 
value: i142 
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
i515 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v206 address: v561 lastLocationAccess: - value: i142 stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i36 
=== Succesors ===
=== Usages ===
i277 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v276 
trueValue: i5 
falseValue: i173 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v276 trueValue: i5 falseValue: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i21 i30 
=== Succesors ===
=== Usages ===
i30 v15 i224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i21 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i53 i22 
=== Succesors ===
=== Usages ===
v563 i22 i223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i53 i22  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i54 i23 
=== Succesors ===
=== Usages ===
v562 i23 i222 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i54 i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 36.15137631005115
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: v20 
=== Usages ===
i69 i68 i67 v17 v31 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i277 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i69 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v19 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i516 
=== Usages ===
v185 
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i516  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i67 
=== Succesors ===
=== Usages ===
i516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v137 
=== Usages ===
i146 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v479 v19 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v479 v19  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i68 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i68  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v185 
address: v563 
lastLocationAccess: - 
value: i146 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v185 address: v563 lastLocationAccess: - value: i146 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i67 
y: i21 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i67 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i68 
y: i21 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i68 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i69 
y: i21 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i69 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 i431 i432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8]
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i437 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i437  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v213 
values: i67 i432 
=== Succesors ===
=== Usages ===
j528 v564 i253 i432 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v213 values: i67 i432  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v213 
values: i68 i431 
=== Succesors ===
=== Usages ===
j531 v565 i254 i431 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v213 values: i68 i431  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v213 
values: i69 i433 
=== Succesors ===
=== Usages ===
v214 i433 i255 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v213 values: i69 i433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 36.15137631005115
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v240 
=== Succesors ===
next: v217 
=== Usages ===
v215 v221 i222 i223 i224 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v240 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i224 
y: i438 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i224 y: i438  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.7787082867499082
stamp: void
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v216 #falseSuccessor: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i517 
=== Usages ===
v239 
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i222 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
i235 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v479 v216 
=== Succesors ===
=== Usages ===
v411 v232 v385 v295 v399 v327 v371 v341 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v479 v216  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i223 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i223  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i517 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v565 
lastLocationAccess: - 
value: i235 
stateAfter: - 
=== Succesors ===
next: i518 
=== Usages ===
=== Predecessor ===
i517 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v565 lastLocationAccess: - value: i235 stateAfter: - #next: i518  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i222 
=== Succesors ===
=== Usages ===
v568 v570 v572 v574 v576 v578 v580 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i222  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i518 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
=== Succesors ===
next: v295 
=== Usages ===
i298 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i223 
=== Succesors ===
=== Usages ===
v569 v571 v573 v575 v577 v579 v581 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i223  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 18
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i518 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v569 
lastLocationAccess: - 
value: i298 
stateAfter: - 
=== Succesors ===
next: i519 
=== Usages ===
=== Predecessor ===
i518 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v569 lastLocationAccess: - value: i298 stateAfter: - #next: i519  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 18
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
i330 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i519 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v571 
lastLocationAccess: - 
value: i330 
stateAfter: - 
=== Succesors ===
next: i520 
=== Usages ===
=== Predecessor ===
i519 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v571 lastLocationAccess: - value: i330 stateAfter: - #next: i520  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 19
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i520 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
i344 
=== Predecessor ===
v327 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 22
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i520 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v573 
lastLocationAccess: - 
value: i344 
stateAfter: - 
=== Succesors ===
next: i521 
=== Usages ===
=== Predecessor ===
i520 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v573 lastLocationAccess: - value: i344 stateAfter: - #next: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
i374 
=== Predecessor ===
v341 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i521 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v575 
lastLocationAccess: - 
value: i374 
stateAfter: - 
=== Succesors ===
next: i522 
=== Usages ===
=== Predecessor ===
i521 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v575 lastLocationAccess: - value: i374 stateAfter: - #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 21
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
i388 
=== Predecessor ===
v371 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 26
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i388 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i522 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v577 
lastLocationAccess: - 
value: i388 
stateAfter: - 
=== Succesors ===
next: i523 
=== Usages ===
=== Predecessor ===
i522 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v577 lastLocationAccess: - value: i388 stateAfter: - #next: i523  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 22
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i523 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
i402 
=== Predecessor ===
v385 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i523 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v579 
lastLocationAccess: - 
value: i402 
stateAfter: - 
=== Succesors ===
next: i524 
=== Usages ===
=== Predecessor ===
i523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v579 lastLocationAccess: - value: i402 stateAfter: - #next: i524  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 23
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
lastLocationAccess: - 
=== Succesors ===
next: v411 
=== Usages ===
i414 
=== Predecessor ===
v399 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 lastLocationAccess: - #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 30
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i524 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v581 
lastLocationAccess: - 
value: i414 
stateAfter: - 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
i524 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v581 lastLocationAccess: - value: i414 stateAfter: - #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i224 
y: i421 
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i224 y: i421  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i223 
y: i421 
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i223 y: i421  <|@  <|@
f <@~|@floating>@ <|@
tid i432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i222 
y: i421 
=== Succesors ===
=== Usages ===
i222 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i222 y: i421  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v213 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v213  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v213 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v213 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v215 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i222 i250 
=== Succesors ===
=== Usages ===
i250 v566 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v244 values: i222 i250  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i223 i249 
=== Succesors ===
=== Usages ===
i249 v567 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v244 values: i223 i249  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i224 i251 
=== Succesors ===
=== Usages ===
v245 i251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v244 values: i224 i251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 36.15137631005115
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v271 
=== Succesors ===
next: v248 
=== Usages ===
v246 v252 i253 i254 i255 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v271 #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i5 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i255 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v247 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v247 #falseSuccessor: v246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i525 
=== Usages ===
v270 
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i525  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i253 
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
i266 
=== Predecessor ===
v247 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v479 v247 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v479 v247  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i254 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i254  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i525 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v270 
address: v567 
lastLocationAccess: - 
value: i266 
stateAfter: - 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
i525 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v270 address: v567 lastLocationAccess: - value: i266 stateAfter: - #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i255 
y: i21 
=== Succesors ===
=== Usages ===
i255 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i255 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i254 
y: i21 
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i254 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i253 
y: i21 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i253 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v244 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v244 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v244 #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v63 v64 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v63 v64 #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -28187
stableDimension: 0
stamp: i32 [-28187]
stampKind: i32
value: int[-28187|0xffffffffffff91e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -24603
stableDimension: 0
stamp: i32 [-24603]
stampKind: i32
value: int[-24603|0xffffffffffff9fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v475 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [-33307 - -24603] bits:1...1xxxxxxx111100101
valueDescription: i32
=== Inputs ===
merge: v439 
values: i449 i452 i454 i456 i449 i452 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v439 values: i449 i452 i454 i456 i449 i452  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i64 [0 - 24] bits:0...0xx000
valueDescription: i64
=== Inputs ===
merge: v439 
values: j450 j450 j442 j442 j450 j450 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v439 values: j450 j450 j442 j442 j450 j450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v448 v451 v453 v455 v495 v496 
=== Succesors ===
next: v445 
=== Usages ===
i443 j444 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v448 v451 v453 v455 v495 v496 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i443 
speculation: j444 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i443 speculation: j444  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a509  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 v555 v556 v557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v5|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a72 
index: - 
=== Succesors ===
=== Usages ===
a509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a509 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
=== Succesors ===
next: a510 
=== Usages ===
v553 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - #next: a510  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result [v5|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a72 
index: - 
=== Succesors ===
=== Usages ===
a510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a510 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
lastLocationAccess: - 
=== Succesors ===
next: a511 
=== Usages ===
v552 
=== Predecessor ===
a509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v556 lastLocationAccess: - #next: a511  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v5|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a72 
index: - 
=== Succesors ===
=== Usages ===
a511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a511 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
lastLocationAccess: - 
=== Succesors ===
next: a512 
=== Usages ===
v550 
=== Predecessor ===
a510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v554 lastLocationAccess: - #next: a512  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result [v5|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a72 
index: - 
=== Succesors ===
=== Usages ===
a512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a72 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
=== Succesors ===
next: j505 
=== Usages ===
v551 
=== Predecessor ===
a511 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - #next: j505  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v6|DWORD[_] * 8 + 23728] <|@
d <@d|@=== Debug Properties ===
displacement: 23728
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a509 
=== Succesors ===
=== Usages ===
v47 j505 v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j505 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
=== Succesors ===
next: v507 
=== Usages ===
j499 j503 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid i498 <|@
result int[77|0x4d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 77
stableDimension: 0
stamp: i32
stampKind: i32
value: int[77|0x4d]
=== Inputs ===
=== Succesors ===
=== Usages ===
j499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j499 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j505 
y: i498 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j505 y: i498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
value: j499 
stateAfter: - 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
j505 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - value: j499 stateAfter: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [v7|DWORD[_] * 8 + 23728] <|@
d <@d|@=== Debug Properties ===
displacement: 23728
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a510 
=== Succesors ===
=== Usages ===
v47 v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a510  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j505 
y: i502 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j505 y: i502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
value: j503 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - value: j503 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v8|DWORD[_] * 8 + 23728] <|@
d <@d|@=== Debug Properties ===
displacement: 23728
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a511 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a511  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v9|DWORD[_] * 8 + 23728] <|@
d <@d|@=== Debug Properties ===
displacement: 23728
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a512 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v550 v551 v552 v553 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v550 v551 v552 v553 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v174 i277 i162 v70 i438 v245 v276 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i23 i30 i53 i54 i69 v70 i249 i250 i251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i21 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.02691690320311102
stamp: void
=== Inputs ===
condition: v70 
=== Succesors ===
trueSuccessor: v50 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v70 #trueSuccessor: v50 #falseSuccessor: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i513 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i513  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v580 v578 v558 v559 v562 v564 v566 v568 v570 v572 v574 v576 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v559 i54 v95 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v581 v579 v560 v561 v563 v565 v567 v569 v571 v573 v575 v577 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v561 i53 v109 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.inflate(byte[], int, char[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 763
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 
=== Succesors ===
=== Usages ===
v445 i513 i514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i513 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-23051|0xffffffffffffa5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v558 
lastLocationAccess: - 
=== Succesors ===
next: v470 
=== Usages ===
v95 v170 j160 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v558 lastLocationAccess: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j444 j444 j444 j444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i2 
y: i21 
=== Succesors ===
=== Usages ===
v170 i67 j164 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i161 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i161  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i162 
=== Succesors ===
=== Usages ===
j167 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i162  <|@  <|@
f <@~|@floating>@ <|@
tid j166 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-1 - 4294967294]
=== Inputs ===
x: j526 
y: j166 
=== Succesors ===
=== Usages ===
j168 j179 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j526 y: j166  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 i277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i173 
=== Succesors ===
=== Usages ===
v470 v486 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v466 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
i513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v466 #falseSuccessor: v469  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v464  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
v466 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
j168 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j168 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j164 
y: j167 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j164 y: j167  <|@  <|@
f <@~|@floating>@ <|@
tid j160 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i513 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i513  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j168 
y: j160 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j168 y: j160  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
result int[-30747|0xffffffffffff87e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -30747
stableDimension: 0
stamp: i32 [-30747]
stampKind: i32
value: int[-30747|0xffffffffffff87e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v477 #falseSuccessor: v474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i513 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i513  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v467 #falseSuccessor: v475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v464 v465 
=== Succesors ===
next: i514 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v464 v465 #next: i514  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i514 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-26891|0xffffffffffff96f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v486 
=== Usages ===
v109 v181 j177 
=== Predecessor ===
v463 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v560 lastLocationAccess: - #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i4 
y: i21 
=== Succesors ===
=== Usages ===
v181 i68 j178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v482 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
i514 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v482 #falseSuccessor: v485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v482 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i53 
=== Succesors ===
=== Usages ===
j179 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i53  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j167 
y: j178 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j167 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i514 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i514  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j179 
y: j177 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j179 y: j177  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
result int[-33307|0xffffffffffff7de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -33307
stableDimension: 0
stamp: i32 [-33307]
stampKind: i32
value: int[-33307|0xffffffffffff7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v490 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v493 #falseSuccessor: v490  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i514 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i514  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v491 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v483 #falseSuccessor: v491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v480 v481 
=== Succesors ===
next: v205 
=== Usages ===
v185 v270 v239 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v480 v481 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i513 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i513  <|@  <|@
f <@~|@floating>@ <|@
tid j442 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j444 j444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v202 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i514 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i514  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v206 #falseSuccessor: v208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i515 
=== Usages ===
v117 
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i515  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v0|QWORD[.] + v1|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i2 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
=== Succesors ===
next: v117 
=== Usages ===
i142 
=== Predecessor ===
v206 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v2|QWORD[.] + v3|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i4 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i515 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v206 
address: v561 
lastLocationAccess: - 
value: i142 
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
i515 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v206 address: v561 lastLocationAccess: - value: i142 stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i36 
=== Succesors ===
=== Usages ===
i277 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v276 
trueValue: i5 
falseValue: i173 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v276 trueValue: i5 falseValue: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i69 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i21 i30 
=== Succesors ===
=== Usages ===
i30 v15 i224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i21 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i53 i22 
=== Succesors ===
=== Usages ===
v563 i22 i223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i53 i22  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i54 i23 
=== Succesors ===
=== Usages ===
v562 i23 i222 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i54 i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 36.15137631005115
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: v20 
=== Usages ===
i69 i68 i67 v17 v31 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i277 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i69 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v19 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i516 
=== Usages ===
v185 
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i516  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v0|QWORD[.] + v30|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i67 
=== Succesors ===
=== Usages ===
i516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v137 
=== Usages ===
i146 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v479 v19 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v479 v19  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v2|QWORD[.] + v29|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i68 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i68  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v185 
address: v563 
lastLocationAccess: - 
value: i146 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v185 address: v563 lastLocationAccess: - value: i146 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i67 
y: i21 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i67 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i68 
y: i21 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i68 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i69 
y: i21 
=== Succesors ===
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i69 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i433 i431 i432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8]
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i437 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i437  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i222 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v213 
values: i67 i432 
=== Succesors ===
=== Usages ===
j528 v564 i253 i432 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v213 values: i67 i432  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v213 
values: i68 i431 
=== Succesors ===
=== Usages ===
j531 v565 i254 i431 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v213 values: i68 i431  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v213 
values: i69 i433 
=== Succesors ===
=== Usages ===
v214 i433 i255 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v213 values: i69 i433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 36.15137631005115
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v240 
=== Succesors ===
next: v217 
=== Usages ===
v215 v221 i222 i223 i224 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v240 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i224 
y: i438 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i224 y: i438  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.7787082867499082
stamp: void
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v216 #falseSuccessor: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i517 
=== Usages ===
v239 
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v0|QWORD[.] + v36|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i222 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
i235 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v479 v216 
=== Succesors ===
=== Usages ===
v411 v232 v385 v295 v399 v327 v371 v341 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v479 v216  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v2|QWORD[.] + v37|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i223 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i223  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i517 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v565 
lastLocationAccess: - 
value: i235 
stateAfter: - 
=== Succesors ===
next: i518 
=== Usages ===
=== Predecessor ===
i517 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v565 lastLocationAccess: - value: i235 stateAfter: - #next: i518  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i222 
=== Succesors ===
=== Usages ===
v568 v570 v572 v574 v576 v578 v580 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i222  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v0|QWORD[.] + v40|QWORD * 1 + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i518 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
=== Succesors ===
next: v295 
=== Usages ===
i298 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i223 
=== Succesors ===
=== Usages ===
v569 v571 v573 v575 v577 v579 v581 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i223  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v2|QWORD[.] + v41|QWORD * 2 + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i518 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v569 
lastLocationAccess: - 
value: i298 
stateAfter: - 
=== Succesors ===
next: i519 
=== Usages ===
=== Predecessor ===
i518 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v569 lastLocationAccess: - value: i298 stateAfter: - #next: i519  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v0|QWORD[.] + v40|QWORD * 1 + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
i330 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v2|QWORD[.] + v41|QWORD * 2 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i519 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v571 
lastLocationAccess: - 
value: i330 
stateAfter: - 
=== Succesors ===
next: i520 
=== Usages ===
=== Predecessor ===
i519 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v571 lastLocationAccess: - value: i330 stateAfter: - #next: i520  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v0|QWORD[.] + v40|QWORD * 1 + 19] <|@
d <@d|@=== Debug Properties ===
displacement: 19
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i520 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
i344 
=== Predecessor ===
v327 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v2|QWORD[.] + v41|QWORD * 2 + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i520 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v573 
lastLocationAccess: - 
value: i344 
stateAfter: - 
=== Succesors ===
next: i521 
=== Usages ===
=== Predecessor ===
i520 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v573 lastLocationAccess: - value: i344 stateAfter: - #next: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v0|QWORD[.] + v40|QWORD * 1 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
i374 
=== Predecessor ===
v341 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v2|QWORD[.] + v41|QWORD * 2 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i521 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v575 
lastLocationAccess: - 
value: i374 
stateAfter: - 
=== Succesors ===
next: i522 
=== Usages ===
=== Predecessor ===
i521 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v575 lastLocationAccess: - value: i374 stateAfter: - #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v0|QWORD[.] + v40|QWORD * 1 + 21] <|@
d <@d|@=== Debug Properties ===
displacement: 21
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
i388 
=== Predecessor ===
v371 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v2|QWORD[.] + v41|QWORD * 2 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i388 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i522 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v577 
lastLocationAccess: - 
value: i388 
stateAfter: - 
=== Succesors ===
next: i523 
=== Usages ===
=== Predecessor ===
i522 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v577 lastLocationAccess: - value: i388 stateAfter: - #next: i523  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [v0|QWORD[.] + v40|QWORD * 1 + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i523 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
i402 
=== Predecessor ===
v385 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [v2|QWORD[.] + v41|QWORD * 2 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i523 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v579 
lastLocationAccess: - 
value: i402 
stateAfter: - 
=== Succesors ===
next: i524 
=== Usages ===
=== Predecessor ===
i523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v579 lastLocationAccess: - value: i402 stateAfter: - #next: i524  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v0|QWORD[.] + v40|QWORD * 1 + 23] <|@
d <@d|@=== Debug Properties ===
displacement: 23
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j528 
=== Succesors ===
=== Usages ===
i524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
lastLocationAccess: - 
=== Succesors ===
next: v411 
=== Usages ===
i414 
=== Predecessor ===
v399 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 lastLocationAccess: - #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v2|QWORD[.] + v41|QWORD * 2 + 30] <|@
d <@d|@=== Debug Properties ===
displacement: 30
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j531 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j531  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i524 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v239 
address: v581 
lastLocationAccess: - 
value: i414 
stateAfter: - 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
i524 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v239 address: v581 lastLocationAccess: - value: i414 stateAfter: - #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid i433 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i224 
y: i421 
=== Succesors ===
=== Usages ===
i224 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i224 y: i421  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i223 
y: i421 
=== Succesors ===
=== Usages ===
i223 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i223 y: i421  <|@  <|@
f <@~|@floating>@ <|@
tid i432 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i222 
y: i421 
=== Succesors ===
=== Usages ===
i222 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i222 y: i421  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v213 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v213  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v213 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v213 #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v215 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i253 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i222 i250 
=== Succesors ===
=== Usages ===
i250 v566 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v244 values: i222 i250  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i223 i249 
=== Succesors ===
=== Usages ===
i249 v567 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v244 values: i223 i249  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v244 
values: i224 i251 
=== Succesors ===
=== Usages ===
v245 i251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v244 values: i224 i251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 36.15137631005115
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v271 
=== Succesors ===
next: v248 
=== Usages ===
v246 v252 i253 i254 i255 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v271 #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i5 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i255 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v247 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v247 #falseSuccessor: v246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i525 
=== Usages ===
v270 
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i525  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v0|QWORD[.] + v52|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: i253 
=== Succesors ===
=== Usages ===
i525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i525 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
i266 
=== Predecessor ===
v247 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v479 v247 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v479 v247  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v2|QWORD[.] + v53|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: i254 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: i254  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i525 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v270 
address: v567 
lastLocationAccess: - 
value: i266 
stateAfter: - 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
i525 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v270 address: v567 lastLocationAccess: - value: i266 stateAfter: - #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid i251 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i255 
y: i21 
=== Succesors ===
=== Usages ===
i255 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i255 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i254 
y: i21 
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i254 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i253 
y: i21 
=== Succesors ===
=== Usages ===
i253 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i253 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v244 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v244 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v244 #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v63 v64 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v63 v64 #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
result int[-28187|0xffffffffffff91e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -28187
stableDimension: 0
stamp: i32 [-28187]
stampKind: i32
value: int[-28187|0xffffffffffff91e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result int[-24603|0xffffffffffff9fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -24603
stableDimension: 0
stamp: i32 [-24603]
stampKind: i32
value: int[-24603|0xffffffffffff9fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v475 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i443 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [-33307 - -24603] bits:1...1xxxxxxx111100101
valueDescription: i32
=== Inputs ===
merge: v439 
values: i449 i452 i454 i456 i449 i452 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v439 values: i449 i452 i454 i456 i449 i452  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i64 [0 - 24] bits:0...0xx000
valueDescription: i64
=== Inputs ===
merge: v439 
values: j450 j450 j442 j442 j450 j450 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v439 values: j450 j450 j442 j442 j450 j450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v448 v451 v453 v455 v495 v496 
=== Succesors ===
next: v445 
=== Usages ===
i443 j444 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v448 v451 v453 v455 v495 v496 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i443 
speculation: j444 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i443 speculation: j444  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  130  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  130  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 12[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 14[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 228[[240, 271[6 MustHaveRegister 48 MustHaveRegister 122 MustHaveRegister 138 MustHaveRegister 149 LiveAtLoopEnd 162 MustHaveRegister 170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister 205 LiveAtLoopEnd 216 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 122[[240, 271[8 MustHaveRegister 50 ShouldHaveRegister 114 ShouldHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|q [10, 228[[240, 271[10 MustHaveRegister 84 MustHaveRegister 124 MustHaveRegister 140 MustHaveRegister 149 LiveAtLoopEnd 164 MustHaveRegister 172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 MustHaveRegister 205 LiveAtLoopEnd 218 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|d [12, 124[[240, 271[12 MustHaveRegister 86 ShouldHaveRegister 118 ShouldHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|d [14, 228[[240, 271[14 MustHaveRegister 44 ShouldHaveRegister 52 ShouldHaveRegister 58 ShouldHaveRegister 88 ShouldHaveRegister 126 ShouldHaveRegister 128 MustHaveRegister 152 MustHaveRegister 212 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [16, 24[16 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [18, 42[18 MustHaveRegister 26 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [20, 40[20 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [22, 36[22 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [24, 38[24 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [26, 32[26 MustHaveRegister 28 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v10|q [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [48, 114[48 MustHaveRegister 66 ShouldHaveRegister 72 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v1|d [50, 131[50 MustHaveRegister 62 ShouldHaveRegister 72 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v4|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|q [56, 94[56 MustHaveRegister 64 ShouldHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v18|q [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [84, 118[84 MustHaveRegister 96 ShouldHaveRegister 102 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v3|d [86, 131[86 MustHaveRegister 92 ShouldHaveRegister 102 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v23|q [94, 98[94 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [128, 150[128 MustHaveRegister 134 MustHaveRegister 149 LiveAtLoopEnd  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v34|d [132, 146[[150, 155[134 ShouldHaveRegister 146 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v22|d [132, 144[[150, 155[140 MustHaveRegister 144 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v14|d [132, 142[[150, 155[138 MustHaveRegister 142 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v30|d [142, 149[142 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v29|d [144, 149[144 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v28|d [146, 149[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [152, 206[152 MustHaveRegister 158 MustHaveRegister 205 LiveAtLoopEnd  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d v51|d [156, 202[[206, 209[162 MustHaveRegister 166 ShouldHaveRegister 202 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v50|d [156, 200[[206, 209[164 MustHaveRegister 168 ShouldHaveRegister 200 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v49|d [156, 198[[206, 209[158 ShouldHaveRegister 198 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [166, 194[166 MustHaveRegister 170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [168, 196[168 MustHaveRegister 172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d v38|d [198, 205[198 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v37|d [200, 205[200 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v36|d [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v36|d [210, 224[216 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v37|d [210, 222[218 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v38|d [210, 220[212 ShouldHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [216, 218[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v54|d [220, 227[220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v53|d [222, 227[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v52|d [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [264, 266[266 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [264, 268[268 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 12[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 14[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 228[[240, 271[6 MustHaveRegister 48 MustHaveRegister 122 MustHaveRegister 138 MustHaveRegister 149 LiveAtLoopEnd 162 MustHaveRegister 170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister 205 LiveAtLoopEnd 216 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 122[[240, 271[8 MustHaveRegister 50 ShouldHaveRegister 114 ShouldHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 228[[240, 271[10 MustHaveRegister 84 MustHaveRegister 124 MustHaveRegister 140 MustHaveRegister 149 LiveAtLoopEnd 164 MustHaveRegister 172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 MustHaveRegister 205 LiveAtLoopEnd 218 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [12, 124[[240, 271[12 MustHaveRegister 86 ShouldHaveRegister 118 ShouldHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [14, 228[[240, 271[14 MustHaveRegister 44 ShouldHaveRegister 52 ShouldHaveRegister 58 ShouldHaveRegister 88 ShouldHaveRegister 126 ShouldHaveRegister 128 MustHaveRegister 152 MustHaveRegister 212 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [16, 24[16 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [18, 42[18 MustHaveRegister 26 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [20, 40[20 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdi|d]" v8|d -1 [22, 36[22 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [24, 38[24 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [26, 32[26 MustHaveRegister 28 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbp|q]" v11|q -1 [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v10|q [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [48, 114[48 MustHaveRegister 66 ShouldHaveRegister 72 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v1|d [50, 131[50 MustHaveRegister 62 ShouldHaveRegister 72 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d v4|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q -1 [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v16|q [56, 94[56 MustHaveRegister 64 ShouldHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdi|q]" v18|q -1 [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q v18|q [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d -1 [84, 118[84 MustHaveRegister 96 ShouldHaveRegister 102 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v3|d [86, 131[86 MustHaveRegister 92 ShouldHaveRegister 102 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q -1 [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbp|q]" v24|q v23|q [94, 98[94 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rbx|q]" v25|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [128, 150[128 MustHaveRegister 134 MustHaveRegister 149 LiveAtLoopEnd  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v34|d [132, 146[[150, 155[134 ShouldHaveRegister 146 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v22|d [132, 144[[150, 155[140 MustHaveRegister 144 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v14|d [132, 142[[150, 155[138 MustHaveRegister 142 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d v30|d [142, 149[142 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v29|d [144, 149[144 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d v28|d [146, 149[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [152, 206[152 MustHaveRegister 158 MustHaveRegister 205 LiveAtLoopEnd  "NoSpillStore"
  v36|d DWORD "[r11|d]" v36|d v51|d [156, 202[[206, 209[162 MustHaveRegister 166 ShouldHaveRegister 202 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v50|d [156, 200[[206, 209[164 MustHaveRegister 168 ShouldHaveRegister 200 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v49|d [156, 198[[206, 209[158 ShouldHaveRegister 198 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdi|d]" v39|d -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q -1 [166, 194[166 MustHaveRegister 170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q -1 [168, 196[168 MustHaveRegister 172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rax|d]" v44|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d -1 [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdi|d]" v48|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rbx|d]" v49|d v38|d [198, 205[198 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r8|d]" v50|d v37|d [200, 205[200 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r11|d]" v51|d v36|d [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r11|d]" v52|d v36|d [210, 224[216 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d v37|d [210, 222[218 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rbx|d]" v54|d v38|d [210, 220[212 ShouldHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r10|d]" v55|d -1 [216, 218[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d v54|d [220, 227[220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v53|d [222, 227[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v52|d [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r10|d]" v59|d -1 [264, 266[266 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r11|q]" v60|q -1 [264, 268[268 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  130  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 12[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 14[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 228[[240, 271[6 MustHaveRegister 48 MustHaveRegister 122 MustHaveRegister 138 MustHaveRegister 149 LiveAtLoopEnd 162 MustHaveRegister 170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister 205 LiveAtLoopEnd 216 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 122[[240, 271[8 MustHaveRegister 50 ShouldHaveRegister 114 ShouldHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 228[[240, 271[10 MustHaveRegister 84 MustHaveRegister 124 MustHaveRegister 140 MustHaveRegister 149 LiveAtLoopEnd 164 MustHaveRegister 172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 MustHaveRegister 205 LiveAtLoopEnd 218 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [12, 124[[240, 271[12 MustHaveRegister 86 ShouldHaveRegister 118 ShouldHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [14, 228[[240, 271[14 MustHaveRegister 44 ShouldHaveRegister 52 ShouldHaveRegister 58 ShouldHaveRegister 88 ShouldHaveRegister 126 ShouldHaveRegister 128 MustHaveRegister 152 MustHaveRegister 212 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [16, 24[16 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [18, 42[18 MustHaveRegister 26 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [20, 40[20 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdi|d]" v8|d -1 [22, 36[22 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [24, 38[24 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [26, 32[26 MustHaveRegister 28 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbp|q]" v11|q -1 [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v10|q [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [48, 114[48 MustHaveRegister 66 ShouldHaveRegister 72 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v1|d [50, 131[50 MustHaveRegister 62 ShouldHaveRegister 72 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d v4|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q -1 [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v16|q [56, 94[56 MustHaveRegister 64 ShouldHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdi|q]" v18|q -1 [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q v18|q [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d -1 [84, 118[84 MustHaveRegister 96 ShouldHaveRegister 102 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v3|d [86, 131[86 MustHaveRegister 92 ShouldHaveRegister 102 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q -1 [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbp|q]" v24|q v23|q [94, 98[94 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rbx|q]" v25|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [128, 150[128 MustHaveRegister 134 MustHaveRegister 149 LiveAtLoopEnd  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v34|d [132, 146[[150, 155[134 ShouldHaveRegister 146 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v22|d [132, 144[[150, 155[140 MustHaveRegister 144 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v14|d [132, 142[[150, 155[138 MustHaveRegister 142 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d v30|d [142, 149[142 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v29|d [144, 149[144 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d v28|d [146, 149[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [152, 206[152 MustHaveRegister 158 MustHaveRegister 205 LiveAtLoopEnd  "NoSpillStore"
  v36|d DWORD "[r11|d]" v36|d v51|d [156, 202[[206, 209[162 MustHaveRegister 166 ShouldHaveRegister 202 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v50|d [156, 200[[206, 209[164 MustHaveRegister 168 ShouldHaveRegister 200 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v49|d [156, 198[[206, 209[158 ShouldHaveRegister 198 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdi|d]" v39|d -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q -1 [166, 194[166 MustHaveRegister 170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q -1 [168, 196[168 MustHaveRegister 172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rax|d]" v44|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d -1 [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdi|d]" v48|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rbx|d]" v49|d v38|d [198, 205[198 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r8|d]" v50|d v37|d [200, 205[200 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r11|d]" v51|d v36|d [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r11|d]" v52|d v36|d [210, 224[216 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d v37|d [210, 222[218 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rbx|d]" v54|d v38|d [210, 220[212 ShouldHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r10|d]" v55|d -1 [216, 218[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d v54|d [220, 227[220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v53|d [222, 227[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v52|d [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r10|d]" v59|d -1 [264, 266[266 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r11|q]" v60|q -1 [264, 268[268 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  130  <|@ instruction JUMP ~[int[1|0x1], v22|DWORD, v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[v34|DWORD, v33|DWORD, v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD, v28|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[v51|DWORD, v50|DWORD, v49|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[v36|DWORD, v37|DWORD, v38|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[v58|DWORD, v57|DWORD, v56|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[int[-28187|0xffffffffffff91e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[int[-30747|0xffffffffffff87e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 12[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 14[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 228[[240, 271[6 MustHaveRegister 48 MustHaveRegister 122 MustHaveRegister 138 MustHaveRegister 149 LiveAtLoopEnd 162 MustHaveRegister 170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister 205 LiveAtLoopEnd 216 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 122[[240, 271[8 MustHaveRegister 50 ShouldHaveRegister 114 ShouldHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [10, 228[[240, 271[10 MustHaveRegister 84 MustHaveRegister 124 MustHaveRegister 140 MustHaveRegister 149 LiveAtLoopEnd 164 MustHaveRegister 172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 MustHaveRegister 205 LiveAtLoopEnd 218 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [12, 124[[240, 271[12 MustHaveRegister 86 ShouldHaveRegister 118 ShouldHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [14, 228[[240, 271[14 MustHaveRegister 44 ShouldHaveRegister 52 ShouldHaveRegister 58 ShouldHaveRegister 88 ShouldHaveRegister 126 ShouldHaveRegister 128 MustHaveRegister 152 MustHaveRegister 212 MustHaveRegister 227 LiveAtLoopEnd  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [16, 24[16 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [18, 42[18 MustHaveRegister 26 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [20, 40[20 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rdi|d]" v8|d -1 [22, 36[22 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [24, 38[24 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q -1 [26, 32[26 MustHaveRegister 28 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbp|q]" v11|q -1 [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v10|q [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [48, 114[48 MustHaveRegister 66 ShouldHaveRegister 72 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r11|d]" v14|d v1|d [50, 131[50 MustHaveRegister 62 ShouldHaveRegister 72 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d v4|d [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q -1 [54, 56[54 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v16|q [56, 94[56 MustHaveRegister 64 ShouldHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdi|q]" v18|q -1 [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q v18|q [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d -1 [84, 118[84 MustHaveRegister 96 ShouldHaveRegister 102 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v3|d [86, 131[86 MustHaveRegister 92 ShouldHaveRegister 102 ShouldHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q -1 [92, 94[92 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbp|q]" v24|q v23|q [94, 98[94 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rbx|q]" v25|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d -1 [128, 150[128 MustHaveRegister 134 MustHaveRegister 149 LiveAtLoopEnd  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v34|d [132, 146[[150, 155[134 ShouldHaveRegister 146 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v22|d [132, 144[[150, 155[140 MustHaveRegister 144 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r8|d]" v30|d v14|d [132, 142[[150, 155[138 MustHaveRegister 142 ShouldHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d v30|d [142, 149[142 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rax|d]" v33|d v29|d [144, 149[144 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d v28|d [146, 149[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [152, 206[152 MustHaveRegister 158 MustHaveRegister 205 LiveAtLoopEnd  "NoSpillStore"
  v36|d DWORD "[r11|d]" v36|d v51|d [156, 202[[206, 209[162 MustHaveRegister 166 ShouldHaveRegister 202 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v50|d [156, 200[[206, 209[164 MustHaveRegister 168 ShouldHaveRegister 200 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v49|d [156, 198[[206, 209[158 ShouldHaveRegister 198 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdi|d]" v39|d -1 [162, 164[162 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q -1 [166, 194[166 MustHaveRegister 170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 186 MustHaveRegister 190 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q -1 [168, 196[168 MustHaveRegister 172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister 184 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d -1 [170, 172[170 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rax|d]" v44|d -1 [178, 180[178 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d -1 [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d -1 [186, 188[186 MustHaveRegister 188 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdi|d]" v48|d -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rbx|d]" v49|d v38|d [198, 205[198 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r8|d]" v50|d v37|d [200, 205[200 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r11|d]" v51|d v36|d [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r11|d]" v52|d v36|d [210, 224[216 MustHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d v37|d [210, 222[218 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rbx|d]" v54|d v38|d [210, 220[212 ShouldHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[r10|d]" v55|d -1 [216, 218[216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rbx|d]" v56|d v54|d [220, 227[220 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r8|d]" v57|d v53|d [222, 227[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v52|d [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r10|d]" v59|d -1 [264, 266[266 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[r11|q]" v60|q -1 [264, 268[268 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [v28|DWORD, v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [v36|DWORD, v37|DWORD, v38|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [v52|DWORD, v53|DWORD, v54|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [v59|DWORD, v60|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v5|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v5|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v5|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|QWORD = MOV [v6|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = LEA [v10|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 23728], y: v11|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction v12|QWORD = INC v10|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [v7|DWORD[_] * 8 + 23728], y: v12|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction v14|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction v15|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction v16|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction v17|QWORD = DEC v16|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction v20|QWORD = MOV v13|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v21|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction v22|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction v25|QWORD = MOV v21|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v25|QWORD, y: v24|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction v26|DWORD = MOVZXB [v0|QWORD[.] + v1|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [v2|QWORD[.] + v3|DWORD * 2 + 16], y: v26|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v27|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: v27|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v31|DWORD = MOVZXB [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [v2|QWORD[.] + v29|DWORD * 2 + 16], y: v31|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction v34|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction v35|DWORD = LEA [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v38|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction v39|DWORD = MOVZXB [v0|QWORD[.] + v36|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [v2|QWORD[.] + v37|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction v40|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction v41|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction v42|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 18], y: v42|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction v43|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 20], y: v43|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction v44|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 22], y: v44|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction v45|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 24], y: v45|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction v46|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 26], y: v46|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction v47|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 28], y: v47|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction v48|DWORD = MOVZXB [v0|QWORD[.] + v40|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [v2|QWORD[.] + v41|QWORD * 2 + 30], y: v48|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction v49|DWORD = LEA [v38|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction v50|DWORD = LEA [v37|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction v51|DWORD = LEA [v36|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v54|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction v55|DWORD = MOVZXB [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction v56|DWORD = INC v54|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction v57|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction v58|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v59|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v60|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606939972889546413
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4583415490543495840
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B24" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   18  <|@ instruction r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   20  <|@ instruction rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = INC rax|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 23728] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 23728] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 23728] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [r11|DWORD[_] * 8 + 23728] <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rbx|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B29" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction rbp|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B27" 
    xhandlers
    flags 
    probability 4602436373262175915
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606939972889546411
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  126  <|@ instruction CMP r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  142  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607028505751609745
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606939972889546412
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction r10|DWORD = LEA [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4614893039726871281
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr  178  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD <|@ <|@
      nr  184  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  200  <|@ instruction r8|DWORD = LEA [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = LEA [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B21" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616636923058848590
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576819724953106771
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  220  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B22" 
    successors "B22" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607028505751609746
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5] // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f856402000048896c241049baaddeaddeaddeadde458b5a78418b5a74418b7a7c458b52704a8b04ddb05c0000488d684d4a892cddb05c000048ffc0488904ddb05c00004183f9010f8cbc000000448b560c448bda41ffc3418bd9ffcb8bdb48ffcb4183f9020f8c1b0000004963fb4803fb418bc2483bc70f8679010000453bd30f86b60100008b790c418bc0ffc04183f9020f8c190000004863e84803eb8bdf483bdd0f86750100003bf80f867c010000443bd20f86a0010000413bf80f8688010000440fb65416106646895441104183f90341ba02000000450f4cd1458bc341bb01000000e913000000420fb65c061066895c411041ffc0ffc041ffc3453bd30f8e19000000ebe2488b6c24104883c418493ba7500400000f875a010000c3458d51f8418bdb458bd8448bc0e97c0000006666660f1f8400000000006666669066660f1f840000000000420fb67c1e106642897c41104963fb4963d00fb6443e1166894451120fb6443e1266894451140fb6443e1366894451160fb6443e1466894451180fb6443e15668944511a0fb6443e16668944511c0fb67c3e1766897c511e8d5b08458d4008458d5b08443bd37f98e9330000006666660f1f840000000000666666900f1f4000460fb6541e10664689544110ffc341ffc041ffc30f1f84000000000066666690443bcb0f8e15ffffffebd549c7c31800000041bae587ffff458997840400004d899f90040000e8000000000f1f84000000000049c7c31800000041bae57dffffebd649c7c31800000041bae57dffffebc749c7c31800000041bae587ffffebb849c7c30000000041bae591ffffeba949c7c30000000041bae59fffffeb9a48896c2410e800000000e98dfdfffff4488d0d92feffff49898f68040000e95ffdfffff441c78784040000f5a5ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f596ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD  <||@
  Comment 31 16 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 31 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 41 18 r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD  <||@
  Comment 45 20 rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD  <||@
  Comment 49 22 rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD  <||@
  Comment 53 24 r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD  <||@
  Comment 57 26 rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD  <||@
  Comment 65 28 rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD  <||@
  Comment 69 30 MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD  <||@
  Comment 77 32 rax|QWORD = INC rax|QWORD size: QWORD  <||@
  Comment 80 34 MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD  <||@
  Comment 88 36 BLACKHOLE [rdi|DWORD[_] * 8 + 23728]  <||@
  Comment 88 38 BLACKHOLE [r10|DWORD[_] * 8 + 23728]  <||@
  Comment 88 40 BLACKHOLE [rbx|DWORD[_] * 8 + 23728]  <||@
  Comment 88 42 BLACKHOLE [r11|DWORD[_] * 8 + 23728]  <||@
  Comment 88 44 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 98 block B2 null  <||@
  Comment 98 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 48 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 98 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 102 50 r11|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 108 52 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 113 54 rbx|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 115 56 rbx|QWORD = DEC rbx|QWORD size: QWORD  <||@
  Comment 118 58 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null  <||@
  Comment 128 block B4 null  <||@
  Comment 128 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 128 62 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 131 64 rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 134 66 rax|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 137 68 CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD  <||@
  Comment 146 block B5 null  <||@
  Comment 146 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 146 72 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD  <||@
  Comment 155 block B7 null  <||@
  Comment 155 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 84 rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 155 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 155 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 158 86 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 163 88 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null  <||@
  Comment 173 block B9 null  <||@
  Comment 173 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 92 rbp|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 176 94 rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 179 96 rbx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 181 98 CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD  <||@
  Comment 190 block B10 null  <||@
  Comment 190 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 102 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD  <||@
  Comment 198 block B12 null  <||@
  Comment 198 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 198 114 CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD  <||@
  Comment 207 block B13 null  <||@
  Comment 207 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 207 118 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD  <||@
  Comment 216 block B14 null  <||@
  Comment 216 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 216 122 r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 222 124 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 228 126 CMP r9|DWORD y: 3 size: DWORD  <||@
  Comment 232 128 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: <  <||@
  Comment 242 -1 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 245 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 251 130 JUMP ~[] destination: B14 -> B15  <||@
  Comment 256 block B16 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 256 136 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 138 rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD  <||@
  Comment 262 140 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 267 142 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 270 144 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 272 146 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 275 148 JUMP ~[] destination: B16 -> B15  <||@
  Comment 275 block B15 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 275 132 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 275 134 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 286 block B24 null  <||@
  Comment 286 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 286 234 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 295 POLL_RETURN_FAR  <||@
  Comment 309 block B17 null  <||@
  Comment 309 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 309 152 r10|DWORD = LEA [r9|DWORD - 8] size: DWORD  <||@
  Comment 313 -1 rbx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 316 -1 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 319 -1 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 322 154 JUMP ~[] destination: B17 -> B18  <||@
  Comment 327 block B19 loop 1 depth 1 header:213|LoopBegin  <||@
  Comment 327 160 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 352 162 rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 358 164 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 364 166 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 367 168 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 370 170 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD  <||@
  Comment 375 172 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD  <||@
  Comment 380 174 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD  <||@
  Comment 385 176 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD  <||@
  Comment 390 178 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD  <||@
  Comment 395 180 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD  <||@
  Comment 400 182 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD  <||@
  Comment 405 184 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD  <||@
  Comment 410 186 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD  <||@
  Comment 415 188 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD  <||@
  Comment 420 190 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD  <||@
  Comment 425 192 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD  <||@
  Comment 430 194 rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD  <||@
  Comment 435 196 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD  <||@
  Comment 440 198 rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD  <||@
  Comment 443 200 r8|DWORD = LEA [r8|DWORD + 8] size: DWORD  <||@
  Comment 447 202 r11|DWORD = LEA [r11|DWORD + 8] size: DWORD  <||@
  Comment 451 204 JUMP ~[] destination: B19 -> B18  <||@
  Comment 451 block B18 loop 1 depth 1 header:213|LoopBegin  <||@
  Comment 451 156 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 451 158 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD  <||@
  Comment 461 block B22 loop 2 depth 1 header:244|LoopBegin  <||@
  Comment 461 214 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 216 r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 486 218 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 492 220 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 494 222 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 497 224 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 500 226 JUMP ~[] destination: B22 -> B21  <||@
  Comment 500 block B21 loop 2 depth 1 header:244|LoopBegin  <||@
  Comment 500 210 [] = LABEL alignment: 16 numbPhis: 3 label: ?  <||@
  Comment 512 212 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD  <||@
  Comment 523 block B30 null  <||@
  Comment 523 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 523 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 530 -1 r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5]  <||@
  Comment 536 242 JUMP ~[] destination: B30 -> B31  <||@
  Comment 536 block B31 null  <||@
  Comment 536 264 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 536 266 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 543 268 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 550 270 DEOPT info [bci:0]  <||@
  Comment 550 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 555 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 563 block B28 null  <||@
  Comment 563 256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 563 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 570 -1 r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5]  <||@
  Comment 576 258 JUMP ~[] destination: B28 -> B31  <||@
  Comment 578 block B27 null  <||@
  Comment 578 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 578 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 585 -1 r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5]  <||@
  Comment 591 254 JUMP ~[] destination: B27 -> B31  <||@
  Comment 593 block B29 null  <||@
  Comment 593 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 593 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 600 -1 r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5]  <||@
  Comment 606 262 JUMP ~[] destination: B29 -> B31  <||@
  Comment 608 block B25 null  <||@
  Comment 608 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 608 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 615 -1 r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5]  <||@
  Comment 621 250 JUMP ~[] destination: B25 -> B31  <||@
  Comment 623 block B26 null  <||@
  Comment 623 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 623 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 630 -1 r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5]  <||@
  Comment 636 246 JUMP ~[] destination: B26 -> B31  <||@
  Comment 643 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 668 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 696 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 701 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 731 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 736 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 744 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 744 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 750 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2964[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  method "HotSpotCompilation-2964[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  date 1714038090603
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02ab949600 89842400c0feff4883ec189041817f20030000000f856402000048896c241049bad88c5e2e06000000458b5a78418b5a74418b7a7c458b52704a8b04ddb05c0000488d684d4a892cddb05c000048ffc0488904ddb05c00004183f9010f8cbc000000448b560c448bda41ffc3418bd9ffcb8bdb48ffcb4183f9020f8c1b0000004963fb4803fb418bc2483bc70f8679010000453bd30f86b60100008b790c418bc0ffc04183f9020f8c190000004863e84803eb8bdf483bdd0f86750100003bf80f867c010000443bd20f86a0010000413bf80f8688010000440fb65416106646895441104183f90341ba02000000450f4cd1458bc341bb01000000e913000000420fb65c061066895c411041ffc0ffc041ffc3453bd30f8e19000000ebe2488b6c24104883c418493ba7500400000f875a010000c3458d51f8418bdb458bd8448bc0e97c0000006666660f1f8400000000006666669066660f1f840000000000420fb67c1e106642897c41104963fb4963d00fb6443e1166894451120fb6443e1266894451140fb6443e1366894451160fb6443e1466894451180fb6443e15668944511a0fb6443e16668944511c0fb67c3e1766897c511e8d5b08458d4008458d5b08443bd37f98e9330000006666660f1f840000000000666666900f1f4000460fb6541e10664689544110ffc341ffc041ffc30f1f84000000000066666690443bcb0f8e15ffffffebd549c7c31800000041bae587ffff458997840400004d899f90040000e84f1924ff0f1f84000000000049c7c31800000041bae57dffffebd649c7c31800000041bae57dffffebc749c7c31800000041bae587ffffebb849c7c30000000041bae591ffffeba949c7c30000000041bae59fffffeb9a48896c2410e8981922ffe98dfdfffff4488d0d92feffff49898f68040000e95f2724fff441c78784040000f5a5ffff49c7879004000000000000e8bd1824ff0f1f84000000000041c78784040000f596ffff49c7879004000000000000e89a1824ff0f1f840000000000e813de37fff4e82d1624fff4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4372245 slotKind: QWORD  <||@
  Comment 31 16 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 31 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 41 18 r11|DWORD[_] = MOV [r10|QWORD[.] + 120] size: DWORD  <||@
  Comment 45 20 rbx|DWORD[_] = MOV [r10|QWORD[.] + 116] size: DWORD  <||@
  Comment 49 22 rdi|DWORD[_] = MOV [r10|QWORD[.] + 124] size: DWORD  <||@
  Comment 53 24 r10|DWORD[_] = MOV [r10|QWORD[.] + 112] size: DWORD  <||@
  Comment 57 26 rax|QWORD = MOV [r11|DWORD[_] * 8 + 23728] size: QWORD  <||@
  Comment 65 28 rbp|QWORD = LEA [rax|QWORD + 77] size: QWORD  <||@
  Comment 69 30 MOV (x: [r11|DWORD[_] * 8 + 23728], y: rbp|QWORD) size: QWORD  <||@
  Comment 77 32 rax|QWORD = INC rax|QWORD size: QWORD  <||@
  Comment 80 34 MOV (x: [rbx|DWORD[_] * 8 + 23728], y: rax|QWORD) size: QWORD  <||@
  Comment 88 36 BLACKHOLE [rdi|DWORD[_] * 8 + 23728]  <||@
  Comment 88 38 BLACKHOLE [r10|DWORD[_] * 8 + 23728]  <||@
  Comment 88 40 BLACKHOLE [rbx|DWORD[_] * 8 + 23728]  <||@
  Comment 88 42 BLACKHOLE [r11|DWORD[_] * 8 + 23728]  <||@
  Comment 88 44 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.02691690320311102 condition: < trueDestination: B0 -> B24 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 98 block B2 null  <||@
  Comment 98 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 48 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 98 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 98 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 102 50 r11|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 108 52 rbx|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 113 54 rbx|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 115 56 rbx|QWORD = DEC rbx|QWORD size: QWORD  <||@
  Comment 118 58 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null  <||@
  Comment 128 block B4 null  <||@
  Comment 128 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 128 62 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 131 64 rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 134 66 rax|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 137 68 CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD  <||@
  Comment 146 block B5 null  <||@
  Comment 146 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 146 72 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B29 size: DWORD  <||@
  Comment 155 block B7 null  <||@
  Comment 155 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 84 rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 155 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 155 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 158 86 rax|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 163 88 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B12 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null  <||@
  Comment 173 block B9 null  <||@
  Comment 173 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 173 92 rbp|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 176 94 rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 179 96 rbx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 181 98 CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD  <||@
  Comment 190 block B10 null  <||@
  Comment 190 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 102 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B12 falseDestination: B10 -> B27 size: DWORD  <||@
  Comment 198 block B12 null  <||@
  Comment 198 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 198 114 CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD  <||@
  Comment 207 block B13 null  <||@
  Comment 207 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 207 118 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD  <||@
  Comment 216 block B14 null  <||@
  Comment 216 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 216 122 r10|DWORD = MOVZXB [rsi|QWORD[.] + rdx|DWORD * 1 + 16] size: DWORD  <||@
  Comment 222 124 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 228 126 CMP r9|DWORD y: 3 size: DWORD  <||@
  Comment 232 128 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: <  <||@
  Comment 242 -1 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 245 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 251 130 JUMP ~[] destination: B14 -> B15  <||@
  Comment 256 block B16 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 256 136 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 138 rbx|DWORD = MOVZXB [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD  <||@
  Comment 262 140 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 267 142 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 270 144 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 272 146 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 275 148 JUMP ~[] destination: B16 -> B15  <||@
  Comment 275 block B15 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 275 132 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 275 134 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 286 block B24 null  <||@
  Comment 286 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 286 234 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 295 POLL_RETURN_FAR  <||@
  Comment 309 block B17 null  <||@
  Comment 309 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 309 152 r10|DWORD = LEA [r9|DWORD - 8] size: DWORD  <||@
  Comment 313 -1 rbx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 316 -1 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 319 -1 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 322 154 JUMP ~[] destination: B17 -> B18  <||@
  Comment 327 block B19 loop 1 depth 1 header:213|LoopBegin  <||@
  Comment 327 160 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 352 162 rdi|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 358 164 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 364 166 rdi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 367 168 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 370 170 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 17] size: DWORD  <||@
  Comment 375 172 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 18], y: rax|DWORD) size: WORD  <||@
  Comment 380 174 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 18] size: DWORD  <||@
  Comment 385 176 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 20], y: rax|DWORD) size: WORD  <||@
  Comment 390 178 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 19] size: DWORD  <||@
  Comment 395 180 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 22], y: rax|DWORD) size: WORD  <||@
  Comment 400 182 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 20] size: DWORD  <||@
  Comment 405 184 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 24], y: rax|DWORD) size: WORD  <||@
  Comment 410 186 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 21] size: DWORD  <||@
  Comment 415 188 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 26], y: rax|DWORD) size: WORD  <||@
  Comment 420 190 rax|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 22] size: DWORD  <||@
  Comment 425 192 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 28], y: rax|DWORD) size: WORD  <||@
  Comment 430 194 rdi|DWORD = MOVZXB [rsi|QWORD[.] + rdi|QWORD * 1 + 23] size: DWORD  <||@
  Comment 435 196 MOV (x: [rcx|QWORD[.] + rdx|QWORD * 2 + 30], y: rdi|DWORD) size: WORD  <||@
  Comment 440 198 rbx|DWORD = LEA [rbx|DWORD + 8] size: DWORD  <||@
  Comment 443 200 r8|DWORD = LEA [r8|DWORD + 8] size: DWORD  <||@
  Comment 447 202 r11|DWORD = LEA [r11|DWORD + 8] size: DWORD  <||@
  Comment 451 204 JUMP ~[] destination: B19 -> B18  <||@
  Comment 451 block B18 loop 1 depth 1 header:213|LoopBegin  <||@
  Comment 451 156 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 451 158 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7787082867499082 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B21 size: DWORD  <||@
  Comment 461 block B22 loop 2 depth 1 header:244|LoopBegin  <||@
  Comment 461 214 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 216 r10|DWORD = MOVZXB [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 486 218 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 492 220 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 494 222 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 497 224 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 500 226 JUMP ~[] destination: B22 -> B21  <||@
  Comment 500 block B21 loop 2 depth 1 header:244|LoopBegin  <||@
  Comment 500 210 [] = LABEL alignment: 16 numbPhis: 3 label: ?  <||@
  Comment 512 212 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B24 size: DWORD  <||@
  Comment 523 block B30 null  <||@
  Comment 523 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 523 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 530 -1 r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5]  <||@
  Comment 536 242 JUMP ~[] destination: B30 -> B31  <||@
  Comment 536 block B31 null  <||@
  Comment 536 264 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 536 266 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 543 268 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 550 270 DEOPT info [bci:0]  <||@
  Comment 550 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 555 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 563 block B28 null  <||@
  Comment 563 256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 563 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 570 -1 r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5]  <||@
  Comment 576 258 JUMP ~[] destination: B28 -> B31  <||@
  Comment 578 block B27 null  <||@
  Comment 578 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 578 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 585 -1 r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5]  <||@
  Comment 591 254 JUMP ~[] destination: B27 -> B31  <||@
  Comment 593 block B29 null  <||@
  Comment 593 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 593 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 600 -1 r10|DWORD = MOVE input: int[-30747|0xffffffffffff87e5]  <||@
  Comment 606 262 JUMP ~[] destination: B29 -> B31  <||@
  Comment 608 block B25 null  <||@
  Comment 608 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 608 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 615 -1 r10|DWORD = MOVE input: int[-28187|0xffffffffffff91e5]  <||@
  Comment 621 250 JUMP ~[] destination: B25 -> B31  <||@
  Comment 623 block B26 null  <||@
  Comment 623 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 623 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 630 -1 r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5]  <||@
  Comment 636 246 JUMP ~[] destination: B26 -> B31  <||@
  Comment 643 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 668 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 696 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 701 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 731 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 736 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 744 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 744 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 750 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
