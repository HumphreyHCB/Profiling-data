begin_compilation
  name " HotSpotCompilation-2542[java.util.HashMap$HashIterator.<init>(HashMap)]"
  method "HotSpotCompilation-2542[java.util.HashMap$HashIterator.<init>(HashMap)]"
  date 1714038088100
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j619 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j619 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: i633 
=== Usages ===
j621 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: i633  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v656 ?47 v658 v662 v660 ?17 ?33 v661 j288 j470 j565 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a643 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1587
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a643 
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a643  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 a128 v657 v663 ?17 a287 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i633 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-34059|0xffffffffffff7af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1588) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v657 
lastLocationAccess: - 
=== Succesors ===
next: a634 
=== Usages ===
v140 
=== Predecessor ===
j619 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v657 lastLocationAccess: - #next: a634  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a634 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1589) [bci: 18]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
=== Succesors ===
next: i635 
=== Usages ===
a144 v155 v664 v665 
=== Predecessor ===
i633 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 42]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v663 
lastLocationAccess: - 
=== Succesors ===
next: a636 
=== Usages ===
v24 
=== Predecessor ===
a634 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v663 lastLocationAccess: - #next: a636  <|@  <|@
f <@~|@floating>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 v653 v654 v655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
a636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a636 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
=== Succesors ===
next: a637 
=== Usages ===
v648 
=== Predecessor ===
i635 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - #next: a637  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
a637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a637 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: a638 
=== Usages ===
v649 
=== Predecessor ===
a636 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: a638  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
a638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a638 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v654 
lastLocationAccess: - 
=== Succesors ===
next: a639 
=== Usages ===
v650 
=== Predecessor ===
a637 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v654 lastLocationAccess: - #next: a639  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
a639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a639 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
v651 
=== Predecessor ===
a638 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
displacement: 20352
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a636 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a636  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
displacement: 20352
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a637 
=== Succesors ===
=== Usages ===
v72 j629 v631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a637  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
displacement: 20352
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a638 
=== Succesors ===
=== Usages ===
v72 v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a638  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
displacement: 20352
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a639 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v648 v649 v650 v651 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
a639 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v648 v649 v650 v651 #next: v284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j239 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j240 
=== Usages ===
v667 v669 v670 
=== Predecessor ===
v284 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j240  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v131 j240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v656 
=== Succesors ===
next: i270 
=== Usages ===
v668 
=== Predecessor ===
j239 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v656 #next: i270  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j239 
index: - 
=== Succesors ===
=== Usages ===
i270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
v278 
=== Predecessor ===
j240 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v667 lastLocationAccess: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 v333 v340 v380 v420 v460 v510 v516 v556 v605 v611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i270 
y: i277 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i270 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j269 j330 j372 j412 j452 j507 j548 j602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 v253 v294 v314 v571 v361 v537 v401 v494 v441 v476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v278 
=== Succesors ===
trueSuccessor: v243 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i270 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v278 #trueSuccessor: v243 #falseSuccessor: v242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v243 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a271 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a271  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j240 
index: - 
=== Succesors ===
=== Usages ===
a271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a271 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
a272 v279 
=== Predecessor ===
v242 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 lastLocationAccess: - #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a271 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a271  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
a271 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v250 #falseSuccessor: v246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v250 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j273 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j273  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j239 
index: - 
=== Succesors ===
=== Usages ===
j273 v276 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
lastLocationAccess: - 
=== Succesors ===
next: v256 
=== Usages ===
v253 j269 v671 
=== Predecessor ===
v246 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v669 lastLocationAccess: - #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j273 
y: j265 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j273 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a272 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a271 
=== Succesors ===
=== Usages ===
j258 v261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a271  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
j273 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v255 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a272 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a272 #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j274 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j274  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j239 
index: - 
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
lastLocationAccess: - 
=== Succesors ===
next: j258 
=== Usages ===
v671 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v670 lastLocationAccess: - #next: j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a272 
=== Succesors ===
next: v275 
=== Usages ===
v275 
=== Predecessor ===
j274 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a272 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j274 
index: j273 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j274 index: j273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v671 
lastLocationAccess: - 
value: j258 
stateAfter: - 
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
j258 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v671 lastLocationAccess: - value: j258 stateAfter: - #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j273 
y: j268 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j273 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
lastLocationAccess: - 
value: j269 
stateAfter: - 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v669 lastLocationAccess: - value: j269 stateAfter: - #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v247 v249 v260 v262 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v247 v249 v260 v262 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
op: Compress
stamp: n java.util.HashMap
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.this$0
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
value: a128 
stateAfter: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - value: a128 stateAfter: - #next: v346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j286 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j286 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a287 
=== Usages ===
v672 v673 
=== Predecessor ===
v346 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: a java.util.HashMap
=== Inputs ===
object: a2 
=== Succesors ===
next: j288 
=== Usages ===
j289 
=== Predecessor ===
j286 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2 #next: j288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j289 
=== Usages ===
j290 j303 
=== Predecessor ===
a287 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a287 
=== Succesors ===
next: v293 
=== Usages ===
j290 v294 
=== Predecessor ===
j288 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a287 #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j288 
y: j289 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j288 y: j289  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 v504 v599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
x: j290 
y: j324 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j290 y: j324  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 v515 v610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j303 j483 j578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j326 v675 j505 v694 j600 v703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
j289 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v292 #falseSuccessor: v291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v296  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j289 
y: j265 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j289 y: j265  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v299 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i331 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i331  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j288 
y: i302 
=== Succesors ===
=== Usages ===
j326 v675 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j288 y: i302  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j303 
index: j301 
=== Succesors ===
=== Usages ===
i331 i332 v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j303 index: j301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
=== Succesors ===
next: v307 
=== Usages ===
v339 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i331 
y: i338 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i331 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v304 
=== Usages ===
=== Predecessor ===
i331 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v306 #falseSuccessor: v304  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i332 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
=== Succesors ===
next: v312 
=== Usages ===
v340 
=== Predecessor ===
v308 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i332 
y: i277 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i332 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
i332 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v311 #falseSuccessor: v309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v311 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
value: i277 
stateAfter: - 
=== Succesors ===
next: j334 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - value: i277 stateAfter: - #next: j334  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j286 
index: - 
=== Succesors ===
=== Usages ===
j334 v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v314 j330 v674 
=== Predecessor ===
v333 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j334 
y: j265 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j334 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid j326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j303 
y: j301 
=== Succesors ===
=== Usages ===
v321 v336 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j303 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
j334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v316 #falseSuccessor: v315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j326 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j326 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j335 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j335  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j286 
index: - 
=== Succesors ===
=== Usages ===
j335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: v336 
=== Usages ===
v674 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j335 
index: j334 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v674 
lastLocationAccess: - 
value: j326 
stateAfter: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
j335 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v674 lastLocationAccess: - value: j326 stateAfter: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j334 
y: j268 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j334 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
value: j330 
stateAfter: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - value: j330 stateAfter: - #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v296 v298 v305 v310 v320 v322 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v296 v298 v305 v310 v320 v322 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.expectedModCount
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1588) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
value: i633 
stateAfter: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - value: i633 stateAfter: - #next: v386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j347 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j348 
=== Usages ===
v676 v678 v679 
=== Predecessor ===
v386 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j348  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v148 v173 v186 j348 j428 j524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v660 
=== Succesors ===
next: i373 
=== Usages ===
v677 
=== Predecessor ===
j347 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v660 #next: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
v380 
=== Predecessor ===
j348 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v676 lastLocationAccess: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i277 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i373 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v380 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v350 
=== Usages ===
=== Predecessor ===
i373 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v380 #trueSuccessor: v351 #falseSuccessor: v350  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a374 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a374  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
a374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a374 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
lastLocationAccess: - 
=== Succesors ===
next: v359 
=== Usages ===
a375 v381 
=== Predecessor ===
v350 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v677 lastLocationAccess: - #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a374 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a374  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v358 
falseSuccessor: v354 
=== Usages ===
=== Predecessor ===
a374 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v358 #falseSuccessor: v354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j376 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
j376 v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
v361 j372 v680 
=== Predecessor ===
v354 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j376 
y: j265 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j376 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a374 
=== Succesors ===
=== Usages ===
j366 v369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a374  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v361 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
j376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v361 #trueSuccessor: v363 #falseSuccessor: v362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a375 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a375 #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j377 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
lastLocationAccess: - 
=== Succesors ===
next: j366 
=== Usages ===
v680 
=== Predecessor ===
v362 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v679 lastLocationAccess: - #next: j366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a375 
=== Succesors ===
next: v378 
=== Usages ===
v378 
=== Predecessor ===
j377 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a375 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j377 
index: j376 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
lastLocationAccess: - 
value: j366 
stateAfter: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
j366 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v680 lastLocationAccess: - value: j366 stateAfter: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
=== Inputs ===
x: j376 
y: j268 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j376 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
value: j372 
stateAfter: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - value: j372 stateAfter: - #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v355 v357 v368 v370 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v355 v357 v368 v370 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid a189 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
value: a189 
stateAfter: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - value: a189 stateAfter: - #next: v426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j387 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j387 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j388 
=== Usages ===
v681 v683 v684 
=== Predecessor ===
v426 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j388  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v150 j388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v661 
=== Succesors ===
next: i413 
=== Usages ===
v682 
=== Predecessor ===
j387 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v661 #next: i413  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j387 
index: - 
=== Succesors ===
=== Usages ===
i413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j387 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
lastLocationAccess: - 
=== Succesors ===
next: v392 
=== Usages ===
v420 
=== Predecessor ===
j388 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 lastLocationAccess: - #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i413 
y: i277 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i413 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
i413 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v391 #falseSuccessor: v390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a414 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a414  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j388 
index: - 
=== Succesors ===
=== Usages ===
a414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a414 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
a415 v421 
=== Predecessor ===
v390 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a414 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a414  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
a414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v398 #falseSuccessor: v394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j416 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j387 
index: - 
=== Succesors ===
=== Usages ===
j416 v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j387 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j416 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
=== Succesors ===
next: v404 
=== Usages ===
v401 j412 v685 
=== Predecessor ===
v394 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j416 
y: j265 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j416 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a414 
=== Succesors ===
=== Usages ===
j406 v409 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a414  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
j416 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v403 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a415 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a415 #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j417 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j417  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j387 
index: - 
=== Succesors ===
=== Usages ===
j417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j387 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
lastLocationAccess: - 
=== Succesors ===
next: j406 
=== Usages ===
v685 
=== Predecessor ===
v402 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 lastLocationAccess: - #next: j406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a415 
=== Succesors ===
next: v418 
=== Usages ===
v418 
=== Predecessor ===
j417 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a415 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j417 
index: j416 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j417 index: j416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
lastLocationAccess: - 
value: j406 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
j406 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v685 lastLocationAccess: - value: j406 stateAfter: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
=== Inputs ===
x: j416 
y: j268 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j416 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
value: j412 
stateAfter: - 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - value: j412 stateAfter: - #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v395 v397 v408 v410 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v395 v397 v408 v410 #next: v150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v661 
lastLocationAccess: - 
value: a189 
stateAfter: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v661 lastLocationAccess: - value: a189 stateAfter: - #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v152 v160 v174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 34]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: i15 stateAfter: - #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a634 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a634  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.001759474751059575
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v20 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 i42 i99 v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i23 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i635 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
profileData: PROFILED designatedSuccessorProbability: 2.050934268926774E-5
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v29 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: i640 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i640  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a634 
=== Succesors ===
=== Usages ===
i640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i640 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 53]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
=== Succesors ===
next: v219 
=== Usages ===
v162 v176 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i640 
y: i15 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i640 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1589) [bci: 18]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a634 
=== Succesors ===
=== Usages ===
?33 v666 ?17 ?47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a634  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
i640 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v218 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_2
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 34]
sourceFile: HashMap.java
sourceLine: 1592
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a144 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a144  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 190
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 67]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: i23 
stateAfter: - 
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: i23 stateAfter: - #next: v466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j427 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j428 
=== Usages ===
v686 v688 v689 
=== Predecessor ===
v466 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v660 
=== Succesors ===
next: i453 
=== Usages ===
v687 
=== Predecessor ===
j427 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v660 #next: i453  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
v460 
=== Predecessor ===
j428 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v686 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i453 
y: i277 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i453 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v431 #falseSuccessor: v430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a454 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a454  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
a454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a454 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v687 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
a455 v461 
=== Predecessor ===
v430 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v687 lastLocationAccess: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a454  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
a454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v438 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
j456 v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
v441 j452 v690 
=== Predecessor ===
v434 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v688 lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j456 
y: j265 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j456 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a455 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
j446 v449 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a454  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
j456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a455 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a455 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j457 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v689 
lastLocationAccess: - 
=== Succesors ===
next: j446 
=== Usages ===
v690 
=== Predecessor ===
v442 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v689 lastLocationAccess: - #next: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a455 
=== Succesors ===
next: v458 
=== Usages ===
v458 
=== Predecessor ===
j457 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a455 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j457 
index: j456 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j457 index: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v690 
lastLocationAccess: - 
value: j446 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
j446 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v690 lastLocationAccess: - value: j446 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j456 
y: j268 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j456 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
lastLocationAccess: - 
value: j452 
stateAfter: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v688 lastLocationAccess: - value: j452 stateAfter: - #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v437 v448 v450 
=== Succesors ===
next: a641 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v437 v448 v450 #next: a641  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a634 
=== Succesors ===
=== Usages ===
a641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a641 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v665 
lastLocationAccess: - 
=== Succesors ===
next: v173 
=== Usages ===
v173 v192 a467 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v665 lastLocationAccess: - #next: v173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
value: a641 
stateAfter: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
a641 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - value: a641 stateAfter: - #next: v522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j468 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a469 
=== Usages ===
v691 v692 
=== Predecessor ===
v522 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a469  <|@  <|@
f <@~|@floating>@ <|@
tid a467 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a641 
=== Succesors ===
=== Usages ===
a469 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a467 
=== Succesors ===
next: j470 
=== Usages ===
j471 
=== Predecessor ===
j468 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a467 #next: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j471 
=== Usages ===
j472 j483 
=== Predecessor ===
a469 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a469 
=== Succesors ===
next: v475 
=== Usages ===
j472 v476 
=== Predecessor ===
j470 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a469 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid j472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j470 
y: j471 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j470 y: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
x: j472 
y: j324 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j472 y: j324  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
j471 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v474 #falseSuccessor: v473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j471 
y: j265 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j471 y: j265  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v481 #falseSuccessor: v477  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i508 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i508  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j470 
y: i302 
=== Succesors ===
=== Usages ===
j505 v694 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j470 y: i302  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j483 
index: j301 
=== Succesors ===
=== Usages ===
i508 i509 v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j483 index: j301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i508 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v694 
lastLocationAccess: - 
=== Succesors ===
next: v487 
=== Usages ===
v515 
=== Predecessor ===
v477 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v694 lastLocationAccess: - #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i508 
y: i338 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i508 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
i508 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v486 #falseSuccessor: v484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i509 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v694 
lastLocationAccess: - 
=== Succesors ===
next: v492 
=== Usages ===
v516 
=== Predecessor ===
v488 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v694 lastLocationAccess: - #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i509 
y: i277 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i509 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i509 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v491 #falseSuccessor: v489  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v694 
lastLocationAccess: - 
value: i277 
stateAfter: - 
=== Succesors ===
next: j511 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v694 lastLocationAccess: - value: i277 stateAfter: - #next: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j511 v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
v494 j507 v693 
=== Predecessor ===
v510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j511 
y: j265 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j511 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j483 
y: j301 
=== Succesors ===
=== Usages ===
v501 v513 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j483 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v494 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
j511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v494 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j505 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j505 #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j512 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v692 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
v693 
=== Predecessor ===
v495 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v692 lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j512 
index: j511 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v693 
lastLocationAccess: - 
value: j505 
stateAfter: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v693 lastLocationAccess: - value: j505 stateAfter: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j511 
y: j268 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j511 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
value: j507 
stateAfter: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - value: j507 stateAfter: - #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v478 v480 v485 v490 v500 v502 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v478 v480 v485 v490 v500 v502 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a641 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a641  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.7674849308491027
stamp: void
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v87 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i23 i42 
=== Succesors ===
=== Usages ===
v176 i42 v666 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i23 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v223 
=== Usages ===
v50 v52 i99 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i99 
y: i640 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i99 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v220 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v220 #falseSuccessor: v222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 66]
stamp: i32
=== Inputs ===
x: i99 
y: i23 
=== Succesors ===
=== Usages ===
v174 i99 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i99 y: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 67]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: i42 stateAfter: - #next: v562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j523 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j524 
=== Usages ===
v695 v697 v698 
=== Predecessor ===
v562 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v660 
=== Succesors ===
next: i549 
=== Usages ===
v696 
=== Predecessor ===
j523 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v660 #next: i549  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
i549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i549 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v695 
lastLocationAccess: - 
=== Succesors ===
next: v528 
=== Usages ===
v556 
=== Predecessor ===
j524 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v695 lastLocationAccess: - #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i549 
y: i277 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i549 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v526 
=== Usages ===
=== Predecessor ===
i549 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v527 #falseSuccessor: v526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a550 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a550  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
a550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a550 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v696 
lastLocationAccess: - 
=== Succesors ===
next: v535 
=== Usages ===
a551 v557 
=== Predecessor ===
v526 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v696 lastLocationAccess: - #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a550 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a550  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v557 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
a550 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v557 #trueSuccessor: v534 #falseSuccessor: v530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j552 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j552  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
j552 v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v697 
lastLocationAccess: - 
=== Succesors ===
next: v540 
=== Usages ===
v537 j548 v699 
=== Predecessor ===
v530 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v697 lastLocationAccess: - #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j552 
y: j265 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j552 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a551 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a550 
=== Succesors ===
=== Usages ===
j542 v545 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a550  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v539 #falseSuccessor: v538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a551 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a551 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j553 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j553  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
j553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v698 
lastLocationAccess: - 
=== Succesors ===
next: j542 
=== Usages ===
v699 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v698 lastLocationAccess: - #next: j542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a551 
=== Succesors ===
next: v554 
=== Usages ===
v554 
=== Predecessor ===
j553 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a551 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j553 
index: j552 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j553 index: j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
lastLocationAccess: - 
value: j542 
stateAfter: - 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
j542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v699 lastLocationAccess: - value: j542 stateAfter: - #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j552 
y: j268 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j552 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v697 
lastLocationAccess: - 
value: j548 
stateAfter: - 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v697 lastLocationAccess: - value: j548 stateAfter: - #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v531 v533 v544 v546 
=== Succesors ===
next: a642 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v531 v533 v544 v546 #next: a642  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a144 
index: i99 
=== Succesors ===
=== Usages ===
a642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: i99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a642 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v666 
lastLocationAccess: - 
=== Succesors ===
next: v186 
=== Usages ===
a184 v194 v186 
=== Predecessor ===
v532 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v666 lastLocationAccess: - #next: v186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
value: a642 
stateAfter: - 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
a642 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - value: a642 stateAfter: - #next: v617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j563 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j563 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a564 
=== Usages ===
v700 v701 
=== Predecessor ===
v617 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a564  <|@  <|@
f <@~|@floating>@ <|@
tid a184 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a642 
=== Succesors ===
=== Usages ===
?47 a564 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a184 
=== Succesors ===
next: j565 
=== Usages ===
j566 
=== Predecessor ===
j563 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a184 #next: j565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j566 
=== Usages ===
j567 j578 
=== Predecessor ===
a564 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a564 
=== Succesors ===
next: v570 
=== Usages ===
j567 v571 
=== Predecessor ===
j565 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a564 #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j565 
y: j566 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j565 y: j566  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
x: j567 
y: j324 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j567 y: j324  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v569 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
j566 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v569 #falseSuccessor: v568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v569 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j566 
y: j265 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j566 y: j265  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v571 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v571 #trueSuccessor: v576 #falseSuccessor: v572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i603 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i603  <|@  <|@
f <@~|@floating>@ <|@
tid j578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j565 
y: i302 
=== Succesors ===
=== Usages ===
j600 v703 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j565 y: i302  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j578 
index: j301 
=== Succesors ===
=== Usages ===
i603 i604 v605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j578 index: j301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i603 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: v582 
=== Usages ===
v610 
=== Predecessor ===
v572 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i603 
y: i338 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i603 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v610 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
i603 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v610 #trueSuccessor: v581 #falseSuccessor: v579  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i604 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i604 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: v587 
=== Usages ===
v611 
=== Predecessor ===
v583 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i604 
y: i277 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i604 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
i604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v586 #falseSuccessor: v584  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v586 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
value: i277 
stateAfter: - 
=== Succesors ===
next: j606 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - value: i277 stateAfter: - #next: j606  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
j606 v609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v700 
lastLocationAccess: - 
=== Succesors ===
next: v592 
=== Usages ===
v589 j602 v702 
=== Predecessor ===
v605 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v700 lastLocationAccess: - #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j606 
y: j265 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j606 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid j600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j578 
y: j301 
=== Succesors ===
=== Usages ===
v596 v608 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j578 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v589 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v590 
=== Usages ===
=== Predecessor ===
j606 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v589 #trueSuccessor: v591 #falseSuccessor: v590  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j600 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j600 #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j607 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j607  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
j607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v701 
lastLocationAccess: - 
=== Succesors ===
next: v608 
=== Usages ===
v702 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v701 lastLocationAccess: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: j606 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v702 
lastLocationAccess: - 
value: j600 
stateAfter: - 
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
j607 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v702 lastLocationAccess: - value: j600 stateAfter: - #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid j602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j606 
y: j268 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j606 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v700 
lastLocationAccess: - 
value: j602 
stateAfter: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v700 lastLocationAccess: - value: j602 stateAfter: - #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v573 v575 v580 v585 v595 v597 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v573 v575 v580 v585 v595 v597 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a642 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a642  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
profileData: INJECTED designatedSuccessorProbability: 0.6970428215526584
stamp: void
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v53 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 75
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
sourceFile: HashMap.java
sourceLine: 1593
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a184 a1 - a144 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a184 a1 - a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
stateBefore: ?47 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?47 #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v221  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - a144 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a144  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 177
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v26 v28 v49 v96 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v26 v28 v49 v96 #next: v188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: j620 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: j620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j629 
=== Usages ===
j621 
=== Predecessor ===
v188 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j629 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
=== Succesors ===
next: v631 
=== Usages ===
j623 j627 
=== Predecessor ===
j620 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
=== Inputs ===
x: j620 
y: j619 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j620 y: j619  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
=== Inputs ===
x: j621 
y: j629 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j621 y: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
value: j623 
stateAfter: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
j629 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - value: j623 stateAfter: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid i626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
=== Inputs ===
x: j629 
y: i626 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j629 y: i626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
lastLocationAccess: - 
value: j627 
stateAfter: - 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v650 lastLocationAccess: - value: j627 stateAfter: - #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j619 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j619 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: i633 
=== Usages ===
j621 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: i633  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v656 ?47 v658 v662 v660 ?17 ?33 v661 j288 j470 j565 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a643 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1587
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a643 
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a643  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 a128 v657 v663 ?17 a287 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i633 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-34059|0xffffffffffff7af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1588) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v657 
lastLocationAccess: - 
=== Succesors ===
next: a634 
=== Usages ===
v140 
=== Predecessor ===
j619 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v657 lastLocationAccess: - #next: a634  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
result [v1|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a634 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1589) [bci: 18]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
=== Succesors ===
next: i635 
=== Usages ===
a144 v155 v664 v665 
=== Predecessor ===
i633 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - #next: i635  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i635 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 42]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v663 
lastLocationAccess: - 
=== Succesors ===
next: a636 
=== Usages ===
v24 
=== Predecessor ===
a634 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v663 lastLocationAccess: - #next: a636  <|@  <|@
f <@~|@floating>@ <|@
tid a111 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 v653 v654 v655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result [v8|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
a636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a636 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
=== Succesors ===
next: a637 
=== Usages ===
v648 
=== Predecessor ===
i635 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - #next: a637  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
result [v8|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
a637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a637 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: a638 
=== Usages ===
v649 
=== Predecessor ===
a636 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: a638  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result [v8|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
a638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a638 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v654 
lastLocationAccess: - 
=== Succesors ===
next: a639 
=== Usages ===
v650 
=== Predecessor ===
a637 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v654 lastLocationAccess: - #next: a639  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
result [v8|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a111 
index: - 
=== Succesors ===
=== Usages ===
a639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a639 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
v651 
=== Predecessor ===
a638 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result [v9|DWORD[_] * 8 + 20352] <|@
d <@d|@=== Debug Properties ===
displacement: 20352
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a636 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a636  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
result [v10|DWORD[_] * 8 + 20352] <|@
d <@d|@=== Debug Properties ===
displacement: 20352
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a637 
=== Succesors ===
=== Usages ===
v72 j629 v631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a637  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
result [v11|DWORD[_] * 8 + 20352] <|@
d <@d|@=== Debug Properties ===
displacement: 20352
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a638 
=== Succesors ===
=== Usages ===
v72 v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a638  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
result [v12|DWORD[_] * 8 + 20352] <|@
d <@d|@=== Debug Properties ===
displacement: 20352
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a639 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v648 v649 v650 v651 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
a639 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v648 v649 v650 v651 #next: v284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j239 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j239 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j240 
=== Usages ===
v667 v669 v670 
=== Predecessor ===
v284 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j240  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v131 j240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j240 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v656 
=== Succesors ===
next: i270 
=== Usages ===
v668 
=== Predecessor ===
j239 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v656 #next: i270  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j239 
index: - 
=== Succesors ===
=== Usages ===
i270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
v278 
=== Predecessor ===
j240 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v667 lastLocationAccess: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 v333 v340 v380 v420 v460 v510 v516 v556 v605 v611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i270 
y: i277 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i270 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j269 j330 j372 j412 j452 j507 j548 j602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 v253 v294 v314 v571 v361 v537 v401 v494 v441 v476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v278 
=== Succesors ===
trueSuccessor: v243 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i270 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v278 #trueSuccessor: v243 #falseSuccessor: v242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v243 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a271 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a271  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
result [v13|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j240 
index: - 
=== Succesors ===
=== Usages ===
a271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a271 <|@
result v14|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
a272 v279 
=== Predecessor ===
v242 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 lastLocationAccess: - #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a271 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a271  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
a271 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v250 #falseSuccessor: v246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v250 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j273 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j273  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j239 
index: - 
=== Succesors ===
=== Usages ===
j273 v276 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j273 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
lastLocationAccess: - 
=== Succesors ===
next: v256 
=== Usages ===
v253 j269 v671 
=== Predecessor ===
v246 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v669 lastLocationAccess: - #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j273 
y: j265 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j273 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a272 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a271 
=== Succesors ===
=== Usages ===
j258 v261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a271  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
j273 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v255 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a272 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a272 #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j274 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j274  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j239 
index: - 
=== Succesors ===
=== Usages ===
j274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j274 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
lastLocationAccess: - 
=== Succesors ===
next: j258 
=== Usages ===
v671 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v670 lastLocationAccess: - #next: j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j258 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a272 
=== Succesors ===
next: v275 
=== Usages ===
v275 
=== Predecessor ===
j274 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a272 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
result [v17|QWORD + v15|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j274 
index: j273 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j274 index: j273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v671 
lastLocationAccess: - 
value: j258 
stateAfter: - 
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
j258 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v671 lastLocationAccess: - value: j258 stateAfter: - #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j273 
y: j268 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j273 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
lastLocationAccess: - 
value: j269 
stateAfter: - 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v669 lastLocationAccess: - value: j269 stateAfter: - #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v247 v249 v260 v262 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v247 v249 v260 v262 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
op: Compress
stamp: n java.util.HashMap
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.this$0
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
value: a128 
stateAfter: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - value: a128 stateAfter: - #next: v346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j286 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j286 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a287 
=== Usages ===
v672 v673 
=== Predecessor ===
v346 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a287 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: a java.util.HashMap
=== Inputs ===
object: a2 
=== Succesors ===
next: j288 
=== Usages ===
j289 
=== Predecessor ===
j286 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2 #next: j288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j288 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j289 
=== Usages ===
j290 j303 
=== Predecessor ===
a287 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j289 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a287 
=== Succesors ===
next: v293 
=== Usages ===
j290 v294 
=== Predecessor ===
j288 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a287 #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j288 
y: j289 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j288 y: j289  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 v504 v599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
x: j290 
y: j324 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j290 y: j324  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v339 v515 v610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j303 j483 j578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j326 v675 j505 v694 j600 v703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
j289 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v292 #falseSuccessor: v291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v296  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j289 
y: j265 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j289 y: j265  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v299 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i331 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i331  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j288 
y: i302 
=== Succesors ===
=== Usages ===
j326 v675 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j288 y: i302  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
result [v22|QWORD[*] + v21|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j303 
index: j301 
=== Succesors ===
=== Usages ===
i331 i332 v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j303 index: j301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
=== Succesors ===
next: v307 
=== Usages ===
v339 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i331 
y: i338 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i331 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v304 
=== Usages ===
=== Predecessor ===
i331 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v306 #falseSuccessor: v304  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i332 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
=== Succesors ===
next: v312 
=== Usages ===
v340 
=== Predecessor ===
v308 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i332 
y: i277 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i332 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
i332 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v311 #falseSuccessor: v309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v311 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
value: i277 
stateAfter: - 
=== Succesors ===
next: j334 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - value: i277 stateAfter: - #next: j334  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j286 
index: - 
=== Succesors ===
=== Usages ===
j334 v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v314 j330 v674 
=== Predecessor ===
v333 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j334 
y: j265 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j334 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid j326 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j303 
y: j301 
=== Succesors ===
=== Usages ===
v321 v336 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j303 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
j334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v316 #falseSuccessor: v315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j326 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j326 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j335 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j335  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j286 
index: - 
=== Succesors ===
=== Usages ===
j335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j335 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: v336 
=== Usages ===
v674 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
result [v25|QWORD + v23|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j335 
index: j334 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v674 
lastLocationAccess: - 
value: j326 
stateAfter: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
j335 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v674 lastLocationAccess: - value: j326 stateAfter: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid j330 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j334 
y: j268 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j334 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
value: j330 
stateAfter: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - value: j330 stateAfter: - #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v296 v298 v305 v310 v320 v322 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v296 v298 v305 v310 v320 v322 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.expectedModCount
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1588) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
value: i633 
stateAfter: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - value: i633 stateAfter: - #next: v386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j347 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j347 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j348 
=== Usages ===
v676 v678 v679 
=== Predecessor ===
v386 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j348  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v148 v173 v186 j348 j428 j524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j348 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v660 
=== Succesors ===
next: i373 
=== Usages ===
v677 
=== Predecessor ===
j347 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v660 #next: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
v380 
=== Predecessor ===
j348 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v676 lastLocationAccess: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i373 
y: i277 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i373 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v380 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v350 
=== Usages ===
=== Predecessor ===
i373 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v380 #trueSuccessor: v351 #falseSuccessor: v350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a374 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a374  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
result [v27|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
a374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a374 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
lastLocationAccess: - 
=== Succesors ===
next: v359 
=== Usages ===
a375 v381 
=== Predecessor ===
v350 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v677 lastLocationAccess: - #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a374 
=== Succesors ===
=== Usages ===
v359 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a374  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v358 
falseSuccessor: v354 
=== Usages ===
=== Predecessor ===
a374 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v358 #falseSuccessor: v354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j376 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
j376 v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
v361 j372 v680 
=== Predecessor ===
v354 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j376 
y: j265 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j376 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a374 
=== Succesors ===
=== Usages ===
j366 v369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a374  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v361 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
j376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v361 #trueSuccessor: v363 #falseSuccessor: v362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a375 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a375 #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j377 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j347 
index: - 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
lastLocationAccess: - 
=== Succesors ===
next: j366 
=== Usages ===
v680 
=== Predecessor ===
v362 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v679 lastLocationAccess: - #next: j366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j366 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a375 
=== Succesors ===
next: v378 
=== Usages ===
v378 
=== Predecessor ===
j377 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a375 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
result [v31|QWORD + v29|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j377 
index: j376 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
lastLocationAccess: - 
value: j366 
stateAfter: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
j366 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v680 lastLocationAccess: - value: j366 stateAfter: - #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
=== Inputs ===
x: j376 
y: j268 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j376 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
value: j372 
stateAfter: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - value: j372 stateAfter: - #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v355 v357 v368 v370 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v355 v357 v368 v370 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid a189 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v148 v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
value: a189 
stateAfter: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - value: a189 stateAfter: - #next: v426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j387 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j387 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j388 
=== Usages ===
v681 v683 v684 
=== Predecessor ===
v426 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j388  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v150 j388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j388 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v661 
=== Succesors ===
next: i413 
=== Usages ===
v682 
=== Predecessor ===
j387 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v661 #next: i413  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j387 
index: - 
=== Succesors ===
=== Usages ===
i413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j387 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
lastLocationAccess: - 
=== Succesors ===
next: v392 
=== Usages ===
v420 
=== Predecessor ===
j388 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 lastLocationAccess: - #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i413 
y: i277 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i413 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v420 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
i413 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v420 #trueSuccessor: v391 #falseSuccessor: v390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a414 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a414  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
result [v33|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j388 
index: - 
=== Succesors ===
=== Usages ===
a414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a414 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
a415 v421 
=== Predecessor ===
v390 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v682 lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a414 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a414  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
a414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v398 #falseSuccessor: v394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j416 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j416  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j387 
index: - 
=== Succesors ===
=== Usages ===
j416 v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j387 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j416 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
=== Succesors ===
next: v404 
=== Usages ===
v401 j412 v685 
=== Predecessor ===
v394 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j416 
y: j265 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j416 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a414 
=== Succesors ===
=== Usages ===
j406 v409 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a414  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
j416 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v403 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a415 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a415 #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j417 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j417  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j387 
index: - 
=== Succesors ===
=== Usages ===
j417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j387 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j417 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
lastLocationAccess: - 
=== Succesors ===
next: j406 
=== Usages ===
v685 
=== Predecessor ===
v402 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 lastLocationAccess: - #next: j406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j406 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a415 
=== Succesors ===
next: v418 
=== Usages ===
v418 
=== Predecessor ===
j417 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a415 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
result [v37|QWORD + v35|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j417 
index: j416 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j417 index: j416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
lastLocationAccess: - 
value: j406 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
j406 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v685 lastLocationAccess: - value: j406 stateAfter: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
=== Inputs ===
x: j416 
y: j268 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j416 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
value: j412 
stateAfter: - 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - value: j412 stateAfter: - #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v395 v397 v408 v410 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v395 v397 v408 v410 #next: v150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v661 
lastLocationAccess: - 
value: a189 
stateAfter: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v661 lastLocationAccess: - value: a189 stateAfter: - #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v152 v160 v174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 34]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: i15 stateAfter: - #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a634 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a634  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.001759474751059575
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v20 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 i42 i99 v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i635 
y: i23 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i635 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
profileData: PROFILED designatedSuccessorProbability: 2.050934268926774E-5
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v29 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: i640 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i640  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a634 
=== Succesors ===
=== Usages ===
i640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i640 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 53]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
=== Succesors ===
next: v219 
=== Usages ===
v162 v176 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i640 
y: i15 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i640 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a144 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1589) [bci: 18]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a634 
=== Succesors ===
=== Usages ===
?33 v666 ?17 ?47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a634  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
i640 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v218 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_2
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 34]
sourceFile: HashMap.java
sourceLine: 1592
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a144 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a144  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 190
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 67]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: i23 
stateAfter: - 
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: i23 stateAfter: - #next: v466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j427 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j427 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j428 
=== Usages ===
v686 v688 v689 
=== Predecessor ===
v466 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j428 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v660 
=== Succesors ===
next: i453 
=== Usages ===
v687 
=== Predecessor ===
j427 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v660 #next: i453  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
v460 
=== Predecessor ===
j428 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v686 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i453 
y: i277 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i453 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v431 #falseSuccessor: v430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a454 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a454  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
result [v41|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
a454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a454 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v687 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
a455 v461 
=== Predecessor ===
v430 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v687 lastLocationAccess: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a454  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
a454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v438 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
j456 v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
v441 j452 v690 
=== Predecessor ===
v434 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v688 lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j456 
y: j265 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j456 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a455 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
j446 v449 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a454  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
j456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a455 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a455 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j457 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v689 
lastLocationAccess: - 
=== Succesors ===
next: j446 
=== Usages ===
v690 
=== Predecessor ===
v442 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v689 lastLocationAccess: - #next: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a455 
=== Succesors ===
next: v458 
=== Usages ===
v458 
=== Predecessor ===
j457 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a455 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
result [v45|QWORD + v43|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j457 
index: j456 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j457 index: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v690 
lastLocationAccess: - 
value: j446 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
j446 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v690 lastLocationAccess: - value: j446 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j456 
y: j268 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j456 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
lastLocationAccess: - 
value: j452 
stateAfter: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v688 lastLocationAccess: - value: j452 stateAfter: - #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v437 v448 v450 
=== Succesors ===
next: a641 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v437 v448 v450 #next: a641  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
result [v6|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a634 
=== Succesors ===
=== Usages ===
a641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a641 <|@
result v47|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v665 
lastLocationAccess: - 
=== Succesors ===
next: v173 
=== Usages ===
v173 v192 a467 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v665 lastLocationAccess: - #next: v173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
value: a641 
stateAfter: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
a641 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - value: a641 stateAfter: - #next: v522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j468 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a469 
=== Usages ===
v691 v692 
=== Predecessor ===
v522 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a469  <|@  <|@
f <@~|@floating>@ <|@
tid a467 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a641 
=== Succesors ===
=== Usages ===
a469 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a469 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a467 
=== Succesors ===
next: j470 
=== Usages ===
j471 
=== Predecessor ===
j468 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a467 #next: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j470 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j471 
=== Usages ===
j472 j483 
=== Predecessor ===
a469 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j471 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a469 
=== Succesors ===
next: v475 
=== Usages ===
j472 v476 
=== Predecessor ===
j470 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a469 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid j472 <|@
result v49|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j470 
y: j471 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j470 y: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
x: j472 
y: j324 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j472 y: j324  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
j471 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v474 #falseSuccessor: v473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j471 
y: j265 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j471 y: j265  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v481 #falseSuccessor: v477  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i508 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i508  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
result v50|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j470 
y: i302 
=== Succesors ===
=== Usages ===
j505 v694 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j470 y: i302  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
result [v50|QWORD[*] + v21|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j483 
index: j301 
=== Succesors ===
=== Usages ===
i508 i509 v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j483 index: j301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i508 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v694 
lastLocationAccess: - 
=== Succesors ===
next: v487 
=== Usages ===
v515 
=== Predecessor ===
v477 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v694 lastLocationAccess: - #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i508 
y: i338 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i508 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
i508 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v486 #falseSuccessor: v484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i509 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v694 
lastLocationAccess: - 
=== Succesors ===
next: v492 
=== Usages ===
v516 
=== Predecessor ===
v488 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v694 lastLocationAccess: - #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i509 
y: i277 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i509 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i509 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v491 #falseSuccessor: v489  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v694 
lastLocationAccess: - 
value: i277 
stateAfter: - 
=== Succesors ===
next: j511 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v694 lastLocationAccess: - value: i277 stateAfter: - #next: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j511 v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j511 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
v494 j507 v693 
=== Predecessor ===
v510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j511 
y: j265 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j511 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
result v52|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j483 
y: j301 
=== Succesors ===
=== Usages ===
v501 v513 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j483 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v494 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
j511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v494 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j505 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j505 #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j512 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v692 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
v693 
=== Predecessor ===
v495 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v692 lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
result [v53|QWORD + v51|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j512 
index: j511 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v693 
lastLocationAccess: - 
value: j505 
stateAfter: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v693 lastLocationAccess: - value: j505 stateAfter: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j511 
y: j268 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j511 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
lastLocationAccess: - 
value: j507 
stateAfter: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 lastLocationAccess: - value: j507 stateAfter: - #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v478 v480 v485 v490 v500 v502 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v478 v480 v485 v490 v500 v502 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a641 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a641  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.7674849308491027
stamp: void
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v87 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i99 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i23 i42 
=== Succesors ===
=== Usages ===
v176 i42 v666 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i23 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v223 
=== Usages ===
v50 v52 i99 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i99 
y: i640 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i99 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v220 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v220 #falseSuccessor: v222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 66]
stamp: i32
=== Inputs ===
x: i99 
y: i23 
=== Succesors ===
=== Usages ===
v174 i99 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i99 y: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 67]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: i42 stateAfter: - #next: v562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j523 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j524 
=== Usages ===
v695 v697 v698 
=== Predecessor ===
v562 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v660 
=== Succesors ===
next: i549 
=== Usages ===
v696 
=== Predecessor ===
j523 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v660 #next: i549  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
i549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i549 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v695 
lastLocationAccess: - 
=== Succesors ===
next: v528 
=== Usages ===
v556 
=== Predecessor ===
j524 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v695 lastLocationAccess: - #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i549 
y: i277 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i549 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v526 
=== Usages ===
=== Predecessor ===
i549 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v527 #falseSuccessor: v526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a550 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a550  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
result [v57|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
a550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a550 <|@
result v58|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v696 
lastLocationAccess: - 
=== Succesors ===
next: v535 
=== Usages ===
a551 v557 
=== Predecessor ===
v526 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v696 lastLocationAccess: - #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a550 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a550  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v557 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
a550 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v557 #trueSuccessor: v534 #falseSuccessor: v530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j552 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j552  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
j552 v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v697 
lastLocationAccess: - 
=== Succesors ===
next: v540 
=== Usages ===
v537 j548 v699 
=== Predecessor ===
v530 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v697 lastLocationAccess: - #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j552 
y: j265 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j552 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid a551 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a550 
=== Succesors ===
=== Usages ===
j542 v545 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a550  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v539 #falseSuccessor: v538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a551 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a551 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j553 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j553  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
j553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j553 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v698 
lastLocationAccess: - 
=== Succesors ===
next: j542 
=== Usages ===
v699 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v698 lastLocationAccess: - #next: j542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j542 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a551 
=== Succesors ===
next: v554 
=== Usages ===
v554 
=== Predecessor ===
j553 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a551 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
result [v61|QWORD + v59|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j553 
index: j552 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j553 index: j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v699 
lastLocationAccess: - 
value: j542 
stateAfter: - 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
j542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v699 lastLocationAccess: - value: j542 stateAfter: - #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j552 
y: j268 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j552 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v697 
lastLocationAccess: - 
value: j548 
stateAfter: - 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v697 lastLocationAccess: - value: j548 stateAfter: - #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v531 v533 v544 v546 
=== Succesors ===
next: a642 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v531 v533 v544 v546 #next: a642  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
result [v40|QWORD[.] + v55|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a144 
index: i99 
=== Succesors ===
=== Usages ===
a642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: i99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a642 <|@
result v63|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v666 
lastLocationAccess: - 
=== Succesors ===
next: v186 
=== Usages ===
a184 v194 v186 
=== Predecessor ===
v532 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v666 lastLocationAccess: - #next: v186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
value: a642 
stateAfter: - 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
a642 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - value: a642 stateAfter: - #next: v617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j563 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j563 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a564 
=== Usages ===
v700 v701 
=== Predecessor ===
v617 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a564  <|@  <|@
f <@~|@floating>@ <|@
tid a184 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a642 
=== Succesors ===
=== Usages ===
?47 a564 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a564 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a184 
=== Succesors ===
next: j565 
=== Usages ===
j566 
=== Predecessor ===
j563 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a184 #next: j565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j565 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j566 
=== Usages ===
j567 j578 
=== Predecessor ===
a564 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j566 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a564 
=== Succesors ===
next: v570 
=== Usages ===
j567 v571 
=== Predecessor ===
j565 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a564 #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
result v65|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j565 
y: j566 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j565 y: j566  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
x: j567 
y: j324 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j567 y: j324  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v569 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
j566 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v569 #falseSuccessor: v568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v569 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j566 
y: j265 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j566 y: j265  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v571 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v571 #trueSuccessor: v576 #falseSuccessor: v572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i603 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i603  <|@  <|@
f <@~|@floating>@ <|@
tid j578 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j565 
y: i302 
=== Succesors ===
=== Usages ===
j600 v703 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j565 y: i302  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
result [v66|QWORD[*] + v21|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j578 
index: j301 
=== Succesors ===
=== Usages ===
i603 i604 v605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j578 index: j301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i603 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: v582 
=== Usages ===
v610 
=== Predecessor ===
v572 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i603 
y: i338 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i603 y: i338  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v610 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
i603 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v610 #trueSuccessor: v581 #falseSuccessor: v579  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v581 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i604 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i604 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: v587 
=== Usages ===
v611 
=== Predecessor ===
v583 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i604 
y: i277 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i604 y: i277  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
i604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v586 #falseSuccessor: v584  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v586 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
value: i277 
stateAfter: - 
=== Succesors ===
next: j606 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - value: i277 stateAfter: - #next: j606  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
j606 v609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v700 
lastLocationAccess: - 
=== Succesors ===
next: v592 
=== Usages ===
v589 j602 v702 
=== Predecessor ===
v605 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v700 lastLocationAccess: - #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j606 
y: j265 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j606 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid j600 <|@
result v68|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j578 
y: j301 
=== Succesors ===
=== Usages ===
v596 v608 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j578 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v589 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v590 
=== Usages ===
=== Predecessor ===
j606 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v589 #trueSuccessor: v591 #falseSuccessor: v590  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j600 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j600 #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j607 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j607  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
j607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j607 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v701 
lastLocationAccess: - 
=== Succesors ===
next: v608 
=== Usages ===
v702 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v701 lastLocationAccess: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
result [v69|QWORD + v67|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j607 
index: j606 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: j606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v702 
lastLocationAccess: - 
value: j600 
stateAfter: - 
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
j607 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v702 lastLocationAccess: - value: j600 stateAfter: - #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid j602 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j606 
y: j268 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j606 y: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v700 
lastLocationAccess: - 
value: j602 
stateAfter: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v700 lastLocationAccess: - value: j602 stateAfter: - #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v573 v575 v580 v585 v595 v597 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v573 v575 v580 v585 v595 v597 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a642 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a642  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
profileData: INJECTED designatedSuccessorProbability: 0.6970428215526584
stamp: void
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v53 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 75
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
sourceFile: HashMap.java
sourceLine: 1593
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a184 a1 - a144 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a184 a1 - a144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
stateBefore: ?47 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?47 #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v221  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - a144 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a144  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 177
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@14b0685c
stamp: void
=== Inputs ===
stateBefore: ?33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v85 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v26 v28 v49 v96 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v26 v28 v49 v96 #next: v188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: j620 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: j620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j620 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j629 
=== Usages ===
j621 
=== Predecessor ===
v188 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j629 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
=== Succesors ===
next: v631 
=== Usages ===
j623 j627 
=== Predecessor ===
j620 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
=== Inputs ===
x: j620 
y: j619 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j620 y: j619  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
=== Inputs ===
x: j621 
y: j629 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j621 y: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
value: j623 
stateAfter: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
j629 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - value: j623 stateAfter: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid i626 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: i64
=== Inputs ===
x: j629 
y: i626 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j629 y: i626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
lastLocationAccess: - 
value: j627 
stateAfter: - 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v650 lastLocationAccess: - value: j627 stateAfter: - #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr  556  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr  556  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[10, 16[[568, 574[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[10, 12[[568, 570[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v16|q [0, 6[[82, 84[[156, 158[[206, 208[[256, 258[[326, 328[[404, 406[[468, 470[[542, 544[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 398[[402, 558[[594, 601[[602, 609[6 MustHaveRegister 50 MustHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister 106 MustHaveRegister 164 MustHaveRegister 174 MustHaveRegister 214 MustHaveRegister 224 MustHaveRegister 264 MustHaveRegister 266 MustHaveRegister 284 MustHaveRegister 294 MustHaveRegister 336 MustHaveRegister 340 ShouldHaveRegister 350 MustHaveRegister 426 MustHaveRegister 436 MustHaveRegister 478 MustHaveRegister 482 ShouldHaveRegister 492 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [8, 282[[594, 601[8 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 90 MustHaveRegister 94 ShouldHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q v2|q [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|q [16, 579[[590, 594[16 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [18, 164[18 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [20, 334[20 MustHaveRegister 268 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [22, 272[22 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [24, 32[24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [26, 34[26 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [28, 582[[590, 594[28 MustHaveRegister 36 MustHaveRegister 576 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [30, 586[[590, 594[30 MustHaveRegister 38 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [32, 40[32 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [52, 60[52 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [58, 70[58 MustHaveRegister 62 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v14|d [60, 68[[80, 82[60 MustHaveRegister 68 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v1|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v0|q [94, 98[94 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [96, 398[[402, 558[96 MustHaveRegister 108 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 138 ShouldHaveRegister 352 MustHaveRegister 370 MustHaveRegister 378 MustHaveRegister 382 ShouldHaveRegister 494 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 524 ShouldHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v0|q [106, 110[[122, 128[[132, 138[106 MustHaveRegister 108 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [136, 148[136 MustHaveRegister 140 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v22|q [138, 146[[154, 156[138 MustHaveRegister 146 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [176, 184[176 MustHaveRegister 178 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [182, 194[182 MustHaveRegister 186 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v28|d [184, 192[[204, 206[184 MustHaveRegister 192 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [226, 234[226 MustHaveRegister 228 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [232, 244[232 MustHaveRegister 236 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v34|d [234, 242[[254, 256[234 MustHaveRegister 242 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [276, 398[[402, 558[276 MustHaveRegister 280 MustHaveRegister 420 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v6|d [278, 398[[402, 558[[594, 601[[602, 609[278 MustHaveRegister 476 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [296, 304[296 MustHaveRegister 298 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [302, 314[302 MustHaveRegister 306 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v42|d [304, 312[[324, 326[304 MustHaveRegister 312 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [314, 316[314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [334, 398[[402, 412[334 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v47|d [338, 346[338 MustHaveRegister 340 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v0|q [340, 342[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v0|q [350, 354[[366, 372[[376, 382[350 MustHaveRegister 352 MustHaveRegister 370 MustHaveRegister 378 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [380, 392[380 MustHaveRegister 384 MustHaveRegister 390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v50|q [382, 390[[402, 404[382 MustHaveRegister 390 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d v56|d [418, 476[420 ShouldHaveRegister 424 ShouldHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v55|d [424, 557[424 MustHaveRegister 426 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [438, 446[438 MustHaveRegister 440 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [444, 456[444 MustHaveRegister 448 MustHaveRegister 454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v58|d [446, 454[[466, 468[446 MustHaveRegister 454 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [476, 550[476 MustHaveRegister 478 MustHaveRegister 480 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v63|d [480, 555[480 MustHaveRegister 482 ShouldHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v0|q [482, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v0|q [492, 496[[508, 514[[518, 524[492 MustHaveRegister 494 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [522, 534[522 MustHaveRegister 526 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v66|q [524, 532[[540, 542[524 MustHaveRegister 532 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q -1 [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [554, 555[554 MustHaveRegister  "NoDefinitionFound"
  v72|q QWORD "[v72|q]" v72|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v72|q [572, 574[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v73|q [574, 578[574 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [576, 584[576 MustHaveRegister 580 ShouldHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q v74|q [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q v76|q [580, 582[580 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v75|q [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[10, 16[[568, 574[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[10, 12[[568, 570[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v16|q [0, 6[[82, 84[[156, 158[[206, 208[[256, 258[[326, 328[[404, 406[[468, 470[[542, 544[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 398[[402, 558[[594, 601[[602, 609[6 MustHaveRegister 50 MustHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister 106 MustHaveRegister 164 MustHaveRegister 174 MustHaveRegister 214 MustHaveRegister 224 MustHaveRegister 264 MustHaveRegister 266 MustHaveRegister 284 MustHaveRegister 294 MustHaveRegister 336 MustHaveRegister 340 ShouldHaveRegister 350 MustHaveRegister 426 MustHaveRegister 436 MustHaveRegister 478 MustHaveRegister 482 ShouldHaveRegister 492 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [8, 282[[594, 601[8 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 90 MustHaveRegister 94 ShouldHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q v2|q [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r8|q]" v4|q v3|q [16, 579[[590, 594[16 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d -1 [18, 164[18 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [20, 334[20 MustHaveRegister 268 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [22, 272[22 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [24, 32[24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [26, 34[26 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [28, 582[[590, 594[28 MustHaveRegister 36 MustHaveRegister 576 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [30, 586[[590, 594[30 MustHaveRegister 38 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rsi|d]" v12|d -1 [32, 40[32 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rsi|d]" v14|d -1 [52, 60[52 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q -1 [58, 70[58 MustHaveRegister 62 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v14|d [60, 68[[80, 82[60 MustHaveRegister 68 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rsi|d]" v19|d v1|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v0|q [94, 98[94 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q -1 [96, 398[[402, 558[96 MustHaveRegister 108 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 138 ShouldHaveRegister 352 MustHaveRegister 370 MustHaveRegister 378 MustHaveRegister 382 ShouldHaveRegister 494 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 524 ShouldHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v0|q [106, 110[[122, 128[[132, 138[106 MustHaveRegister 108 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q -1 [136, 148[136 MustHaveRegister 140 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v22|q [138, 146[[154, 156[138 MustHaveRegister 146 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [176, 184[176 MustHaveRegister 178 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q -1 [182, 194[182 MustHaveRegister 186 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|d [184, 192[[204, 206[184 MustHaveRegister 192 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbp|q]" v31|q -1 [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [226, 234[226 MustHaveRegister 228 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q -1 [232, 244[232 MustHaveRegister 236 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [234, 242[[254, 256[234 MustHaveRegister 242 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbp|q]" v37|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d -1 [276, 398[[402, 558[276 MustHaveRegister 280 MustHaveRegister 420 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v6|d [278, 398[[402, 558[[594, 601[[602, 609[278 MustHaveRegister 476 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [296, 304[296 MustHaveRegister 298 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q -1 [302, 314[302 MustHaveRegister 306 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v42|d [304, 312[[324, 326[304 MustHaveRegister 312 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rbp|q]" v45|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [314, 316[314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [334, 398[[402, 412[334 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|d [338, 346[338 MustHaveRegister 340 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q v0|q [340, 342[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v0|q [350, 354[[366, 372[[376, 382[350 MustHaveRegister 352 MustHaveRegister 370 MustHaveRegister 378 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r11|q]" v51|q -1 [380, 392[380 MustHaveRegister 384 MustHaveRegister 390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|q [382, 390[[402, 404[382 MustHaveRegister 390 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rbp|q]" v53|q -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rax|d]" v55|d v56|d [418, 476[420 ShouldHaveRegister 424 ShouldHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d v55|d [424, 557[424 MustHaveRegister 426 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [438, 446[438 MustHaveRegister 440 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbp|q]" v59|q -1 [444, 456[444 MustHaveRegister 448 MustHaveRegister 454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|d [446, 454[[466, 468[446 MustHaveRegister 454 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r13|q]" v61|q -1 [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d -1 [476, 550[476 MustHaveRegister 478 MustHaveRegister 480 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rbp|q]" v64|q v63|d [480, 555[480 MustHaveRegister 482 ShouldHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v0|q [482, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v0|q [492, 496[[508, 514[[518, 524[492 MustHaveRegister 494 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r13|q]" v67|q -1 [522, 534[522 MustHaveRegister 526 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v66|q [524, 532[[540, 542[524 MustHaveRegister 532 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[r14|q]" v69|q -1 [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q -1 [554, 555[554 MustHaveRegister  "NoDefinitionFound"
  v72|q QWORD "[r10|q]" v72|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r10|q]" v73|q v72|q [572, 574[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q v73|q [574, 578[574 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r11|q]" v75|q -1 [576, 584[576 MustHaveRegister 580 ShouldHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q v74|q [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[r10|q]" v77|q v76|q [580, 582[580 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v75|q [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr  556  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[10, 16[[568, 574[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[10, 12[[568, 570[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v16|q [0, 6[[82, 84[[156, 158[[206, 208[[256, 258[[326, 328[[404, 406[[468, 470[[542, 544[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 398[[402, 558[[594, 601[[602, 609[6 MustHaveRegister 50 MustHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister 106 MustHaveRegister 164 MustHaveRegister 174 MustHaveRegister 214 MustHaveRegister 224 MustHaveRegister 264 MustHaveRegister 266 MustHaveRegister 284 MustHaveRegister 294 MustHaveRegister 336 MustHaveRegister 340 ShouldHaveRegister 350 MustHaveRegister 426 MustHaveRegister 436 MustHaveRegister 478 MustHaveRegister 482 ShouldHaveRegister 492 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [8, 282[[594, 601[8 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 90 MustHaveRegister 94 ShouldHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q v2|q [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r8|q]" v4|q v3|q [16, 579[[590, 594[16 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d -1 [18, 164[18 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [20, 334[20 MustHaveRegister 268 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [22, 272[22 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [24, 32[24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [26, 34[26 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [28, 582[[590, 594[28 MustHaveRegister 36 MustHaveRegister 576 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [30, 586[[590, 594[30 MustHaveRegister 38 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rsi|d]" v12|d -1 [32, 40[32 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rsi|d]" v14|d -1 [52, 60[52 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q -1 [58, 70[58 MustHaveRegister 62 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v14|d [60, 68[[80, 82[60 MustHaveRegister 68 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rsi|d]" v19|d v1|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v0|q [94, 98[94 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q -1 [96, 398[[402, 558[96 MustHaveRegister 108 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 138 ShouldHaveRegister 352 MustHaveRegister 370 MustHaveRegister 378 MustHaveRegister 382 ShouldHaveRegister 494 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 524 ShouldHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v0|q [106, 110[[122, 128[[132, 138[106 MustHaveRegister 108 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q -1 [136, 148[136 MustHaveRegister 140 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v22|q [138, 146[[154, 156[138 MustHaveRegister 146 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [176, 184[176 MustHaveRegister 178 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q -1 [182, 194[182 MustHaveRegister 186 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|d [184, 192[[204, 206[184 MustHaveRegister 192 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbp|q]" v31|q -1 [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [226, 234[226 MustHaveRegister 228 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q -1 [232, 244[232 MustHaveRegister 236 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [234, 242[[254, 256[234 MustHaveRegister 242 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbp|q]" v37|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d -1 [276, 398[[402, 558[276 MustHaveRegister 280 MustHaveRegister 420 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v6|d [278, 398[[402, 558[[594, 601[[602, 609[278 MustHaveRegister 476 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [296, 304[296 MustHaveRegister 298 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q -1 [302, 314[302 MustHaveRegister 306 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v42|d [304, 312[[324, 326[304 MustHaveRegister 312 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rbp|q]" v45|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [314, 316[314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [334, 398[[402, 412[334 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|d [338, 346[338 MustHaveRegister 340 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q v0|q [340, 342[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v0|q [350, 354[[366, 372[[376, 382[350 MustHaveRegister 352 MustHaveRegister 370 MustHaveRegister 378 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r11|q]" v51|q -1 [380, 392[380 MustHaveRegister 384 MustHaveRegister 390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|q [382, 390[[402, 404[382 MustHaveRegister 390 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rbp|q]" v53|q -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rax|d]" v55|d v56|d [418, 476[420 ShouldHaveRegister 424 ShouldHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d v55|d [424, 557[424 MustHaveRegister 426 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [438, 446[438 MustHaveRegister 440 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbp|q]" v59|q -1 [444, 456[444 MustHaveRegister 448 MustHaveRegister 454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|d [446, 454[[466, 468[446 MustHaveRegister 454 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r13|q]" v61|q -1 [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d -1 [476, 550[476 MustHaveRegister 478 MustHaveRegister 480 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rbp|q]" v64|q v63|d [480, 555[480 MustHaveRegister 482 ShouldHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v0|q [482, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v0|q [492, 496[[508, 514[[518, 524[492 MustHaveRegister 494 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r13|q]" v67|q -1 [522, 534[522 MustHaveRegister 526 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v66|q [524, 532[[540, 542[524 MustHaveRegister 532 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[r14|q]" v69|q -1 [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q -1 [554, 555[554 MustHaveRegister  "NoDefinitionFound"
  v72|q QWORD "[r10|q]" v72|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r10|q]" v73|q v72|q [572, 574[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q v73|q [574, 578[574 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r11|q]" v75|q -1 [576, 584[576 MustHaveRegister 580 ShouldHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q v74|q [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[r10|q]" v77|q v76|q [580, 582[580 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v75|q [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr  556  <|@ instruction JUMP ~[v56|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[10, 16[[568, 574[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[10, 12[[568, 570[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v16|q [0, 6[[82, 84[[156, 158[[206, 208[[256, 258[[326, 328[[404, 406[[468, 470[[542, 544[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 398[[402, 558[[594, 601[[602, 609[6 MustHaveRegister 50 MustHaveRegister 92 MustHaveRegister 94 ShouldHaveRegister 106 MustHaveRegister 164 MustHaveRegister 174 MustHaveRegister 214 MustHaveRegister 224 MustHaveRegister 264 MustHaveRegister 266 MustHaveRegister 284 MustHaveRegister 294 MustHaveRegister 336 MustHaveRegister 340 ShouldHaveRegister 350 MustHaveRegister 426 MustHaveRegister 436 MustHaveRegister 478 MustHaveRegister 482 ShouldHaveRegister 492 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [8, 282[[594, 601[8 MustHaveRegister 18 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 90 MustHaveRegister 94 ShouldHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rsi|q]" v2|q -1 [12, 14[12 MustHaveRegister 14 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q v2|q [14, 16[14 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r8|q]" v4|q v3|q [16, 579[[590, 594[16 MustHaveRegister 578 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdx|d]" v5|d -1 [18, 164[18 MustHaveRegister 164 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [20, 334[20 MustHaveRegister 268 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [22, 272[22 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [24, 32[24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister 30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [26, 34[26 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [28, 582[[590, 594[28 MustHaveRegister 36 MustHaveRegister 576 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [30, 586[[590, 594[30 MustHaveRegister 38 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rsi|d]" v12|d -1 [32, 40[32 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [50, 52[50 MustHaveRegister 52 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rsi|d]" v14|d -1 [52, 60[52 MustHaveRegister 54 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q -1 [58, 70[58 MustHaveRegister 62 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v14|d [60, 68[[80, 82[60 MustHaveRegister 68 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q -1 [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [70, 72[70 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rsi|d]" v19|d v1|q [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v0|q [94, 98[94 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q -1 [96, 398[[402, 558[96 MustHaveRegister 108 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 138 ShouldHaveRegister 352 MustHaveRegister 370 MustHaveRegister 378 MustHaveRegister 382 ShouldHaveRegister 494 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 524 ShouldHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v0|q [106, 110[[122, 128[[132, 138[106 MustHaveRegister 108 MustHaveRegister 126 MustHaveRegister 134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbp|q]" v23|q -1 [136, 148[136 MustHaveRegister 140 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v22|q [138, 146[[154, 156[138 MustHaveRegister 146 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[r13|q]" v25|q -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [176, 184[176 MustHaveRegister 178 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q -1 [182, 194[182 MustHaveRegister 186 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v28|d [184, 192[[204, 206[184 MustHaveRegister 192 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbp|q]" v31|q -1 [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [226, 234[226 MustHaveRegister 228 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q -1 [232, 244[232 MustHaveRegister 236 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [234, 242[[254, 256[234 MustHaveRegister 242 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rbp|q]" v37|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d -1 [276, 398[[402, 558[276 MustHaveRegister 280 MustHaveRegister 420 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v6|d [278, 398[[402, 558[[594, 601[[602, 609[278 MustHaveRegister 476 MustHaveRegister 557 LiveAtLoopEnd  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [296, 304[296 MustHaveRegister 298 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q -1 [302, 314[302 MustHaveRegister 306 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v42|d [304, 312[[324, 326[304 MustHaveRegister 312 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rbp|q]" v45|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [314, 316[314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rax|d]" v47|d -1 [334, 398[[402, 412[334 MustHaveRegister 336 MustHaveRegister 338 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|d [338, 346[338 MustHaveRegister 340 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q v0|q [340, 342[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v0|q [350, 354[[366, 372[[376, 382[350 MustHaveRegister 352 MustHaveRegister 370 MustHaveRegister 378 MustHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r11|q]" v51|q -1 [380, 392[380 MustHaveRegister 384 MustHaveRegister 390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|q [382, 390[[402, 404[382 MustHaveRegister 390 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rbp|q]" v53|q -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rax|d]" v55|d v56|d [418, 476[420 ShouldHaveRegister 424 ShouldHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d v55|d [424, 557[424 MustHaveRegister 426 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q -1 [436, 438[436 MustHaveRegister 438 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [438, 446[438 MustHaveRegister 440 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rbp|q]" v59|q -1 [444, 456[444 MustHaveRegister 448 MustHaveRegister 454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|d [446, 454[[466, 468[446 MustHaveRegister 454 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r13|q]" v61|q -1 [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d -1 [476, 550[476 MustHaveRegister 478 MustHaveRegister 480 MustHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rbp|q]" v64|q v63|d [480, 555[480 MustHaveRegister 482 ShouldHaveRegister 488 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q v0|q [482, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q v0|q [492, 496[[508, 514[[518, 524[492 MustHaveRegister 494 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[r13|q]" v67|q -1 [522, 534[522 MustHaveRegister 526 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rsi|q]" v68|q v66|q [524, 532[[540, 542[524 MustHaveRegister 532 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[r14|q]" v69|q -1 [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q -1 [554, 555[554 MustHaveRegister  "NoDefinitionFound"
  v72|q QWORD "[r10|q]" v72|q -1 [570, 572[570 MustHaveRegister 572 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[r10|q]" v73|q v72|q [572, 574[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r10|q]" v74|q v73|q [574, 578[574 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r11|q]" v75|q -1 [576, 584[576 MustHaveRegister 580 ShouldHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q v74|q [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[r10|q]" v77|q v76|q [580, 582[580 MustHaveRegister 582 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[r11|q]" v78|q v75|q [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE v56|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction v2|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction v3|QWORD = SHL v2|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = OR (x: v3|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v5|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v8|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v8|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction v11|DWORD[_] = MOV [v8|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction v12|DWORD[_] = MOV [v8|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [v11|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v12|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction v13|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction v14|DWORD[_] = MOV [v13|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD[_], y: v14|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction v17|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: v18|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction v20|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v21|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH v20|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction v22|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [v22|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [v22|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction v23|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction v24|QWORD[*] = ADD (x: v22|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v23|QWORD, y: v23|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v25|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [v25|QWORD + v23|QWORD * 1 - 8], y: v24|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v26|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: v26|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE v24|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction v27|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction v28|DWORD[_] = MOV [v27|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v28|DWORD[_], y: v28|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v29|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: v29|QWORD, y: v29|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction v31|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [v31|QWORD + v29|QWORD * 1 - 8], y: v30|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction v32|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: v32|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH v7|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v39|DWORD = MOV [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction v41|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction v42|DWORD[_] = MOV [v41|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: v42|DWORD[_], y: v42|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction v43|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction v45|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: v46|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v47|DWORD[_] = MOV [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction v49|QWORD[*] = XOR (x: v0|QWORD[.], y: v48|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH v49|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: v48|QWORD[.], y: v48|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [v50|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction v51|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction v52|QWORD[*] = ADD (x: v50|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction v53|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: v54|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v47|DWORD[_], y: v47|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v55|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v56|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction v57|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction v58|DWORD[_] = MOV [v57|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: v58|DWORD[_], y: v58|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction v59|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction v61|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: v62|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v63|DWORD[_] = MOV [v40|QWORD[.] + v55|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v63|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction v65|QWORD[*] = XOR (x: v0|QWORD[.], y: v64|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH v65|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v64|QWORD[.], y: v64|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v66|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [v66|QWORD[*] + v21|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [v66|QWORD[*] + v21|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction v67|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction v68|QWORD[*] = ADD (x: v66|QWORD[*], y: v21|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: v67|QWORD, y: v67|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction v69|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [v69|QWORD + v67|QWORD * 1 - 8], y: v68|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction v70|QWORD = LEA [v67|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: v70|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE v68|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: v63|DWORD[_], y: v63|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v64|QWORD[.] 
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction SAFEPOINT v71|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE v56|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction v72|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction v73|QWORD = SHL v72|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction v74|QWORD = OR (x: v73|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v75|QWORD = MOV [v10|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v4|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction v77|QWORD = ADD (x: v76|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [v10|DWORD[_] * 8 + 20352], y: v77|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v78|QWORD = INC v75|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [v11|DWORD[_] * 8 + 20352], y: v78|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907968602409696
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729780221477529
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589908069204125817
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4565756968008179403
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582945998150576608
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610981191430505192
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457181
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595809918096822047
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605075804658198855
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597530347472322275
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4536663864055970573
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rbx:0, rbp:0, rdi:0, r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@reference-map: [r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   16  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 20352] <|@ <|@
      nr   38  <|@ instruction BLACKHOLE [rdi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 20352] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   92  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   98  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  108  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  268  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607166570860350929
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  278  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  286  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606267269762808654
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605458064741055430
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  352  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607166386453645569
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605075804658198856
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction r11|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD <|@ <|@
      nr  480  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612307339946843507
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611794847832160897
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612876775629824184
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610617240275799244
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rbx:0, rbp:0, rdi:0, r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rbp|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612876775629824185
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598227105381751341
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  440  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597367894125457182
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965006
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  454  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596547906741965005
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  512  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581561130569567599
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  522  <|@ instruction r13|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  526  <|@ instruction TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580970739653453233
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  530  <|@ instruction r14|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582217120476361341
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566869549855227377
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  228  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  246  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  186  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591857354189860249
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  296  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  298  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591138060837190717
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3 <|@ <|@
      nr  306  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490696819788138
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814642706352007
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction r11|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039859819220365
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  390  <|@ instruction MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332533920274070
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r13|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  148  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596856752049162
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction MOV [r15|QWORD + 1156] y: -48667 size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] r11|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction MOV [r15|QWORD + 1156] y: -45339 size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  608  <|@ st <@st|@reference-map: [r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f855804000048896c24104c8bd64c8bda0f318bf248c1e6204c8bc64c0bc0418b5318418b4324458b4b1448beaddeaddeaddeadde8b4e7c8b5e708b7e748b767841807f40000f857a020000498bf348c1ee034189721c498bf24933f348b9002099be027f000048f7c60000c0ff0f841a0000004d85db0f8411000000498bf248c1ee09803c0e020f85d70200004189520c41807f40000f855e02000041c742140000000041807f40000f85e101000041c742180000000041c742100000000085c00f84790000004183f9010f8c6f0000008b14c50c000000448bc849c1e10385d20f843003000041c742100100000041807f40000f85350200008b04c510000000418942148bf048c1e6034d8bda4c33de49f7c30000c0ff0f841a0000004885f60f8411000000498bf248c1ee09803c0e020f854002000085c00f84440000000f31448bd249c1e2204c0bd04c8b1cdd804f00004d2bd04d03d34c8914dd804f000049ffc34c891cfd804f0000488b6c24104883c418493ba7500400000f87ea020000c3b801000000e9820000006666660f1f8400000000006666669066660f1f84000000000066666690448bd841ffc345895a1041807f40000f8559000000418b448110418942148be848c1e503498bf24833f548f7c60000c0ff0f841a0000004885ed0f8411000000498bf248c1ee09803c0e020f854e00000085c00f853cffffff498b87580400008500418bc33bd07797e921020000498d72148b3685f6749d498b6f2848c1e6034885ed0f84480000004d8b6f384989742df8488d75f849897728e976fffffff083042400803c0e0074a7c6040e004d8b6f484803f14d85ed0f841d0000004d8b77584b89742ef8498d75f849897748eb80e800000000e93affffffe800000000e96cffffff498d72188b3685f60f8411feffff498b572848c1e6034885d20f8416010000498b6f3848897415f8488d72f849897728e9eafdffff498d721c8b3685f60f8478fdffff498b4f2848c1e6034885c90f84cd000000498b6f384889740df8488d71f849897728e951fdffff498d72148b3685f60f8494fdffff498b572848c1e6034885d20f84a2000000498b6f3848897415f8488d72f849897728e96dfdffff498d72148b3685f60f84bdfdffff4d8b5f2848c1e6034d85db0f8481000000498b6f384a89741df8498d73f849897728e996fdfffff083042400803c0e000f841afdffffe961000000f083042400803c0e000f84b1fdffffc6040e004d8b5f484803f14d85db0f8472000000498b6f584a89741df8498d73f849897748e987fdffffe800000000e990fcffffe800000000e9d7fcffffe800000000e9e0fcffffe800000000e921fdffffc6040e00498b6f484803f14885ed0f84160000004d8b6f584989742df8488d75f849897748e98afcffffe800000000e980fcffffe800000000e921fdffff41c78784040000e541ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000e54effff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e999fbfffff4488d0d02fdffff49898f68040000e94bfbfffff441c78784040000f57affff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 8 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 69 10 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 71 12 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 73 14 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 77 16 r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 83 18 rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 83 [r10:0, r11:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r10|QWORD[.]  |Object[null]  |-   <||@
  Comment 83 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 20 rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD  <||@
  Comment 91 22 r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 95 24 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 95 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 105 26 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD  <||@
  Comment 108 28 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD  <||@
  Comment 111 30 rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 114 32 rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD  <||@
  Comment 117 34 BLACKHOLE [rcx|DWORD[_] * 8 + 20352]  <||@
  Comment 117 36 BLACKHOLE [rbx|DWORD[_] * 8 + 20352]  <||@
  Comment 117 38 BLACKHOLE [rdi|DWORD[_] * 8 + 20352]  <||@
  Comment 117 40 BLACKHOLE [rsi|DWORD[_] * 8 + 20352]  <||@
  Comment 117 42 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null  <||@
  Comment 128 block B7 null  <||@
  Comment 128 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 128 90 rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 135 92 MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 139 94 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 145 96 rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 155 98 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD  <||@
  Comment 168 block B9 null  <||@
  Comment 168 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 168 102 TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 177 block B11 null  <||@
  Comment 177 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 177 106 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 184 108 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null  <||@
  Comment 194 block B18 null  <||@
  Comment 194 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 194 164 MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 198 166 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null  <||@
  Comment 209 block B25 null  <||@
  Comment 209 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 209 214 MOV [r10|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 217 216 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null  <||@
  Comment 228 block B32 null  <||@
  Comment 228 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 228 264 MOV [r10|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 236 266 MOV [r10|QWORD[.] + 16] y: 0 size: DWORD  <||@
  Comment 244 268 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 252 block B34 null  <||@
  Comment 252 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 252 272 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null  <||@
  Comment 262 block B36 null  <||@
  Comment 262 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 262 276 rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 269 278 r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 276 280 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 284 block B38 null  <||@
  Comment 284 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 284 MOV [r10|QWORD[.] + 16] y: 1 size: DWORD  <||@
  Comment 292 286 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null  <||@
  Comment 303 block B45 null  <||@
  Comment 303 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 334 rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 310 336 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 314 338 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 320 340 r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 326 342 TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD  <||@
  Comment 339 block B47 null  <||@
  Comment 339 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 339 346 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD  <||@
  Comment 348 block B49 null  <||@
  Comment 348 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 350 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 355 352 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null  <||@
  Comment 365 block B56 null  <||@
  Comment 365 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 365 412 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD  <||@
  Comment 373 block B82 null  <||@
  Comment 373 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 373 568 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 375 570 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 378 572 r10|QWORD = SHL r10|QWORD y: 32 size: QWORD  <||@
  Comment 382 574 r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 385 576 r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD  <||@
  Comment 393 578 r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD  <||@
  Comment 396 580 r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 399 582 MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD  <||@
  Comment 407 584 r11|QWORD = INC r11|QWORD size: QWORD  <||@
  Comment 410 586 MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD  <||@
  Comment 418 588 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 427 POLL_RETURN_FAR  <||@
  Comment 441 block B57 null  <||@
  Comment 441 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 441 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 446 416 JUMP ~[] destination: B57 -> B58  <||@
  Comment 451 block B59 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 451 422 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 424 r11|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 486 426 MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 490 428 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null  <||@
  Comment 501 block B66 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 501 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 501 476 rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 506 478 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 510 480 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 516 482 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD  <||@
  Comment 522 484 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD  <||@
  Comment 535 block B68 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 535 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 488 TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD  <||@
  Comment 544 block B70 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 544 490 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 544 492 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 551 494 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null  <||@
  Comment 561 block B77 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 561 548 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 550 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD  <||@
  Comment 569 block B78 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 569 552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 569 554 SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75]  <||@
  Comment 576 [rbx:0, rbp:0, rdi:0, r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r9|QWORD[.] 
     stack:   |rbp|QWORD[.]  |   |              <||@
  Comment 576 {infopoint: SAFEPOINT}  <||@
  Comment 576 POLL_FAR  <||@
  Comment 578 -1 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 581 556 JUMP ~[] destination: B78 -> B58  <||@
  Comment 581 block B58 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 581 418 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 581 420 CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD  <||@
  Comment 590 block B61 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 590 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 590 436 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 594 438 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 596 440 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD  <||@
  Comment 600 block B63 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 600 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 600 444 rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 604 446 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 608 448 TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD  <||@
  Comment 617 block B65 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 617 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 617 452 r13|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 621 454 MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 626 456 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 630 458 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 634 460 JUMP ~[] destination: B65 -> B66  <||@
  Comment 639 block B72 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 639 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 639 510 MEMBAR barriers: 4  <||@
  Comment 644 512 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null  <||@
  Comment 650 block B74 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 650 518 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 520 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 654 522 r13|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 658 524 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 661 526 TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD  <||@
  Comment 670 block B76 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 670 528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 670 530 r14|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 674 532 MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 679 534 rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 683 536 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 687 538 JUMP ~[] destination: B76 -> B77  <||@
  Comment 689 block B64 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 689 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 689 470 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 689 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 694 472 JUMP ~[] destination: B64 -> B66  <||@
  Comment 699 block B75 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 699 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 699 542 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 699 544 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 699 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 704 546 JUMP ~[] destination: B75 -> B77  <||@
  Comment 709 block B27 null  <||@
  Comment 709 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 709 224 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD  <||@
  Comment 713 226 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 715 228 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 723 block B29 null  <||@
  Comment 723 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 723 232 rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 727 234 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 731 236 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD  <||@
  Comment 740 block B31 null  <||@
  Comment 740 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 740 240 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 744 242 MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 749 244 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 753 246 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 757 248 JUMP ~[] destination: B31 -> B32  <||@
  Comment 762 block B2 null  <||@
  Comment 762 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 762 50 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD  <||@
  Comment 766 52 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 768 54 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 776 block B4 null  <||@
  Comment 776 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 776 58 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 780 60 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 784 62 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 793 block B6 null  <||@
  Comment 793 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 793 66 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 797 68 MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 802 70 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 806 72 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 810 74 JUMP ~[] destination: B6 -> B7  <||@
  Comment 815 block B20 null  <||@
  Comment 815 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 815 174 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 819 176 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 821 178 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 829 block B22 null  <||@
  Comment 829 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 829 182 rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 833 184 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 837 186 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD  <||@
  Comment 846 block B24 null  <||@
  Comment 846 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 846 190 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 850 192 MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 855 194 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 859 196 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 863 198 JUMP ~[] destination: B24 -> B25  <||@
  Comment 868 block B40 null  <||@
  Comment 868 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 868 294 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 872 296 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 874 298 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 882 block B42 null  <||@
  Comment 882 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 882 302 r11|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 886 304 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 890 306 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 899 block B44 null  <||@
  Comment 899 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 899 310 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 903 312 MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 908 314 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 912 316 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 916 318 JUMP ~[] destination: B44 -> B45  <||@
  Comment 921 block B13 null  <||@
  Comment 921 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 921 124 MEMBAR barriers: 4  <||@
  Comment 926 126 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null  <||@
  Comment 941 block B51 null  <||@
  Comment 941 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 941 368 MEMBAR barriers: 4  <||@
  Comment 946 370 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null  <||@
  Comment 956 block B53 null  <||@
  Comment 956 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 956 378 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 960 380 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 964 382 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 967 384 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD  <||@
  Comment 976 block B55 null  <||@
  Comment 976 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 976 388 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 980 390 MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 985 392 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 989 394 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 993 396 JUMP ~[] destination: B55 -> B56  <||@
  Comment 998 block B5 null  <||@
  Comment 998 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 998 84 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 998 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1003 86 JUMP ~[] destination: B5 -> B7  <||@
  Comment 1008 block B23 null  <||@
  Comment 1008 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1008 208 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1008 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1013 210 JUMP ~[] destination: B23 -> B25  <||@
  Comment 1018 block B30 null  <||@
  Comment 1018 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1018 258 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1018 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1023 260 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1028 block B43 null  <||@
  Comment 1028 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1028 328 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1028 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1033 330 JUMP ~[] destination: B43 -> B45  <||@
  Comment 1038 block B15 null  <||@
  Comment 1038 132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 134 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1042 136 rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1046 138 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 1049 140 TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD  <||@
  Comment 1058 block B17 null  <||@
  Comment 1058 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1058 144 r13|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1062 146 MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1067 148 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 1071 150 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1075 152 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1080 block B16 null  <||@
  Comment 1080 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1080 156 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1080 158 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1080 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1085 160 JUMP ~[] destination: B16 -> B18  <||@
  Comment 1090 block B54 null  <||@
  Comment 1090 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1090 404 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1090 406 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1090 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1095 408 JUMP ~[] destination: B54 -> B56  <||@
  Comment 1100 block B37 null  <||@
  Comment 1100 594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1100 596 MOV [r15|QWORD + 1156] y: -48667 size: DWORD  <||@
  Comment 1111 598 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1122 600 DEOPT info [bci:37]  <||@
  Comment 1122 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1127 [r9:0, r10:0, r11:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2           
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|QWORD[.]   <||@
  Comment 1135 block B80 null  <||@
  Comment 1135 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1135 604 MOV [r15|QWORD + 1156] y: -45339 size: DWORD  <||@
  Comment 1146 606 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1157 608 DEOPT info [bci:48]  <||@
  Comment 1157 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1162 [r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r9|QWORD[.]   <||@
  Comment 1175 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1200 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1228 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1233 [r10:0, r11:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r10|QWORD[.]  |Object[null]  |-   <||@
  Comment 1241 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1241 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1247 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1247 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2542[java.util.HashMap$HashIterator.<init>(HashMap)]"
  method "HotSpotCompilation-2542[java.util.HashMap$HashIterator.<init>(HashMap)]"
  date 1714038089675
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02ab909920 448b560849bc0000003f027f00004d03d44d33e4493bc20f8543b727ff66669089842400c0feff4883ec189041817f20030000000f855804000048896c24104c8bd64c8bda0f318bf248c1e6204c8bc64c0bc0418b5318418b4324458b4b1448bed88c5e2e060000008b4e7c8b5e708b7e748b767841807f40000f857a020000498bf348c1ee034189721c498bf24933f348b9002099be027f000048f7c60000c0ff0f841a0000004d85db0f8411000000498bf248c1ee09803c0e020f85d70200004189520c41807f40000f855e02000041c742140000000041807f40000f85e101000041c742180000000041c742100000000085c00f84790000004183f9010f8c6f0000008b14c50c000000448bc849c1e10385d20f843003000041c742100100000041807f40000f85350200008b04c510000000418942148bf048c1e6034d8bda4c33de49f7c30000c0ff0f841a0000004885f60f8411000000498bf248c1ee09803c0e020f854002000085c00f84440000000f31448bd249c1e2204c0bd04c8b1cdd804f00004d2bd04d03d34c8914dd804f000049ffc34c891cfd804f0000488b6c24104883c418493ba7500400000f87ea020000c3b801000000e9820000006666660f1f8400000000006666669066660f1f84000000000066666690448bd841ffc345895a1041807f40000f8559000000418b448110418942148be848c1e503498bf24833f548f7c60000c0ff0f841a0000004885ed0f8411000000498bf248c1ee09803c0e020f854e00000085c00f853cffffff498b87580400008500418bc33bd07797e921020000498d72148b3685f6749d498b6f2848c1e6034885ed0f84480000004d8b6f384989742df8488d75f849897728e976fffffff083042400803c0e0074a7c6040e004d8b6f484803f14d85ed0f841d0000004d8b77584b89742ef8498d75f849897748eb80e82ade3bffe93affffffe820093cffe96cffffff498d72188b3685f60f8411feffff498b572848c1e6034885d20f8416010000498b6f3848897415f8488d72f849897728e9eafdffff498d721c8b3685f60f8478fdffff498b4f2848c1e6034885c90f84cd000000498b6f384889740df8488d71f849897728e951fdffff498d72148b3685f60f8494fdffff498b572848c1e6034885d20f84a2000000498b6f3848897415f8488d72f849897728e96dfdffff498d72148b3685f60f84bdfdffff4d8b5f2848c1e6034d85db0f8481000000498b6f384a89741df8498d73f849897728e996fdfffff083042400803c0e000f841afdffffe961000000f083042400803c0e000f84b1fdffffc6040e004d8b5f484803f14d85db0f8472000000498b6f584a89741df8498d73f849897748e987fdffffe8f5dc3bffe990fcffffe8ebdc3bffe9d7fcffffe8e1dc3bffe9e0fcffffe8d7dc3bffe921fdffffc6040e00498b6f484803f14885ed0f84160000004d8b6f584989742df8488d75f849897748e98afcffffe8a3073cffe980fcffffe899073cffe921fdffff41c78784040000e541ffff49c7879004000000000000e8f31328ff0f1f84000000000041c78784040000e54effff49c7879004000000000000e8d01328ff0f1f84000000000048896c2410e8641426ffe999fbfffff4488d0d02fdffff49898f68040000e92b2228fff441c78784040000f57affff49c7879004000000000000e8891328ff0f1f840000000000e802d93bfff4e81c1128fff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6da9e774 slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 8 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 69 10 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 71 12 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 73 14 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 77 16 r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 83 18 rdx|DWORD = MOV [r11|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 83 [r10:0, r11:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r10|QWORD[.]  |Object[null]  |-   <||@
  Comment 83 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 20 rax|DWORD[_] = MOV [r11|QWORD[.] + 36] size: DWORD  <||@
  Comment 91 22 r9|DWORD = MOV [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 95 24 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 95 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 105 26 rcx|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD  <||@
  Comment 108 28 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD  <||@
  Comment 111 30 rdi|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 114 32 rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD  <||@
  Comment 117 34 BLACKHOLE [rcx|DWORD[_] * 8 + 20352]  <||@
  Comment 117 36 BLACKHOLE [rbx|DWORD[_] * 8 + 20352]  <||@
  Comment 117 38 BLACKHOLE [rdi|DWORD[_] * 8 + 20352]  <||@
  Comment 117 40 BLACKHOLE [rsi|DWORD[_] * 8 + 20352]  <||@
  Comment 117 42 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null  <||@
  Comment 128 block B7 null  <||@
  Comment 128 88 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 128 90 rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 135 92 MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 139 94 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 145 96 rcx|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 155 98 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD  <||@
  Comment 168 block B9 null  <||@
  Comment 168 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 168 102 TESTBRANCH (x: r11|QWORD[.], y: r11|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 177 block B11 null  <||@
  Comment 177 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 177 106 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 184 108 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null  <||@
  Comment 194 block B18 null  <||@
  Comment 194 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 194 164 MOV (x: [r10|QWORD[.] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 198 166 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null  <||@
  Comment 209 block B25 null  <||@
  Comment 209 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 209 214 MOV [r10|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 217 216 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null  <||@
  Comment 228 block B32 null  <||@
  Comment 228 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 228 264 MOV [r10|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 236 266 MOV [r10|QWORD[.] + 16] y: 0 size: DWORD  <||@
  Comment 244 268 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.001759474751059575 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 252 block B34 null  <||@
  Comment 252 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 252 272 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.050934268926774E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null  <||@
  Comment 262 block B36 null  <||@
  Comment 262 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 262 276 rdx|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 269 278 r9|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 276 280 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 284 block B38 null  <||@
  Comment 284 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 284 MOV [r10|QWORD[.] + 16] y: 1 size: DWORD  <||@
  Comment 292 286 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null  <||@
  Comment 303 block B45 null  <||@
  Comment 303 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 334 rax|DWORD[_] = MOV [rax|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 310 336 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 314 338 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 320 340 r11|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 326 342 TESTCONSTBRANCH r11|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD  <||@
  Comment 339 block B47 null  <||@
  Comment 339 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 339 346 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD  <||@
  Comment 348 block B49 null  <||@
  Comment 348 348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 350 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 355 352 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null  <||@
  Comment 365 block B56 null  <||@
  Comment 365 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 365 412 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.7674849308491027 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD  <||@
  Comment 373 block B82 null  <||@
  Comment 373 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 373 568 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 375 570 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 378 572 r10|QWORD = SHL r10|QWORD y: 32 size: QWORD  <||@
  Comment 382 574 r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 385 576 r11|QWORD = MOV [rbx|DWORD[_] * 8 + 20352] size: QWORD  <||@
  Comment 393 578 r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD  <||@
  Comment 396 580 r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 399 582 MOV (x: [rbx|DWORD[_] * 8 + 20352], y: r10|QWORD) size: QWORD  <||@
  Comment 407 584 r11|QWORD = INC r11|QWORD size: QWORD  <||@
  Comment 410 586 MOV (x: [rdi|DWORD[_] * 8 + 20352], y: r11|QWORD) size: QWORD  <||@
  Comment 418 588 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 427 POLL_RETURN_FAR  <||@
  Comment 441 block B57 null  <||@
  Comment 441 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 441 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 446 416 JUMP ~[] destination: B57 -> B58  <||@
  Comment 451 block B59 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 451 422 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 424 r11|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 486 426 MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 490 428 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null  <||@
  Comment 501 block B66 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 501 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 501 476 rax|DWORD[_] = MOV [r9|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 506 478 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[_]) size: DWORD  <||@
  Comment 510 480 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 516 482 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rbp|QWORD[.]) size: QWORD  <||@
  Comment 522 484 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD  <||@
  Comment 535 block B68 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 535 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 488 TESTBRANCH (x: rbp|QWORD[.], y: rbp|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD  <||@
  Comment 544 block B70 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 544 490 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 544 492 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 551 494 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null  <||@
  Comment 561 block B77 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 561 548 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 550 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 0.6970428215526584 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD  <||@
  Comment 569 block B78 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 569 552 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 569 554 SAFEPOINT rax|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 thread: r15 state [bci:75]  <||@
  Comment 576 [rbx:0, rbp:0, rdi:0, r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r9|QWORD[.] 
     stack:   |rbp|QWORD[.]  |   |              <||@
  Comment 576 {infopoint: SAFEPOINT}  <||@
  Comment 576 POLL_FAR  <||@
  Comment 578 -1 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 581 556 JUMP ~[] destination: B78 -> B58  <||@
  Comment 581 block B58 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 581 418 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 581 420 CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD  <||@
  Comment 590 block B61 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 590 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 590 436 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 594 438 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 596 440 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD  <||@
  Comment 600 block B63 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 600 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 600 444 rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 604 446 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 608 448 TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD  <||@
  Comment 617 block B65 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 617 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 617 452 r13|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 621 454 MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 626 456 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 630 458 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 634 460 JUMP ~[] destination: B65 -> B66  <||@
  Comment 639 block B72 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 639 508 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 639 510 MEMBAR barriers: 4  <||@
  Comment 644 512 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null  <||@
  Comment 650 block B74 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 650 518 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 520 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 654 522 r13|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 658 524 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 661 526 TESTBRANCH (x: r13|QWORD, y: r13|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD  <||@
  Comment 670 block B76 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 670 528 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 670 530 r14|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 674 532 MOV (x: [r14|QWORD + r13|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 679 534 rsi|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 683 536 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 687 538 JUMP ~[] destination: B76 -> B77  <||@
  Comment 689 block B64 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 689 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 689 470 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 689 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 694 472 JUMP ~[] destination: B64 -> B66  <||@
  Comment 699 block B75 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 699 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 699 542 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 699 544 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 699 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 704 546 JUMP ~[] destination: B75 -> B77  <||@
  Comment 709 block B27 null  <||@
  Comment 709 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 709 224 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD  <||@
  Comment 713 226 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 715 228 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 723 block B29 null  <||@
  Comment 723 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 723 232 rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 727 234 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 731 236 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD  <||@
  Comment 740 block B31 null  <||@
  Comment 740 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 740 240 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 744 242 MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 749 244 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 753 246 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 757 248 JUMP ~[] destination: B31 -> B32  <||@
  Comment 762 block B2 null  <||@
  Comment 762 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 762 50 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD  <||@
  Comment 766 52 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 768 54 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 776 block B4 null  <||@
  Comment 776 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 776 58 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 780 60 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 784 62 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 793 block B6 null  <||@
  Comment 793 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 793 66 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 797 68 MOV (x: [rbp|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 802 70 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 806 72 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 810 74 JUMP ~[] destination: B6 -> B7  <||@
  Comment 815 block B20 null  <||@
  Comment 815 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 815 174 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 819 176 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 821 178 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 829 block B22 null  <||@
  Comment 829 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 829 182 rdx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 833 184 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 837 186 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD  <||@
  Comment 846 block B24 null  <||@
  Comment 846 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 846 190 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 850 192 MOV (x: [rbp|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 855 194 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 859 196 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 863 198 JUMP ~[] destination: B24 -> B25  <||@
  Comment 868 block B40 null  <||@
  Comment 868 292 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 868 294 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 872 296 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 874 298 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 882 block B42 null  <||@
  Comment 882 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 882 302 r11|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 886 304 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@edff23b encoding: base: 0 shift: 3  <||@
  Comment 890 306 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 899 block B44 null  <||@
  Comment 899 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 899 310 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 903 312 MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 908 314 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 912 316 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 916 318 JUMP ~[] destination: B44 -> B45  <||@
  Comment 921 block B13 null  <||@
  Comment 921 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 921 124 MEMBAR barriers: 4  <||@
  Comment 926 126 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null  <||@
  Comment 941 block B51 null  <||@
  Comment 941 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 941 368 MEMBAR barriers: 4  <||@
  Comment 946 370 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null  <||@
  Comment 956 block B53 null  <||@
  Comment 956 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 956 378 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 960 380 r11|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 964 382 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 967 384 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD  <||@
  Comment 976 block B55 null  <||@
  Comment 976 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 976 388 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 980 390 MOV (x: [rbp|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 985 392 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 989 394 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 993 396 JUMP ~[] destination: B55 -> B56  <||@
  Comment 998 block B5 null  <||@
  Comment 998 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 998 84 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 998 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1003 86 JUMP ~[] destination: B5 -> B7  <||@
  Comment 1008 block B23 null  <||@
  Comment 1008 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1008 208 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1008 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1013 210 JUMP ~[] destination: B23 -> B25  <||@
  Comment 1018 block B30 null  <||@
  Comment 1018 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1018 258 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1018 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1023 260 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1028 block B43 null  <||@
  Comment 1028 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1028 328 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1028 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1033 330 JUMP ~[] destination: B43 -> B45  <||@
  Comment 1038 block B15 null  <||@
  Comment 1038 132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1038 134 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1042 136 rbp|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1046 138 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 1049 140 TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD  <||@
  Comment 1058 block B17 null  <||@
  Comment 1058 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1058 144 r13|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1062 146 MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1067 148 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 1071 150 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1075 152 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1080 block B16 null  <||@
  Comment 1080 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1080 156 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1080 158 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1080 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1085 160 JUMP ~[] destination: B16 -> B18  <||@
  Comment 1090 block B54 null  <||@
  Comment 1090 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1090 404 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1090 406 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1090 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1095 408 JUMP ~[] destination: B54 -> B56  <||@
  Comment 1100 block B37 null  <||@
  Comment 1100 594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1100 596 MOV [r15|QWORD + 1156] y: -48667 size: DWORD  <||@
  Comment 1111 598 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1122 600 DEOPT info [bci:37]  <||@
  Comment 1122 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1127 [r9:0, r10:0, r11:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2           
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |r9|QWORD[.]   <||@
  Comment 1135 block B80 null  <||@
  Comment 1135 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1135 604 MOV [r15|QWORD + 1156] y: -45339 size: DWORD  <||@
  Comment 1146 606 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1157 608 DEOPT info [bci:48]  <||@
  Comment 1157 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1162 [r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r9|QWORD[.]   <||@
  Comment 1175 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1200 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1228 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1233 [r10:0, r11:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r10|QWORD[.]  |Object[null]  |-   <||@
  Comment 1241 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1241 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1247 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1247 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
