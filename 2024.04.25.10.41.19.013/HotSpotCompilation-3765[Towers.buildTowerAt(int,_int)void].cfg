begin_compilation
  name " HotSpotCompilation-3765[Towers.buildTowerAt(int, int)]"
  method "HotSpotCompilation-3765[Towers.buildTowerAt(int, int)]"
  date 1714038100261
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j568 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a582 
=== Usages ===
j570 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a582  <|@  <|@
f <@~|@floating>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 v602 v603 v604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a119 
index: - 
=== Succesors ===
=== Usages ===
a582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a119 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a582 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
lastLocationAccess: - 
=== Succesors ===
next: a583 
=== Usages ===
v597 
=== Predecessor ===
j568 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v601 lastLocationAccess: - #next: a583  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a119 
index: - 
=== Succesors ===
=== Usages ===
a583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a119 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a583 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
lastLocationAccess: - 
=== Succesors ===
next: a584 
=== Usages ===
v598 
=== Predecessor ===
a582 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v602 lastLocationAccess: - #next: a584  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a119 
index: - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a119 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
lastLocationAccess: - 
=== Succesors ===
next: a585 
=== Usages ===
v599 
=== Predecessor ===
a583 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v603 lastLocationAccess: - #next: a585  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a119 
index: - 
=== Succesors ===
=== Usages ===
a585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a119 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a585 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
=== Succesors ===
next: v44 
=== Usages ===
v600 
=== Predecessor ===
a584 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 30136
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a582 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a582  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 30136
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a583 
=== Succesors ===
=== Usages ===
v44 j578 v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a583  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 30136
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a584 
=== Succesors ===
=== Usages ===
v44 v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a584  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 30136
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a585 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v597 v598 v599 v600 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
a585 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v597 v598 v599 v600 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?100 v69 v223 v89 ?110 i78 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 v69 v302 v452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.06666666666666667
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v71 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a586 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a586  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?60 ?67 v605 ?94 ?100 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a586 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
=== Succesors ===
next: i587 
=== Usages ===
a138 v606 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - #next: i587  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?67 v607 v180 ?94 ?60 ?100 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v252 i587 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a586 
=== Succesors ===
=== Usages ===
i587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-35851|0xffffffffffff73f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v606 
lastLocationAccess: - 
=== Succesors ===
next: v220 
=== Usages ===
v180 
=== Predecessor ===
a586 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v606 lastLocationAccess: - #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i587 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i587  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 j251 v514 v303 v479 v329 v369 v389 v453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
i587 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v217 #falseSuccessor: v219  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a588 
=== Usages ===
v188 v167 
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a588  <|@  <|@
f <@~|@floating>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a586 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a586  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a138 
index: i2 
=== Succesors ===
=== Usages ===
v167 a588 v188 a590 j316 j363 j466 j508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a138 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a588 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
a154 v195 v226 v609 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a588 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a588  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.011813859674398502
stamp: void
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
a588 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v84 #falseSuccessor: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i589 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i589  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a588 
=== Succesors ===
=== Usages ===
i589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers$TowersDisk.size
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.getSize() [bci: 1]
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
=== Succesors ===
next: v245 
=== Usages ===
v89 
=== Predecessor ===
v83 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i589 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i589  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v243 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
i589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v243 #falseSuccessor: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v243 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v93 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v93 #next: v313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j267 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j294 
=== Usages ===
v614 v615 
=== Predecessor ===
v313 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j294 v296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
=== Succesors ===
next: j295 
=== Usages ===
j270 v616 v617 a278 v618 v619 v620 
=== Predecessor ===
j267 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - #next: j295  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j295 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
v271 
=== Predecessor ===
j294 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v615 lastLocationAccess: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 j425 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j294 
y: j266 
=== Succesors ===
=== Usages ===
v271 v296 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j294 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j295 
y: j270 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j295 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 v451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:431) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 v448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a279 a433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
j295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v273 #falseSuccessor: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a279 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a279  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i3 
=== Succesors ===
=== Usages ===
?94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i3  <|@  <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 0
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?94 ?110 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a588 
=== Succesors ===
=== Usages ===
?94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a588  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a109 
values: i3 - 
=== Succesors ===
=== Usages ===
?94 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a109 values: i3 -  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?100 
values: a1 a109 i2 a154 
virtualObjectMappings: ?110 
=== Succesors ===
=== Usages ===
v594 a279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?100 values: a1 a109 i2 a154 virtualObjectMappings: ?110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?94 
arguments: v265 
=== Succesors ===
next: v594 
=== Usages ===
v594 a292 
=== Predecessor ===
v273 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?94 arguments: v265 #next: v594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-79217|0xfffffffffffeca8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?94 
object: a279 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?94 object: a279 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
value: j270 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - value: j270 stateAfter: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v618 
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v618 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
lastLocationAccess: - 
value: j275 
stateAfter: - 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v616 lastLocationAccess: - value: j275 stateAfter: - #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
lastLocationAccess: - 
value: v562 
stateAfter: - 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v620 lastLocationAccess: - value: v562 stateAfter: - #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - value: i10 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
lastLocationAccess: - 
value: j249 
stateAfter: - 
=== Succesors ===
next: a278 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v619 lastLocationAccess: - value: j249 stateAfter: - #next: a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j294 
=== Succesors ===
next: v281 
=== Usages ===
a292 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j294 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
a278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v282 
values: a278 a279 
=== Succesors ===
=== Usages ===
v611 a227 v610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v282 values: a278 a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v283 
=== Succesors ===
next: v226 
=== Usages ===
a292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v283 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a292 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
value: a588 
stateAfter: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - value: a588 stateAfter: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a292 
index: - 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v610 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v610 lastLocationAccess: - value: i3 stateAfter: - #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a227 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a292 
=== Succesors ===
next: v359 
=== Usages ===
a166 a362 
=== Predecessor ===
v228 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a292 #next: v359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j315 
=== Usages ===
=== Predecessor ===
a227 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j315 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j316 
=== Usages ===
v621 v623 v624 
=== Predecessor ===
v359 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v607 
=== Succesors ===
next: i345 
=== Usages ===
v622 
=== Predecessor ===
j315 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v607 #next: i345  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j315 
index: - 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j315 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
v353 
=== Predecessor ===
j316 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 v408 v415 v498 v548 v554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i352 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i345 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid j343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j344 j405 j490 j545 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v353 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
i345 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v353 #trueSuccessor: v319 #falseSuccessor: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v319 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a346 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a346  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j316 
index: - 
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a346 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
a347 v354 
=== Predecessor ===
v318 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a346 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a346  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v354 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
a346 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v354 #trueSuccessor: v326 #falseSuccessor: v322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j348 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j348  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j315 
index: - 
=== Succesors ===
=== Usages ===
j348 v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j315 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
v329 j344 v625 
=== Predecessor ===
v322 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v623 lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j348 
y: j249 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j348 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid a347 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a346 
=== Succesors ===
=== Usages ===
j334 v337 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a346  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
j348 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v331 #falseSuccessor: v330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a347 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a347 #next: v338  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j349 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j349  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j315 
index: - 
=== Succesors ===
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j315 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: j334 
=== Usages ===
v625 
=== Predecessor ===
v330 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - #next: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a347 
=== Succesors ===
next: v350 
=== Usages ===
v350 
=== Predecessor ===
j349 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a347 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j349 
index: j348 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: j348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
lastLocationAccess: - 
value: j334 
stateAfter: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
j334 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v625 lastLocationAccess: - value: j334 stateAfter: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j348 
y: j343 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j348 y: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
lastLocationAccess: - 
value: j344 
stateAfter: - 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v623 lastLocationAccess: - value: j344 stateAfter: - #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v325 v336 v338 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v325 v336 v338 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid a166 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Compress
stamp: n!# Towers$TowersDisk
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v217 
address: v607 
lastLocationAccess: - 
value: a166 
stateAfter: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v217 address: v607 lastLocationAccess: - value: a166 stateAfter: - #next: v421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j361 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j361 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a362 
=== Usages ===
v626 v627 
=== Predecessor ===
v421 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a227 
=== Succesors ===
next: j363 
=== Usages ===
j364 
=== Predecessor ===
j361 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a227 #next: j363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v607 
=== Succesors ===
next: j364 
=== Usages ===
j365 j378 
=== Predecessor ===
a362 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v607 #next: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a362 
=== Succesors ===
next: v368 
=== Usages ===
j365 v369 
=== Predecessor ===
j363 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a362 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j363 
y: j364 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j363 y: j364  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
x: j365 
y: j399 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j365 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 v553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j378 j521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j401 v629 j543 v645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v400 
=== Succesors ===
trueSuccessor: v367 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
j364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v400 #trueSuccessor: v367 #falseSuccessor: v366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j364 
y: j249 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j364 y: j249  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v369 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v369 #trueSuccessor: v374 #falseSuccessor: v370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i406 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i406  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j363 
y: i377 
=== Succesors ===
=== Usages ===
j401 v629 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j363 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j378 
index: j376 
=== Succesors ===
=== Usages ===
i406 i407 v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i406 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
v414 
=== Predecessor ===
v370 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i406 
y: i413 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i406 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v379 
=== Usages ===
=== Predecessor ===
i406 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v381 #falseSuccessor: v379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i407 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
v415 
=== Predecessor ===
v383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i407 
y: i352 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i407 y: i352  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v415 
=== Succesors ===
trueSuccessor: v386 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
i407 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v415 #trueSuccessor: v386 #falseSuccessor: v384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: i352 
stateAfter: - 
=== Succesors ===
next: j409 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: i352 stateAfter: - #next: j409  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
j409 v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
=== Succesors ===
next: v392 
=== Usages ===
v389 j405 v628 
=== Predecessor ===
v408 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j409 
y: j249 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j409 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j378 
y: j376 
=== Succesors ===
=== Usages ===
v396 v411 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j378 y: j376  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
j409 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v391 #falseSuccessor: v390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j401 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j401 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v396 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j410 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
lastLocationAccess: - 
=== Succesors ===
next: v411 
=== Usages ===
v628 
=== Predecessor ===
v390 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 lastLocationAccess: - #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j410 
index: j409 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j410 index: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
lastLocationAccess: - 
value: j401 
stateAfter: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
j410 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v628 lastLocationAccess: - value: j401 stateAfter: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j409 
y: j343 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j409 y: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
value: j405 
stateAfter: - 
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - value: j405 stateAfter: - #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v412 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v371 v373 v380 v385 v395 v397 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v371 v373 v380 v385 v395 v397 #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 i78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i3 
y: i26 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i78 i27 i27 i27 i27 i27 i27 
=== Succesors ===
=== Usages ===
?9 v11 ?67 i27 v231 v55 ?115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i78 i27 i27 i27 i27 i27 i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 6
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v16 
=== Usages ===
i107 v14 v28 v567 v563 v564 v565 v566 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i10 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0714285714285714
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v14 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a590 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a590 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: v50 
=== Usages ===
a178 v198 v234 v608 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a590  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.011813859674398502
stamp: void
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
a590 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v49 #falseSuccessor: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i591 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i591  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a590 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i591 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers$TowersDisk.size
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.getSize() [bci: 1]
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
=== Succesors ===
next: v240 
=== Usages ===
v55 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i591 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i591  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
i591 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v238 #falseSuccessor: v239  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v57 v59 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v57 v59 #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j422 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j445 
=== Usages ===
v630 v631 
=== Predecessor ===
v463 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
j445 v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
=== Succesors ===
next: j446 
=== Usages ===
j425 v632 v633 a432 v634 v635 v636 
=== Predecessor ===
j422 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
=== Succesors ===
next: v429 
=== Usages ===
v426 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j445 
y: j266 
=== Succesors ===
=== Usages ===
v426 v447 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j445 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j446 
y: j425 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j446 y: j425  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
j446 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v428 #falseSuccessor: v427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a433 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a433  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i107 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i107  <|@  <|@
tid a114 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 1
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?60 ?115 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a178 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a590  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a114 
values: i107 - 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a114 values: i107 -  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
values: a1 a114 i2 a178 
virtualObjectMappings: ?115 
=== Succesors ===
=== Usages ===
v596 a433 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67 values: a1 a114 i2 a178 virtualObjectMappings: ?115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a433 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v265 
=== Succesors ===
next: v596 
=== Usages ===
v596 a443 
=== Predecessor ===
v428 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v265 #next: v596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-117617|0xfffffffffffe348f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?60 
object: a433 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
a433 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?60 object: a433 #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
value: j425 
stateAfter: - 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - value: j425 stateAfter: - #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v634 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v634 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
value: j275 
stateAfter: - 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - value: j275 stateAfter: - #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
value: v562 
stateAfter: - 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - value: v562 stateAfter: - #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - value: i10 stateAfter: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
value: j249 
stateAfter: - 
=== Succesors ===
next: a432 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - value: j249 stateAfter: - #next: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j445 
=== Succesors ===
next: v435 
=== Usages ===
a443 
=== Predecessor ===
v453 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j445 #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
a432 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v436 
values: a432 a433 
=== Succesors ===
=== Usages ===
v613 a235 v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v436 values: a432 a433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v437 
=== Succesors ===
next: v234 
=== Usages ===
a443 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v437 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a443 
index: - 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
lastLocationAccess: - 
value: a590 
stateAfter: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v613 lastLocationAccess: - value: a590 stateAfter: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a443 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
lastLocationAccess: - 
value: i107 
stateAfter: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v612 lastLocationAccess: - value: i107 stateAfter: - #next: v236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a235 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a443 
=== Succesors ===
next: v504 
=== Usages ===
a187 a507 
=== Predecessor ===
v236 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a443 #next: v504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j465 
=== Usages ===
=== Predecessor ===
a235 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j466 
=== Usages ===
v637 v639 v640 
=== Predecessor ===
v504 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v607 
=== Succesors ===
next: i491 
=== Usages ===
v638 
=== Predecessor ===
j465 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v607 #next: i491  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
=== Succesors ===
next: v470 
=== Usages ===
v498 
=== Predecessor ===
j466 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i352 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i491 y: i352  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
i491 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v469 #falseSuccessor: v468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a492 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a492  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j466 
index: - 
=== Succesors ===
=== Usages ===
a492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j466 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a492 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
=== Succesors ===
next: v477 
=== Usages ===
a493 v499 
=== Predecessor ===
v468 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a492 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a492  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v476 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
a492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v476 #falseSuccessor: v472  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j494 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j494  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
j494 v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: v482 
=== Usages ===
v479 j490 v641 
=== Predecessor ===
v472 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j249 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j494 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid a493 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a492 
=== Succesors ===
=== Usages ===
j484 v487 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a492  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v479 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v480 
=== Usages ===
=== Predecessor ===
j494 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v479 #trueSuccessor: v481 #falseSuccessor: v480  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a493 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a493 #next: v488  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v487 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j495 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
=== Succesors ===
next: j484 
=== Usages ===
v641 
=== Predecessor ===
v480 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - #next: j484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a493 
=== Succesors ===
next: v496 
=== Usages ===
v496 
=== Predecessor ===
j495 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a493 #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: j494 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
lastLocationAccess: - 
value: j484 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
j484 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v641 lastLocationAccess: - value: j484 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j494 
y: j343 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j494 y: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
value: j490 
stateAfter: - 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - value: j490 stateAfter: - #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v473 v475 v486 v488 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v473 v475 v486 v488 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid a187 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Compress
stamp: n!# Towers$TowersDisk
=== Inputs ===
value: a235 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v217 
address: v607 
lastLocationAccess: - 
value: a187 
stateAfter: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v217 address: v607 lastLocationAccess: - value: a187 stateAfter: - #next: v560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j506 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j506 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a507 
=== Usages ===
v642 v643 
=== Predecessor ===
v560 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a235 
=== Succesors ===
next: j508 
=== Usages ===
j509 
=== Predecessor ===
j506 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a235 #next: j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v607 
=== Succesors ===
next: j509 
=== Usages ===
j510 j521 
=== Predecessor ===
a507 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v607 #next: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a507 
=== Succesors ===
next: v513 
=== Usages ===
j510 v514 
=== Predecessor ===
j508 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a507 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j508 
y: j509 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j508 y: j509  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
x: j510 
y: j399 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j510 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i107 
y: i26 
=== Succesors ===
=== Usages ===
i107 i107 i107 i107 i107 i107 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i107 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
j509 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v512 #falseSuccessor: v511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j509 
y: j249 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j509 y: j249  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v519 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 5
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i546 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i546  <|@  <|@
f <@~|@floating>@ <|@
tid j521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j508 
y: i377 
=== Succesors ===
=== Usages ===
j543 v645 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j508 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j521 
index: j376 
=== Succesors ===
=== Usages ===
i546 i547 v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j521 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
=== Succesors ===
next: v525 
=== Usages ===
v553 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i546 
y: i413 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i546 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v553 
=== Succesors ===
trueSuccessor: v524 
falseSuccessor: v522 
=== Usages ===
=== Predecessor ===
i546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v553 #trueSuccessor: v524 #falseSuccessor: v522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 4
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i547 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
=== Succesors ===
next: v530 
=== Usages ===
v554 
=== Predecessor ===
v526 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i547 
y: i352 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i547 y: i352  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v554 
=== Succesors ===
trueSuccessor: v529 
falseSuccessor: v527 
=== Usages ===
=== Predecessor ===
i547 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v554 #trueSuccessor: v529 #falseSuccessor: v527  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
value: i352 
stateAfter: - 
=== Succesors ===
next: j549 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - value: i352 stateAfter: - #next: j549  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
j549 v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j549 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: v535 
=== Usages ===
v532 j545 v644 
=== Predecessor ===
v548 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j549 
y: j249 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j549 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j521 
y: j376 
=== Succesors ===
=== Usages ===
v539 v551 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j521 y: j376  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v532 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v533 
=== Usages ===
=== Predecessor ===
j549 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v532 #trueSuccessor: v534 #falseSuccessor: v533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j543 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j543 #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j550 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j550  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
=== Succesors ===
next: v551 
=== Usages ===
v644 
=== Predecessor ===
v533 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j550 
index: j549 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j550 index: j549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
value: j543 
stateAfter: - 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
j550 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - value: j543 stateAfter: - #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j549 
y: j343 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j549 y: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
value: j545 
stateAfter: - 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - value: j545 stateAfter: - #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 2
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v103 v104 
=== Succesors ===
next: j569 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v103 v104 #next: j569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j578 
=== Usages ===
j570 
=== Predecessor ===
v102 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j578 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
=== Succesors ===
next: v580 
=== Usages ===
j572 j576 
=== Predecessor ===
j569 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
=== Inputs ===
x: j569 
y: j568 
=== Succesors ===
=== Usages ===
j572 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j569 y: j568  <|@  <|@
f <@~|@floating>@ <|@
tid j572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
=== Inputs ===
x: j570 
y: j578 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j570 y: j578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: j572 
stateAfter: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
j578 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: j572 stateAfter: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid i575 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j576 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
=== Inputs ===
x: j578 
y: i575 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j578 y: i575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
lastLocationAccess: - 
value: j576 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v599 lastLocationAccess: - value: j576 stateAfter: - #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i107 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x5abf1394]: UnreachedCode@5[HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>, 22]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -61971
stableDimension: 0
stamp: i32 [-61971]
stampKind: i32
value: int[-61971|0xffffffffffff0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -40219
stableDimension: 0
stamp: i32 [-40219]
stampKind: i32
value: int[-40219|0xffffffffffff62e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32 [-61971 - -40219] bits:1...10xx0xxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v246 
values: i254 i256 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v246 values: i254 i256  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v246 
values: j249 j257 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v246 values: j249 j257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v253 v255 
=== Succesors ===
next: v252 
=== Usages ===
i250 j251 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v253 v255 #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i250 
speculation: j251 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i250 speculation: j251  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j568 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j568 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: a582 
=== Usages ===
j570 
=== Predecessor ===
v0 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: a582  <|@  <|@
f <@~|@floating>@ <|@
tid a119 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 v602 v603 v604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v6|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a119 
index: - 
=== Succesors ===
=== Usages ===
a582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a119 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a582 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
lastLocationAccess: - 
=== Succesors ===
next: a583 
=== Usages ===
v597 
=== Predecessor ===
j568 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v601 lastLocationAccess: - #next: a583  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v6|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a119 
index: - 
=== Succesors ===
=== Usages ===
a583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a119 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a583 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
lastLocationAccess: - 
=== Succesors ===
next: a584 
=== Usages ===
v598 
=== Predecessor ===
a582 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v602 lastLocationAccess: - #next: a584  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result [v6|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a119 
index: - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a119 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
lastLocationAccess: - 
=== Succesors ===
next: a585 
=== Usages ===
v599 
=== Predecessor ===
a583 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v603 lastLocationAccess: - #next: a585  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
result [v6|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a119 
index: - 
=== Succesors ===
=== Usages ===
a585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a119 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a585 <|@
result v10|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
=== Succesors ===
next: v44 
=== Usages ===
v600 
=== Predecessor ===
a584 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v7|DWORD[_] * 8 + 30136] <|@
d <@d|@=== Debug Properties ===
displacement: 30136
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a582 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a582  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [v8|DWORD[_] * 8 + 30136] <|@
d <@d|@=== Debug Properties ===
displacement: 30136
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a583 
=== Succesors ===
=== Usages ===
v44 j578 v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a583  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [v9|DWORD[_] * 8 + 30136] <|@
d <@d|@=== Debug Properties ===
displacement: 30136
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a584 
=== Succesors ===
=== Usages ===
v44 v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a584  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v10|DWORD[_] * 8 + 30136] <|@
d <@d|@=== Debug Properties ===
displacement: 30136
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a585 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v597 v598 v599 v600 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
a585 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v597 v598 v599 v600 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?100 v69 v223 v89 ?110 i78 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 v69 v302 v452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.06666666666666667
stamp: void
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v71 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v71 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a586 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a586  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?60 ?67 v605 ?94 ?100 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a586 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
=== Succesors ===
next: i587 
=== Usages ===
a138 v606 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - #next: i587  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?67 v607 v180 ?94 ?60 ?100 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v252 i587 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
result [v11|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a586 
=== Succesors ===
=== Usages ===
i587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-35851|0xffffffffffff73f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v606 
lastLocationAccess: - 
=== Succesors ===
next: v220 
=== Usages ===
v180 
=== Predecessor ===
a586 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v606 lastLocationAccess: - #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i587 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i587  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 j251 v514 v303 v479 v329 v369 v389 v453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
i587 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v217 #falseSuccessor: v219  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a588 
=== Usages ===
v188 v167 
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a588  <|@  <|@
f <@~|@floating>@ <|@
tid a138 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a586 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a586  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
result [v12|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a138 
index: i2 
=== Succesors ===
=== Usages ===
v167 a588 v188 a590 j316 j363 j466 j508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a138 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a588 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
a154 v195 v226 v609 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: v85  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a588 
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a588  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.011813859674398502
stamp: void
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
a588 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v84 #falseSuccessor: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i589 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i589  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
result [v13|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a588 
=== Succesors ===
=== Usages ===
i589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a588  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers$TowersDisk.size
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.getSize() [bci: 1]
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
=== Succesors ===
next: v245 
=== Usages ===
v89 
=== Predecessor ===
v83 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i589 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i589  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v243 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
i589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v243 #falseSuccessor: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v243 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v93 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v93 #next: v313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j267 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j294 
=== Usages ===
v614 v615 
=== Predecessor ===
v313 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j294 v296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j294 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
=== Succesors ===
next: j295 
=== Usages ===
j270 v616 v617 a278 v618 v619 v620 
=== Predecessor ===
j267 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - #next: j295  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j267 
index: - 
=== Succesors ===
=== Usages ===
j295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j267 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j295 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
v271 
=== Predecessor ===
j294 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v615 lastLocationAccess: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 j425 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j294 
y: j266 
=== Succesors ===
=== Usages ===
v271 v296 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j294 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j295 
y: j270 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j295 y: j270  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 v451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:431) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v297 v448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a279 a433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
j295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v273 #falseSuccessor: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a279 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a279  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i3 
=== Succesors ===
=== Usages ===
?94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i3  <|@  <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 0
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?94 ?110 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a588 
=== Succesors ===
=== Usages ===
?94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a588  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a109 
values: i3 - 
=== Succesors ===
=== Usages ===
?94 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a109 values: i3 -  <|@  <|@
tid ?94 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?100 
values: a1 a109 i2 a154 
virtualObjectMappings: ?110 
=== Succesors ===
=== Usages ===
v594 a279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?100 values: a1 a109 i2 a154 virtualObjectMappings: ?110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?94 
arguments: v265 
=== Succesors ===
next: v594 
=== Usages ===
v594 a292 
=== Predecessor ===
v273 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?94 arguments: v265 #next: v594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-79217|0xfffffffffffeca8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?94 
object: a279 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?94 object: a279 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
value: j270 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - value: j270 stateAfter: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result [v14|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v618 
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v618 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
result [v14|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
lastLocationAccess: - 
value: j275 
stateAfter: - 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v616 lastLocationAccess: - value: j275 stateAfter: - #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
result [v14|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
lastLocationAccess: - 
value: v562 
stateAfter: - 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v620 lastLocationAccess: - value: v562 stateAfter: - #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
result [v14|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - value: i10 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
result [v14|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j294 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j294 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
lastLocationAccess: - 
value: j249 
stateAfter: - 
=== Succesors ===
next: a278 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v619 lastLocationAccess: - value: j249 stateAfter: - #next: a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a278 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j294 
=== Succesors ===
next: v281 
=== Usages ===
a292 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j294 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
a278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a292 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v282 
values: a278 a279 
=== Succesors ===
=== Usages ===
v611 a227 v610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v282 values: a278 a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v283 
=== Succesors ===
next: v226 
=== Usages ===
a292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v283 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
result [v21|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a292 
index: - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
value: a588 
stateAfter: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - value: a588 stateAfter: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
result [v21|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a292 
index: - 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v610 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v610 lastLocationAccess: - value: i3 stateAfter: - #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a227 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a227 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a292 
=== Succesors ===
next: v359 
=== Usages ===
a166 a362 
=== Predecessor ===
v228 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a292 #next: v359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j315 
=== Usages ===
=== Predecessor ===
a227 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j315 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j316 
=== Usages ===
v621 v623 v624 
=== Predecessor ===
v359 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j316 <|@
result [v12|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v607 
=== Succesors ===
next: i345 
=== Usages ===
v622 
=== Predecessor ===
j315 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v607 #next: i345  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j315 
index: - 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j315 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
v353 
=== Predecessor ===
j316 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 v408 v415 v498 v548 v554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i352 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i345 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid j343 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j344 j405 j490 j545 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v353 
=== Succesors ===
trueSuccessor: v319 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
i345 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v353 #trueSuccessor: v319 #falseSuccessor: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v319 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a346 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a346  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
result [v22|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j316 
index: - 
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a346 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
a347 v354 
=== Predecessor ===
v318 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a346 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a346  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v354 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
a346 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v354 #trueSuccessor: v326 #falseSuccessor: v322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j348 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j348  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j315 
index: - 
=== Succesors ===
=== Usages ===
j348 v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j315 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j348 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
v329 j344 v625 
=== Predecessor ===
v322 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v623 lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j348 
y: j249 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j348 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid a347 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a346 
=== Succesors ===
=== Usages ===
j334 v337 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a346  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v330 
=== Usages ===
=== Predecessor ===
j348 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v331 #falseSuccessor: v330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a347 
=== Succesors ===
next: v338 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a347 #next: v338  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j349 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j349  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j315 
index: - 
=== Succesors ===
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j315 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j349 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: j334 
=== Usages ===
v625 
=== Predecessor ===
v330 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - #next: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a347 
=== Succesors ===
next: v350 
=== Usages ===
v350 
=== Predecessor ===
j349 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a347 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
result [v26|QWORD + v24|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j349 
index: j348 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: j348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
lastLocationAccess: - 
value: j334 
stateAfter: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
j334 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v625 lastLocationAccess: - value: j334 stateAfter: - #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j348 
y: j343 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j348 y: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
lastLocationAccess: - 
value: j344 
stateAfter: - 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v623 lastLocationAccess: - value: j344 stateAfter: - #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v325 v336 v338 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v325 v336 v338 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid a166 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Compress
stamp: n!# Towers$TowersDisk
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v217 
address: v607 
lastLocationAccess: - 
value: a166 
stateAfter: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v217 address: v607 lastLocationAccess: - value: a166 stateAfter: - #next: v421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j361 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j361 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a362 
=== Usages ===
v626 v627 
=== Predecessor ===
v421 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a362 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a227 
=== Succesors ===
next: j363 
=== Usages ===
j364 
=== Predecessor ===
j361 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a227 #next: j363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j363 <|@
result [v12|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v607 
=== Succesors ===
next: j364 
=== Usages ===
j365 j378 
=== Predecessor ===
a362 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v607 #next: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j364 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a362 
=== Succesors ===
next: v368 
=== Usages ===
j365 v369 
=== Predecessor ===
j363 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a362 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j363 
y: j364 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j363 y: j364  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
x: j365 
y: j399 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j365 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 v553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j378 j521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 139649764368384
stableDimension: 0
stamp: i64 [139649764368384]
stampKind: i64
value: long[139649764368384|0x7f02be992000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j401 v629 j543 v645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v400 
=== Succesors ===
trueSuccessor: v367 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
j364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v400 #trueSuccessor: v367 #falseSuccessor: v366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j364 
y: j249 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j364 y: j249  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v369 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v369 #trueSuccessor: v374 #falseSuccessor: v370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i406 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i406  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
result v32|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j363 
y: i377 
=== Succesors ===
=== Usages ===
j401 v629 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j363 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result [v32|QWORD[*] + v31|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j378 
index: j376 
=== Succesors ===
=== Usages ===
i406 i407 v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i406 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
v414 
=== Predecessor ===
v370 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i406 
y: i413 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i406 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v379 
=== Usages ===
=== Predecessor ===
i406 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v381 #falseSuccessor: v379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i407 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
v415 
=== Predecessor ===
v383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i407 
y: i352 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i407 y: i352  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v415 
=== Succesors ===
trueSuccessor: v386 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
i407 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v415 #trueSuccessor: v386 #falseSuccessor: v384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: i352 
stateAfter: - 
=== Succesors ===
next: j409 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: i352 stateAfter: - #next: j409  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
j409 v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j409 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
=== Succesors ===
next: v392 
=== Usages ===
v389 j405 v628 
=== Predecessor ===
v408 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j409 
y: j249 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j409 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid j401 <|@
result v35|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j378 
y: j376 
=== Succesors ===
=== Usages ===
v396 v411 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j378 y: j376  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
j409 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v391 #falseSuccessor: v390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j401 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j401 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v396 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j410 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j410 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
lastLocationAccess: - 
=== Succesors ===
next: v411 
=== Usages ===
v628 
=== Predecessor ===
v390 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 lastLocationAccess: - #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result [v36|QWORD + v34|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j410 
index: j409 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j410 index: j409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
lastLocationAccess: - 
value: j401 
stateAfter: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
j410 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v628 lastLocationAccess: - value: j401 stateAfter: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid j405 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j409 
y: j343 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j409 y: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
value: j405 
stateAfter: - 
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - value: j405 stateAfter: - #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
v412 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v371 v373 v380 v385 v395 v397 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v371 v373 v380 v385 v395 v397 #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 i78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i3 
y: i26 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i78 i27 i27 i27 i27 i27 i27 
=== Succesors ===
=== Usages ===
?9 v11 ?67 i27 v231 v55 ?115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i78 i27 i27 i27 i27 i27 i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 6
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v16 
=== Usages ===
i107 v14 v28 v567 v563 v564 v565 v566 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i10 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0714285714285714
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v14 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a590 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a590 <|@
result v40|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: v50 
=== Usages ===
a178 v198 v234 v608 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a590  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.011813859674398502
stamp: void
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
a590 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v49 #falseSuccessor: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i591 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i591  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result [v40|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a590 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i591 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers$TowersDisk.size
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.getSize() [bci: 1]
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
=== Succesors ===
next: v240 
=== Usages ===
v55 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i591 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i591  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
i591 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v238 #falseSuccessor: v239  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v57 v59 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v57 v59 #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j422 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j445 
=== Usages ===
v630 v631 
=== Predecessor ===
v463 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
j445 v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
=== Succesors ===
next: j446 
=== Usages ===
j425 v632 v633 a432 v634 v635 v636 
=== Predecessor ===
j422 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j422 
index: - 
=== Succesors ===
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
=== Succesors ===
next: v429 
=== Usages ===
v426 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j445 
y: j266 
=== Succesors ===
=== Usages ===
v426 v447 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j445 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j446 
y: j425 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j446 y: j425  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v426 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
j446 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v426 #trueSuccessor: v428 #falseSuccessor: v427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a433 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a433  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i107 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i107  <|@  <|@
tid a114 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 1
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?60 ?115 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a178 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a590  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a114 
values: i107 - 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a114 values: i107 -  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?67 
values: a1 a114 i2 a178 
virtualObjectMappings: ?115 
=== Succesors ===
=== Usages ===
v596 a433 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?67 values: a1 a114 i2 a178 virtualObjectMappings: ?115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a433 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v265 
=== Succesors ===
next: v596 
=== Usages ===
v596 a443 
=== Predecessor ===
v428 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v265 #next: v596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-117617|0xfffffffffffe348f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?60 
object: a433 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
a433 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?60 object: a433 #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
value: j425 
stateAfter: - 
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - value: j425 stateAfter: - #next: v440  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
result [v41|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v634 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v634 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
result [v41|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
value: j275 
stateAfter: - 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - value: j275 stateAfter: - #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
result [v41|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
value: v562 
stateAfter: - 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - value: v562 stateAfter: - #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
result [v41|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - value: i10 stateAfter: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result [v41|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
value: j249 
stateAfter: - 
=== Succesors ===
next: a432 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - value: j249 stateAfter: - #next: a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a432 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j445 
=== Succesors ===
next: v435 
=== Usages ===
a443 
=== Predecessor ===
v453 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j445 #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
a432 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a443 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v436 
values: a432 a433 
=== Succesors ===
=== Usages ===
v613 a235 v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v436 values: a432 a433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v437 
=== Succesors ===
next: v234 
=== Usages ===
a443 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v437 #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
result [v47|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a443 
index: - 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
lastLocationAccess: - 
value: a590 
stateAfter: - 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v613 lastLocationAccess: - value: a590 stateAfter: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result [v47|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a443 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a443 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
lastLocationAccess: - 
value: i107 
stateAfter: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v612 lastLocationAccess: - value: i107 stateAfter: - #next: v236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a235 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a235 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a443 
=== Succesors ===
next: v504 
=== Usages ===
a187 a507 
=== Predecessor ===
v236 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a443 #next: v504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j465 
=== Usages ===
=== Predecessor ===
a235 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j465 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j466 
=== Usages ===
v637 v639 v640 
=== Predecessor ===
v504 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j466 <|@
result [v12|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v607 
=== Succesors ===
next: i491 
=== Usages ===
v638 
=== Predecessor ===
j465 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v607 #next: i491  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
=== Succesors ===
next: v470 
=== Usages ===
v498 
=== Predecessor ===
j466 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i491 
y: i352 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i491 y: i352  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v468 
=== Usages ===
=== Predecessor ===
i491 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v469 #falseSuccessor: v468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a492 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a492  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
result [v48|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j466 
index: - 
=== Succesors ===
=== Usages ===
a492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j466 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a492 <|@
result v49|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
=== Succesors ===
next: v477 
=== Usages ===
a493 v499 
=== Predecessor ===
v468 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a492 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a492  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v476 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
a492 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v476 #falseSuccessor: v472  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j494 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j494  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
j494 v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: v482 
=== Usages ===
v479 j490 v641 
=== Predecessor ===
v472 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j249 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j494 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid a493 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a492 
=== Succesors ===
=== Usages ===
j484 v487 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a492  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v479 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v480 
=== Usages ===
=== Predecessor ===
j494 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v479 #trueSuccessor: v481 #falseSuccessor: v480  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a493 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a493 #next: v488  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v487 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j495 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
=== Succesors ===
next: j484 
=== Usages ===
v641 
=== Predecessor ===
v480 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - #next: j484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j484 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a493 
=== Succesors ===
next: v496 
=== Usages ===
v496 
=== Predecessor ===
j495 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a493 #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
result [v52|QWORD + v50|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: j494 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
lastLocationAccess: - 
value: j484 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
j484 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v641 lastLocationAccess: - value: j484 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j494 
y: j343 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j494 y: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
value: j490 
stateAfter: - 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - value: j490 stateAfter: - #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v473 v475 v486 v488 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v473 v475 v486 v488 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid a187 <|@
result v54|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Compress
stamp: n!# Towers$TowersDisk
=== Inputs ===
value: a235 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v217 
address: v607 
lastLocationAccess: - 
value: a187 
stateAfter: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v217 address: v607 lastLocationAccess: - value: a187 stateAfter: - #next: v560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j506 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j506 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a507 
=== Usages ===
v642 v643 
=== Predecessor ===
v560 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a507 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a235 
=== Succesors ===
next: j508 
=== Usages ===
j509 
=== Predecessor ===
j506 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a235 #next: j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
result [v12|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v607 
=== Succesors ===
next: j509 
=== Usages ===
j510 j521 
=== Predecessor ===
a507 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v607 #next: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j509 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a507 
=== Succesors ===
next: v513 
=== Usages ===
j510 v514 
=== Predecessor ===
j508 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a507 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j508 
y: j509 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j508 y: j509  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
x: j510 
y: j399 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j510 y: j399  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i107 
y: i26 
=== Succesors ===
=== Usages ===
i107 i107 i107 i107 i107 i107 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i107 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
j509 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v512 #falseSuccessor: v511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j509 
y: j249 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j509 y: j249  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v519 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 5
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i546 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i546  <|@  <|@
f <@~|@floating>@ <|@
tid j521 <|@
result v58|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j508 
y: i377 
=== Succesors ===
=== Usages ===
j543 v645 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j508 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
result [v58|QWORD[*] + v31|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j521 
index: j376 
=== Succesors ===
=== Usages ===
i546 i547 v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j521 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
=== Succesors ===
next: v525 
=== Usages ===
v553 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i546 
y: i413 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i546 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v553 
=== Succesors ===
trueSuccessor: v524 
falseSuccessor: v522 
=== Usages ===
=== Predecessor ===
i546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v553 #trueSuccessor: v524 #falseSuccessor: v522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 4
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i547 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
=== Succesors ===
next: v530 
=== Usages ===
v554 
=== Predecessor ===
v526 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i547 
y: i352 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i547 y: i352  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v554 
=== Succesors ===
trueSuccessor: v529 
falseSuccessor: v527 
=== Usages ===
=== Predecessor ===
i547 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v554 #trueSuccessor: v529 #falseSuccessor: v527  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
value: i352 
stateAfter: - 
=== Succesors ===
next: j549 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - value: i352 stateAfter: - #next: j549  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
j549 v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j549 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: v535 
=== Usages ===
v532 j545 v644 
=== Predecessor ===
v548 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j549 
y: j249 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j549 y: j249  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [139649764368384 - 36168446783332351] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j521 
y: j376 
=== Succesors ===
=== Usages ===
v539 v551 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j521 y: j376  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v532 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v533 
=== Usages ===
=== Predecessor ===
j549 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v532 #trueSuccessor: v534 #falseSuccessor: v533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j543 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j543 #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j550 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j550  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j506 
index: - 
=== Succesors ===
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j550 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
=== Succesors ===
next: v551 
=== Usages ===
v644 
=== Predecessor ===
v533 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
result [v62|QWORD + v60|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j550 
index: j549 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j550 index: j549  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
value: j543 
stateAfter: - 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
j550 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - value: j543 stateAfter: - #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j549 
y: j343 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j549 y: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
value: j545 
stateAfter: - 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - value: j545 stateAfter: - #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 2
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v103 v104 
=== Succesors ===
next: j569 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v103 v104 #next: j569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j569 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j578 
=== Usages ===
j570 
=== Predecessor ===
v102 >@ <|@
instruction <@ClockTime|@jdk.graal.compiler.nodes.ClockTimeNode>@ #next: j578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j578 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
=== Succesors ===
next: v580 
=== Usages ===
j572 j576 
=== Predecessor ===
j569 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
=== Inputs ===
x: j569 
y: j568 
=== Succesors ===
=== Usages ===
j572 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j569 y: j568  <|@  <|@
f <@~|@floating>@ <|@
tid j572 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
=== Inputs ===
x: j570 
y: j578 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j570 y: j578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: j572 
stateAfter: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
j578 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: j572 stateAfter: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid i575 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j576 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j576 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: i64
=== Inputs ===
x: j578 
y: i575 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j578 y: i575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
lastLocationAccess: - 
value: j576 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v599 lastLocationAccess: - value: j576 stateAfter: - #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i107 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x5abf1394]: UnreachedCode@5[HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>, 22]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
result int[-61971|0xffffffffffff0ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -61971
stableDimension: 0
stamp: i32 [-61971]
stampKind: i32
value: int[-61971|0xffffffffffff0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result int[-40219|0xffffffffffff62e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -40219
stableDimension: 0
stamp: i32 [-40219]
stampKind: i32
value: int[-40219|0xffffffffffff62e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i250 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32 [-61971 - -40219] bits:1...10xx0xxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v246 
values: i254 i256 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v246 values: i254 i256  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v246 
values: j249 j257 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v246 values: j249 j257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v253 v255 
=== Succesors ===
next: v252 
=== Usages ===
i250 j251 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v253 v255 #next: v252  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i250 
speculation: j251 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i250 speculation: j251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  146  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  146  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[12, 18[[144, 146[[344, 346[[448, 454[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[12, 14[[448, 450[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v74|q [0, 6[[142, 144[[158, 160[[236, 238[[342, 344[[358, 360[[436, 438[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 128[[132, 442[[470, 481[[482, 493[6 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 128[[132, 442[[470, 481[[482, 493[8 MustHaveRegister 44 MustHaveRegister 50 MustHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 254 MustHaveRegister 306 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 384 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 411 LiveAtLoopEnd 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [10, 128[[132, 244[[470, 474[[482, 493[10 MustHaveRegister 38 MustHaveRegister 56 MustHaveRegister 92 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|q [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|q [18, 459[18 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [24, 462[24 MustHaveRegister 32 MustHaveRegister 456 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [26, 466[26 MustHaveRegister 34 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [42, 48[42 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|d [48, 128[[132, 442[48 MustHaveRegister 50 MustHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 254 MustHaveRegister 306 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 384 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 411 LiveAtLoopEnd 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [50, 90[[132, 152[50 MustHaveRegister 52 MustHaveRegister 56 MustHaveRegister 90 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [64, 84[64 MustHaveRegister 66 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [66, 72[66 MustHaveRegister 68 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v13|d [140, 149[140 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q rax|d [146, 151[146 MustHaveRegister 148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v14|q [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|q [88, 128[[152, 180[90 MustHaveRegister 92 MustHaveRegister 166 MustHaveRegister 172 ShouldHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [104, 112[104 MustHaveRegister 106 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [110, 122[110 MustHaveRegister 114 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v23|d [112, 120[[156, 158[112 MustHaveRegister 120 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v21|q [166, 168[166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [170, 172[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|q [172, 176[172 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [174, 442[174 MustHaveRegister 188 MustHaveRegister 206 MustHaveRegister 214 MustHaveRegister 218 ShouldHaveRegister 388 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 406 MustHaveRegister 411 LiveAtLoopEnd 414 MustHaveRegister 418 ShouldHaveRegister 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v33|q [186, 190[[202, 208[[212, 218[186 MustHaveRegister 188 MustHaveRegister 206 MustHaveRegister 214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [216, 228[216 MustHaveRegister 220 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v32|q [218, 226[[234, 236[218 MustHaveRegister 226 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v2|d [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v57|d [248, 374[[474, 481[250 MustHaveRegister 260 MustHaveRegister 296 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [254, 294[[332, 352[254 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister 294 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [268, 288[268 MustHaveRegister 270 MustHaveRegister 278 MustHaveRegister 280 MustHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [270, 276[270 MustHaveRegister 272 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v40|d [340, 349[340 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q rax|d [346, 351[346 MustHaveRegister 348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v41|q [288, 291[288 MustHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v46|q [292, 332[[352, 380[294 MustHaveRegister 296 MustHaveRegister 366 MustHaveRegister 372 ShouldHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [308, 316[308 MustHaveRegister 310 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [314, 326[314 MustHaveRegister 318 MustHaveRegister 324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v49|d [316, 324[[356, 358[316 MustHaveRegister 324 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v47|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [370, 372[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v55|q [372, 376[372 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v39|d [374, 393[[394, 397[[398, 401[[402, 411[[412, 433[[434, 441[374 MustHaveRegister 392 ShouldHaveRegister 396 ShouldHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister 432 ShouldHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v59|q [386, 390[[402, 408[[412, 418[386 MustHaveRegister 388 MustHaveRegister 406 MustHaveRegister 414 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [416, 428[416 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v58|q [418, 426[[434, 436[418 MustHaveRegister 426 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [424, 426[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v64|q [452, 454[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v65|q [454, 458[454 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [456, 464[456 MustHaveRegister 460 ShouldHaveRegister 464 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v66|q [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q v68|q [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v67|q [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [486, 488[488 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [486, 490[490 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [338, 342[338 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [138, 142[138 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[12, 18[[144, 146[[344, 346[[448, 454[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[12, 14[[448, 450[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v74|q [0, 6[[142, 144[[158, 160[[236, 238[[342, 344[[358, 360[[436, 438[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 128[[132, 442[[470, 481[[482, 493[6 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 128[[132, 442[[470, 481[[482, 493[8 MustHaveRegister 44 MustHaveRegister 50 MustHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 254 MustHaveRegister 306 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 384 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 411 LiveAtLoopEnd 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 128[[132, 244[[470, 474[[482, 493[10 MustHaveRegister 38 MustHaveRegister 56 MustHaveRegister 92 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q v3|q [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q v4|q [18, 459[18 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 462[24 MustHaveRegister 32 MustHaveRegister 456 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [26, 466[26 MustHaveRegister 34 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d -1 [42, 48[42 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|d [48, 128[[132, 442[48 MustHaveRegister 50 MustHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 254 MustHaveRegister 306 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 384 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 411 LiveAtLoopEnd 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [50, 90[[132, 152[50 MustHaveRegister 52 MustHaveRegister 56 MustHaveRegister 90 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [64, 84[64 MustHaveRegister 66 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [66, 72[66 MustHaveRegister 68 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q v13|d [140, 149[140 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|d [146, 151[146 MustHaveRegister 148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v14|q [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v20|q [88, 128[[152, 180[90 MustHaveRegister 92 MustHaveRegister 166 MustHaveRegister 172 ShouldHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [104, 112[104 MustHaveRegister 106 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdi|q]" v24|q -1 [110, 122[110 MustHaveRegister 114 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v23|d [112, 120[[156, 158[112 MustHaveRegister 120 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rbp|q]" v26|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v21|q [166, 168[166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [170, 172[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v29|q [172, 176[172 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [174, 442[174 MustHaveRegister 188 MustHaveRegister 206 MustHaveRegister 214 MustHaveRegister 218 ShouldHaveRegister 388 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 406 MustHaveRegister 411 LiveAtLoopEnd 414 MustHaveRegister 418 ShouldHaveRegister 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v33|q [186, 190[[202, 208[[212, 218[186 MustHaveRegister 188 MustHaveRegister 206 MustHaveRegister 214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [216, 228[216 MustHaveRegister 220 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v32|q [218, 226[[234, 236[218 MustHaveRegister 226 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbp|q]" v36|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d v2|d [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v57|d [248, 374[[474, 481[250 MustHaveRegister 260 MustHaveRegister 296 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d -1 [254, 294[[332, 352[254 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister 294 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [268, 288[268 MustHaveRegister 270 MustHaveRegister 278 MustHaveRegister 280 MustHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [270, 276[270 MustHaveRegister 272 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r13|q]" v43|q v40|d [340, 349[340 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|d [346, 351[346 MustHaveRegister 348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v41|q [288, 291[288 MustHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [292, 332[[352, 380[294 MustHaveRegister 296 MustHaveRegister 366 MustHaveRegister 372 ShouldHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rsi|d]" v49|d -1 [308, 316[308 MustHaveRegister 310 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbp|q]" v50|q -1 [314, 326[314 MustHaveRegister 318 MustHaveRegister 324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v49|d [316, 324[[356, 358[316 MustHaveRegister 324 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r13|q]" v52|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rsi|d]" v54|d v47|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [370, 372[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v55|q [372, 376[372 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v39|d [374, 393[[394, 397[[398, 401[[402, 411[[412, 433[[434, 441[374 MustHaveRegister 392 ShouldHaveRegister 396 ShouldHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister 432 ShouldHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v59|q [386, 390[[402, 408[[412, 418[386 MustHaveRegister 388 MustHaveRegister 406 MustHaveRegister 414 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [416, 428[416 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q v58|q [418, 426[[434, 436[418 MustHaveRegister 426 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rbp|q]" v62|q -1 [424, 426[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r10|q]" v64|q -1 [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q v64|q [452, 454[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q v65|q [454, 458[454 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[r11|q]" v67|q -1 [456, 464[456 MustHaveRegister 460 ShouldHaveRegister 464 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q v66|q [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[r10|q]" v69|q v68|q [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v67|q [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [486, 488[488 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r9|q]" v72|q -1 [486, 490[490 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [338, 342[338 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [138, 142[138 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  146  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[12, 18[[144, 146[[344, 346[[448, 454[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[12, 14[[448, 450[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v74|q [0, 6[[142, 144[[158, 160[[236, 238[[342, 344[[358, 360[[436, 438[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 128[[132, 442[[470, 481[[482, 493[6 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 128[[132, 442[[470, 481[[482, 493[8 MustHaveRegister 44 MustHaveRegister 50 MustHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 254 MustHaveRegister 306 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 384 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 411 LiveAtLoopEnd 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 128[[132, 244[[470, 474[[482, 493[10 MustHaveRegister 38 MustHaveRegister 56 MustHaveRegister 92 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q v3|q [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q v4|q [18, 459[18 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 462[24 MustHaveRegister 32 MustHaveRegister 456 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [26, 466[26 MustHaveRegister 34 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d -1 [42, 48[42 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|d [48, 128[[132, 442[48 MustHaveRegister 50 MustHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 254 MustHaveRegister 306 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 384 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 411 LiveAtLoopEnd 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [50, 90[[132, 152[50 MustHaveRegister 52 MustHaveRegister 56 MustHaveRegister 90 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [64, 84[64 MustHaveRegister 66 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [66, 72[66 MustHaveRegister 68 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q v13|d [140, 149[140 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|d [146, 151[146 MustHaveRegister 148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v14|q [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v20|q [88, 128[[152, 180[90 MustHaveRegister 92 MustHaveRegister 166 MustHaveRegister 172 ShouldHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [104, 112[104 MustHaveRegister 106 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdi|q]" v24|q -1 [110, 122[110 MustHaveRegister 114 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v23|d [112, 120[[156, 158[112 MustHaveRegister 120 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rbp|q]" v26|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v21|q [166, 168[166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [170, 172[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v29|q [172, 176[172 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [174, 442[174 MustHaveRegister 188 MustHaveRegister 206 MustHaveRegister 214 MustHaveRegister 218 ShouldHaveRegister 388 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 406 MustHaveRegister 411 LiveAtLoopEnd 414 MustHaveRegister 418 ShouldHaveRegister 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v33|q [186, 190[[202, 208[[212, 218[186 MustHaveRegister 188 MustHaveRegister 206 MustHaveRegister 214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [216, 228[216 MustHaveRegister 220 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v32|q [218, 226[[234, 236[218 MustHaveRegister 226 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbp|q]" v36|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d v2|d [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v57|d [248, 374[[474, 481[250 MustHaveRegister 260 MustHaveRegister 296 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d -1 [254, 294[[332, 352[254 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister 294 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [268, 288[268 MustHaveRegister 270 MustHaveRegister 278 MustHaveRegister 280 MustHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [270, 276[270 MustHaveRegister 272 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r13|q]" v43|q v40|d [340, 349[340 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|d [346, 351[346 MustHaveRegister 348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v41|q [288, 291[288 MustHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [292, 332[[352, 380[294 MustHaveRegister 296 MustHaveRegister 366 MustHaveRegister 372 ShouldHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rsi|d]" v49|d -1 [308, 316[308 MustHaveRegister 310 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbp|q]" v50|q -1 [314, 326[314 MustHaveRegister 318 MustHaveRegister 324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v49|d [316, 324[[356, 358[316 MustHaveRegister 324 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r13|q]" v52|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rsi|d]" v54|d v47|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [370, 372[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v55|q [372, 376[372 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v39|d [374, 393[[394, 397[[398, 401[[402, 411[[412, 433[[434, 441[374 MustHaveRegister 392 ShouldHaveRegister 396 ShouldHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister 432 ShouldHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v59|q [386, 390[[402, 408[[412, 418[386 MustHaveRegister 388 MustHaveRegister 406 MustHaveRegister 414 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [416, 428[416 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q v58|q [418, 426[[434, 436[418 MustHaveRegister 426 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rbp|q]" v62|q -1 [424, 426[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r10|q]" v64|q -1 [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q v64|q [452, 454[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q v65|q [454, 458[454 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[r11|q]" v67|q -1 [456, 464[456 MustHaveRegister 460 ShouldHaveRegister 464 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q v66|q [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[r10|q]" v69|q v68|q [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v67|q [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [486, 488[488 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r9|q]" v72|q -1 [486, 490[490 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [338, 342[338 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [138, 142[138 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  146  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[v38|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[v57|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[v57|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[v57|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[v57|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[v57|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[v57|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[int[-40219|0xffffffffffff62e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction JUMP ~[int[-61971|0xffffffffffff0ded], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[12, 18[[144, 146[[344, 346[[448, 454[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[[12, 14[[448, 450[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v74|q [0, 6[[142, 144[[158, 160[[236, 238[[342, 344[[358, 360[[436, 438[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 128[[132, 442[[470, 481[[482, 493[6 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [8, 128[[132, 442[[470, 481[[482, 493[8 MustHaveRegister 44 MustHaveRegister 50 MustHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 254 MustHaveRegister 306 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 384 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 411 LiveAtLoopEnd 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 128[[132, 244[[470, 474[[482, 493[10 MustHaveRegister 38 MustHaveRegister 56 MustHaveRegister 92 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [14, 16[14 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q v3|q [16, 18[16 MustHaveRegister 18 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r8|q]" v5|q v4|q [18, 459[18 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [20, 28[20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rax|d]" v7|d -1 [22, 30[22 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r9|d]" v8|d -1 [24, 462[24 MustHaveRegister 32 MustHaveRegister 456 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [26, 466[26 MustHaveRegister 34 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [28, 36[28 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d -1 [42, 48[42 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|d [48, 128[[132, 442[48 MustHaveRegister 50 MustHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 254 MustHaveRegister 306 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 384 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 411 LiveAtLoopEnd 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [50, 90[[132, 152[50 MustHaveRegister 52 MustHaveRegister 56 MustHaveRegister 90 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [64, 84[64 MustHaveRegister 66 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q -1 [66, 72[66 MustHaveRegister 68 MustHaveRegister 72 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q v13|d [140, 149[140 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|d [146, 151[146 MustHaveRegister 148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q v14|q [84, 87[84 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v20|q [88, 128[[152, 180[90 MustHaveRegister 92 MustHaveRegister 166 MustHaveRegister 172 ShouldHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [102, 104[102 MustHaveRegister 104 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [104, 112[104 MustHaveRegister 106 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdi|q]" v24|q -1 [110, 122[110 MustHaveRegister 114 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v23|d [112, 120[[156, 158[112 MustHaveRegister 120 MustHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rbp|q]" v26|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v21|q [166, 168[166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [170, 172[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v29|q [172, 176[172 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [174, 442[174 MustHaveRegister 188 MustHaveRegister 206 MustHaveRegister 214 MustHaveRegister 218 ShouldHaveRegister 388 MustHaveRegister 393 LiveAtLoopEnd 397 LiveAtLoopEnd 401 LiveAtLoopEnd 406 MustHaveRegister 411 LiveAtLoopEnd 414 MustHaveRegister 418 ShouldHaveRegister 433 LiveAtLoopEnd 441 LiveAtLoopEnd  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v33|q [186, 190[[202, 208[[212, 218[186 MustHaveRegister 188 MustHaveRegister 206 MustHaveRegister 214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [216, 228[216 MustHaveRegister 220 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rsi|q]" v35|q v32|q [218, 226[[234, 236[218 MustHaveRegister 226 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rbp|q]" v36|q -1 [224, 226[224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rcx|d]" v38|d v2|d [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rcx|d]" v39|d v57|d [248, 374[[474, 481[250 MustHaveRegister 260 MustHaveRegister 296 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[rbp|d]" v40|d -1 [254, 294[[332, 352[254 MustHaveRegister 256 MustHaveRegister 260 MustHaveRegister 294 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q -1 [268, 288[268 MustHaveRegister 270 MustHaveRegister 278 MustHaveRegister 280 MustHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [270, 276[270 MustHaveRegister 272 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r13|q]" v43|q v40|d [340, 349[340 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|d [346, 351[346 MustHaveRegister 348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v41|q [288, 291[288 MustHaveRegister 290 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [292, 332[[352, 380[294 MustHaveRegister 296 MustHaveRegister 366 MustHaveRegister 372 ShouldHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rsi|d]" v49|d -1 [308, 316[308 MustHaveRegister 310 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbp|q]" v50|q -1 [314, 326[314 MustHaveRegister 318 MustHaveRegister 324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v49|d [316, 324[[356, 358[316 MustHaveRegister 324 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r13|q]" v52|q -1 [322, 324[322 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rsi|d]" v54|d v47|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [370, 372[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v55|q [372, 376[372 MustHaveRegister 376 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rcx|d]" v57|d v39|d [374, 393[[394, 397[[398, 401[[402, 411[[412, 433[[434, 441[374 MustHaveRegister 392 ShouldHaveRegister 396 ShouldHaveRegister 400 ShouldHaveRegister 410 ShouldHaveRegister 432 ShouldHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v59|q [386, 390[[402, 408[[412, 418[386 MustHaveRegister 388 MustHaveRegister 406 MustHaveRegister 414 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q -1 [416, 428[416 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rsi|q]" v61|q v58|q [418, 426[[434, 436[418 MustHaveRegister 426 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rbp|q]" v62|q -1 [424, 426[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [428, 430[428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[r10|q]" v64|q -1 [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[r10|q]" v65|q v64|q [452, 454[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q v65|q [454, 458[454 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[r11|q]" v67|q -1 [456, 464[456 MustHaveRegister 460 ShouldHaveRegister 464 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q v66|q [458, 460[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[r10|q]" v69|q v68|q [460, 462[460 MustHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v67|q [464, 466[464 MustHaveRegister 466 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[r8|d]" v71|d -1 [486, 488[488 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r9|q]" v72|q -1 [486, 490[490 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [338, 342[338 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [138, 142[138 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  146  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [v47|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [v71|DWORD, v72|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction v3|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction v4|QWORD = SHL v3|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction v5|QWORD = OR (x: v4|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction v7|DWORD[_] = MOV [v6|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction v8|DWORD[_] = MOV [v6|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction v9|DWORD[_] = MOV [v6|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction v10|DWORD[_] = MOV [v6|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [v7|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [v8|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [v9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [v10|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction v11|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v11|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v13|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: v13|DWORD[_], y: v13|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v13|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v14|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction v15|QWORD = LEA [v14|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: v15|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: v15|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [v14|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction v20|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [v21|QWORD[.] + 16], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [v21|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction v22|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction v23|DWORD[_] = MOV [v22|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v23|DWORD[_], y: v23|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v24|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v24|QWORD, y: v24|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v26|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v26|QWORD + v24|QWORD * 1 - 8], y: v25|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v27|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: v27|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  146  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v17|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v18|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction v28|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v28|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction v29|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction v30|QWORD[*] = XOR (x: v29|QWORD[.+], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction v31|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH v30|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: v21|QWORD[.], y: v21|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction v33|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction v32|QWORD[*] = SHR v33|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [v32|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [v32|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction v35|QWORD[*] = ADD (x: v32|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction v38|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: v39|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction v40|DWORD[_] = MOV [v12|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v40|DWORD[_], y: v40|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v40|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v41|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction v42|QWORD = LEA [v41|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v42|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: v42|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[v41|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [v41|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [v41|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction v46|QWORD[.] = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [v47|QWORD[.] + 16], y: v40|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [v47|QWORD[.] + 12], y: v39|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction v48|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction v49|DWORD[_] = MOV [v48|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: v49|DWORD[_], y: v49|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction v50|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: v50|QWORD, y: v50|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction v52|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [v52|QWORD + v50|QWORD * 1 - 8], y: v51|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction v53|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: v53|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  346  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} v1|DWORD v43|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
vobject:Towers$TowersDisk:0{size=v39|DWORD,next=Object[null]} LTowers$TowersDisk; v39|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v44|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction v54|DWORD[_] = COMPRESSPOINTER (input: v47|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [v12|QWORD[.] + v1|DWORD * 4 + 16], y: v54|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction v55|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v56|QWORD[*] = XOR (x: v55|QWORD[.+], y: v47|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v57|DWORD = DEC v39|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH v56|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: v47|QWORD[.], y: v47|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction v59|QWORD[.+] = LEA [v12|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction v58|QWORD[*] = SHR v59|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v31|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [v58|QWORD[*] + v31|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction v60|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction v61|QWORD[*] = ADD (x: v58|QWORD[*], y: v31|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: v60|QWORD, y: v60|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction v62|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [v62|QWORD + v60|QWORD * 1 - 8], y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction v63|QWORD = LEA [v60|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: v63|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction v64|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction v65|QWORD = SHL v64|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction v66|QWORD = OR (x: v65|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction v67|QWORD = MOV [v8|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v5|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [v8|DWORD[_] * 8 + 30136], y: v69|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction v70|QWORD = INC v67|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [v9|DWORD[_] * 8 + 30136], y: v70|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v39|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v71|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v72|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4577509833120863556
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594332442004131146
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r9:0, r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr   14  <|@ instruction rsi|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   22  <|@ instruction rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   24  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   26  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   30  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 30136] <|@ <|@
      nr   32  <|@ instruction BLACKHOLE [r9|DWORD[_] * 8 + 30136] <|@ <|@
      nr   34  <|@ instruction BLACKHOLE [rbx|DWORD[_] * 8 + 30136] <|@ <|@
      nr   36  <|@ instruction BLACKHOLE [rsi|DWORD[_] * 8 + 30136] <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r9:0, r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606482623047516809
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   66  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   76  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000] <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622939383400328724
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  270  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  278  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  280  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  282  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  284  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  286  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  294  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  388  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  406  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  310  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ instruction TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction r13|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  324  <|@ instruction MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  340  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  348  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD r13|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC <|@ <|@
      nr  450  <|@ instruction r10|QWORD = MOV rdx|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction r10|QWORD = SHL r10|QWORD y: 32 size: QWORD <|@ <|@
      nr  454  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction r11|QWORD = INC r11|QWORD size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  140  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  148  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} r11|DWORD rbp|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5] // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] r11|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 1156] y: -60691 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] r11|DWORD - rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded] // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85be03000048896c24104c8bd6448bda0f318bf248c1e6204c8bc64c0bc048beaddeaddeaddeadde8b467c448b4e708b5e748b767885c90f8c3e020000418b7210443b1cf50c0000000f831a0300008bd648c1e203428b7c9a1085ff0f840d0000003b0cfd0c0000000f8d45030000498bb7b8010000488d4618493b87c80100000f87aa020000498987b80100000f18861801000048c70601000000c74608addeaddec7460c0000000048c7461000000000488bc689781089480c41807f40000f85fc010000488bf048c1ee034289749a104a8d749a104833f048bf002099be027f000048f7c60000c0ff0f841c0000004885c00f84130000004a8d749a1048c1ee09803c3e020f85eb010000ffc90f1f8400000000006666669085c90f8c58010000428b6c9a1085ed0f840d0000003b0ced0c0000000f8d54020000498bb7b8010000488d4618493b87c80100000f87ed000000498987b80100000f18861801000048c70601000000c74608addeaddec7460c0000000048c7461000000000488bc689681089480c41807f40000f8578000000488bf048c1ee034289749a104a8d749a104833f0ffc948f7c60000c0ff0f8464ffffff4885c00f845bffffff4a8d749a1048c1ee09803c3e020f8448fffffff083042400803c3e000f8439ffffffc6043e00498b47484803f74885c00f847b000000498b6f5848897405f8488d70f849897748e90fffffff4a8d749a108b3685f60f8479ffffff498b6f2848c1e6034885ed0f843b0000004d8b6f384989742df8488d75f849897728e952ffffff48beaddeaddeaddeadde448bed49c1e503e8000000000f1f8400000000008500e91cffffffe800000000e923ffffffe800000000e9a0feffff0f31448bd249c1e2204c0bd04e8b1ccdb87500004d2bd04d03d34e8914cdb875000049ffc34c891cddb8750000488b6c24104883c418493ba7500400000f8715010000c5f877c34a8d749a108b3685f60f84f5fdffff498b7f2848c1e6034885ff0f8473000000498b6f384889743df8488d77f849897728e9cefdfffff083042400803c3e000f8406feffffc6043e00498b47484803f74885c00f8444000000498b6f5848897405f8488d70f849897748e9dcfdffff48beaddeaddeaddeadde8bef48c1e503e8000000000f1f8400000000008500e960fdffffe800000000e967fdffffe800000000e9a4fdffff49c7c10000000041b8e562ffff458987840400004d898f90040000e8000000000f1f84000000000041c78784040000ed12ffff49c7879004000014000000e8000000000f1f84000000000049c7c11400000041b8ed0dffffebb348896c2410e800000000e933fcfffff4488d0dd7feffff49898f68040000e9e5fbfffff441c78784040000f573ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f34feff49c7879004000000000000e8000000000f1f84000000000041c787840400008fcafeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 69 12 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 71 14 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 73 16 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 77 18 r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 83 20 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 83 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 93 22 rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD  <||@
  Comment 96 24 r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD  <||@
  Comment 100 26 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 103 28 rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD  <||@
  Comment 106 30 BLACKHOLE [rax|DWORD[_] * 8 + 30136]  <||@
  Comment 106 32 BLACKHOLE [r9|DWORD[_] * 8 + 30136]  <||@
  Comment 106 34 BLACKHOLE [rbx|DWORD[_] * 8 + 30136]  <||@
  Comment 106 36 BLACKHOLE [rsi|DWORD[_] * 8 + 30136]  <||@
  Comment 106 38 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 114 block B2 null  <||@
  Comment 114 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 42 rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 118 44 CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0]  <||@
  Comment 118 [rbx:0, rsi:0, r9:0, r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |r11|DWORD  |rcx|DWORD  |-   <||@
  Comment 118 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 132 block B3 null  <||@
  Comment 132 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 48 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 138 50 rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 143 52 TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 151 block B5 null  <||@
  Comment 151 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 151 56 CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD  <||@
  Comment 164 block B7 null  <||@
  Comment 164 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 164 64 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 171 66 rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 175 68 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 188 block B9 null  <||@
  Comment 188 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 188 72 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 195 74 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 202 76 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 209 78 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 209 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 216 80 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 223 82 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 231 84 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 231 -1 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 234 86 JUMP ~[] destination: B9 -> B10  <||@
  Comment 234 block B10 null  <||@
  Comment 234 88 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 234 90 MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD  <||@
  Comment 237 92 MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 240 94 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null  <||@
  Comment 251 block B17 null  <||@
  Comment 251 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 251 166 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 258 168 MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 263 170 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 268 172 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 271 174 rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 281 176 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD  <||@
  Comment 294 block B19 null  <||@
  Comment 294 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 294 180 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 303 block B21 null  <||@
  Comment 303 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 184 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 308 186 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 312 188 CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null  <||@
  Comment 322 block B28 null  <||@
  Comment 322 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 322 244 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 324 246 JUMP ~[] destination: B28 -> B29  <||@
  Comment 324 block B29 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 324 248 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 336 250 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD  <||@
  Comment 344 block B30 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 344 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 344 254 rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 349 256 TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 357 block B32 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 357 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 357 260 CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD  <||@
  Comment 370 block B34 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 370 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 370 268 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 377 270 rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 381 272 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 394 block B36 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 394 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 276 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 401 278 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 408 280 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 415 282 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 415 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 422 284 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 429 286 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 437 288 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 437 -1 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 440 290 JUMP ~[] destination: B36 -> B37  <||@
  Comment 440 block B37 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 440 292 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 440 294 MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD  <||@
  Comment 443 296 MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 446 298 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null  <||@
  Comment 457 block B44 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 457 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 457 366 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 464 368 MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 469 370 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 474 372 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 477 374 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 479 376 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD  <||@
  Comment 492 block B46 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 492 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 380 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD  <||@
  Comment 501 block B48 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 501 382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 501 384 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 506 386 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 510 388 CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null  <||@
  Comment 520 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 520 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 520 404 MEMBAR barriers: 4  <||@
  Comment 525 406 CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null  <||@
  Comment 535 block B52 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 535 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 414 MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 539 416 rax|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 543 418 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD  <||@
  Comment 546 420 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 555 block B54 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 555 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 555 424 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 559 426 MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 564 428 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 568 430 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 572 432 JUMP ~[] destination: B54 -> B29  <||@
  Comment 577 block B39 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 577 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 577 306 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 582 308 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 584 310 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 592 block B41 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 592 312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 592 314 rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 596 316 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 600 318 TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD  <||@
  Comment 609 block B43 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 609 320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 609 322 r13|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 613 324 MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 618 326 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 622 328 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 626 330 JUMP ~[] destination: B43 -> B44  <||@
  Comment 631 block B35 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 631 336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 631 338 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 631 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 641 340 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 648 344 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16]  <||@
  Comment 648 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 653 [rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |r13|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 661 348 NULLCHECK [rax|QWORD[.]] state [bci:32, 16]  <||@
  Comment 661 [rax:0, rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |r13|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 661 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 663 350 JUMP ~[] destination: B35 -> B37  <||@
  Comment 668 block B42 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 668 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 668 360 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 668 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 673 362 JUMP ~[] destination: B42 -> B44  <||@
  Comment 678 block B53 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 678 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 678 436 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 678 438 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 678 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 683 440 JUMP ~[] destination: B53 -> B29  <||@
  Comment 688 block B56 null  <||@
  Comment 688 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 688 448 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 690 450 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 693 452 r10|QWORD = SHL r10|QWORD y: 32 size: QWORD  <||@
  Comment 697 454 r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 700 456 r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD  <||@
  Comment 708 458 r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD  <||@
  Comment 711 460 r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 714 462 MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD  <||@
  Comment 722 464 r11|QWORD = INC r11|QWORD size: QWORD  <||@
  Comment 725 466 MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD  <||@
  Comment 733 468 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 742 POLL_RETURN_FAR  <||@
  Comment 759 block B12 null  <||@
  Comment 759 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 759 102 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 764 104 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 766 106 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 774 block B14 null  <||@
  Comment 774 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 774 110 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 778 112 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 782 114 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 791 block B16 null  <||@
  Comment 791 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 791 118 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 795 120 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 800 122 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 804 124 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 808 126 JUMP ~[] destination: B16 -> B17  <||@
  Comment 813 block B23 null  <||@
  Comment 813 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 813 204 MEMBAR barriers: 4  <||@
  Comment 818 206 CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null  <||@
  Comment 828 block B25 null  <||@
  Comment 828 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 828 214 MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 832 216 rax|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 836 218 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD  <||@
  Comment 839 220 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD  <||@
  Comment 848 block B27 null  <||@
  Comment 848 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 848 224 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 852 226 MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 857 228 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 861 230 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 865 232 JUMP ~[] destination: B27 -> B28  <||@
  Comment 870 block B8 null  <||@
  Comment 870 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 870 138 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 870 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 880 140 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 886 144 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16]  <||@
  Comment 886 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 891 [rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |rbp|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 899 148 NULLCHECK [rax|QWORD[.]] state [bci:32, 16]  <||@
  Comment 899 [rax:0, rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |rbp|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 899 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 901 150 JUMP ~[] destination: B8 -> B10  <||@
  Comment 906 block B15 null  <||@
  Comment 906 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 906 160 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 906 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 911 162 JUMP ~[] destination: B15 -> B17  <||@
  Comment 916 block B26 null  <||@
  Comment 916 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 916 236 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 916 238 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 916 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 921 240 JUMP ~[] destination: B26 -> B28  <||@
  Comment 926 block B59 null  <||@
  Comment 926 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 926 -1 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 933 -1 r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5]  <||@
  Comment 939 472 JUMP ~[] destination: B59 -> B60  <||@
  Comment 939 block B60 null  <||@
  Comment 939 486 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 939 488 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 946 490 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 953 492 DEOPT info [bci:0]  <||@
  Comment 953 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 958 [r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |r11|DWORD  |rcx|DWORD  |-   <||@
  Comment 966 block B57 null  <||@
  Comment 966 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 966 476 MOV [r15|QWORD + 1156] y: -60691 size: DWORD  <||@
  Comment 977 478 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 988 480 DEOPT info [bci:2]  <||@
  Comment 988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 993 [r10:0]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 1001 block B58 null  <||@
  Comment 1001 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1001 -1 r9|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1008 -1 r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded]  <||@
  Comment 1014 484 JUMP ~[] destination: B58 -> B60  <||@
  Comment 1021 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1046 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1074 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1079 [rbx:0, rsi:0, r9:0, r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |r11|DWORD  |rcx|DWORD  |-   <||@
  Comment 1109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1114 [rax:0, rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |r13|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 1144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1149 [rax:0, rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |rbp|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 1157 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1157 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1163 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1163 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3765[Towers.buildTowerAt(int, int)]"
  method "HotSpotCompilation-3765[Towers.buildTowerAt(int, int)]"
  date 1714038101929
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02abb447a0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85c30804ff66669089842400c0feff4883ec189041817f20030000000f85be03000048896c24104c8bd6448bda0f318bf248c1e6204c8bc64c0bc048bed88c5e2e060000008b467c448b4e708b5e748b767885c90f8c3e020000418b7210443b1cf50c0000000f831a0300008bd648c1e203428b7c9a1085ff0f840d0000003b0cfd0c0000000f8d45030000498bb7b8010000488d4618493b87c80100000f87aa020000498987b80100000f18861801000048c70601000000c7460830790001c7460c0000000048c7461000000000488bc689781089480c41807f40000f85fc010000488bf048c1ee034289749a104a8d749a104833f048bf002099be027f000048f7c60000c0ff0f841c0000004885c00f84130000004a8d749a1048c1ee09803c3e020f85eb010000ffc90f1f8400000000006666669085c90f8c58010000428b6c9a1085ed0f840d0000003b0ced0c0000000f8d54020000498bb7b8010000488d4618493b87c80100000f87ed000000498987b80100000f18861801000048c70601000000c7460830790001c7460c0000000048c7461000000000488bc689681089480c41807f40000f8578000000488bf048c1ee034289749a104a8d749a104833f0ffc948f7c60000c0ff0f8464ffffff4885c00f845bffffff4a8d749a1048c1ee09803c3e020f8448fffffff083042400803c3e000f8439ffffffc6043e00498b47484803f74885c00f847b000000498b6f5848897405f8488d70f849897748e90fffffff4a8d749a108b3685f60f8479ffffff498b6f2848c1e6034885ed0f843b0000004d8b6f384989742df8488d75f849897728e952ffffff48be30790040027f0000448bed49c1e503e853ab18ff0f1f8400000000008500e91cffffffe8bf2f18ffe923ffffffe8b55a18ffe9a0feffff0f31448bd249c1e2204c0bd04e8b1ccdb87500004d2bd04d03d34e8914cdb875000049ffc34c891cddb8750000488b6c24104883c418493ba7500400000f8715010000c5f877c34a8d749a108b3685f60f84f5fdffff498b7f2848c1e6034885ff0f8473000000498b6f384889743df8488d77f849897728e9cefdfffff083042400803c3e000f8406feffffc6043e00498b47484803f74885c00f8444000000498b6f5848897405f8488d70f849897748e9dcfdffff48be30790040027f00008bef48c1e503e865aa18ff0f1f8400000000008500e960fdffffe8d12e18ffe967fdffffe8c75918ffe9a4fdffff49c7c10000000041b8e562ffff458987840400004d898f90040000e81c6604ff0f1f84000000000041c78784040000ed12ffff49c7879004000014000000e8f96504ff0f1f84000000000049c7c11400000041b8ed0dffffebb348896c2410e87e6602ffe933fcfffff4488d0dd7feffff49898f68040000e9457404fff441c78784040000f573ffff49c7879004000000000000e8a36504ff0f1f84000000000041c787840400008f34feff49c7879004000000000000e8806504ff0f1f84000000000041c787840400008fcafeff49c7879004000000000000e85d6504ff0f1f840000000000e8d62a18fff4e8f06204fff4f4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1b86363e slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 8 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 69 12 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 71 14 rsi|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 73 16 rsi|QWORD = SHL rsi|QWORD y: 32 size: QWORD  <||@
  Comment 77 18 r8|QWORD = OR (x: rsi|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 83 20 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 83 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 93 22 rax|DWORD[_] = MOV [rsi|QWORD[.] + 124] size: DWORD  <||@
  Comment 96 24 r9|DWORD[_] = MOV [rsi|QWORD[.] + 112] size: DWORD  <||@
  Comment 100 26 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 116] size: DWORD  <||@
  Comment 103 28 rsi|DWORD[_] = MOV [rsi|QWORD[.] + 120] size: DWORD  <||@
  Comment 106 30 BLACKHOLE [rax|DWORD[_] * 8 + 30136]  <||@
  Comment 106 32 BLACKHOLE [r9|DWORD[_] * 8 + 30136]  <||@
  Comment 106 34 BLACKHOLE [rbx|DWORD[_] * 8 + 30136]  <||@
  Comment 106 36 BLACKHOLE [rsi|DWORD[_] * 8 + 30136]  <||@
  Comment 106 38 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 114 block B2 null  <||@
  Comment 114 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 42 rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 118 44 CMPBRANCH (x: r11|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0]  <||@
  Comment 118 [rbx:0, rsi:0, r9:0, r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |r11|DWORD  |rcx|DWORD  |-   <||@
  Comment 118 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 132 block B3 null  <||@
  Comment 132 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 48 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 138 50 rdi|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 143 52 TESTBRANCH (x: rdi|DWORD[_], y: rdi|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 151 block B5 null  <||@
  Comment 151 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 151 56 CMPBRANCH (x: rcx|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD  <||@
  Comment 164 block B7 null  <||@
  Comment 164 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 164 64 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 171 66 rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 175 68 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 188 block B9 null  <||@
  Comment 188 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 188 72 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 195 74 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 202 76 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 209 78 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 209 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 216 80 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 223 82 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 231 84 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 231 -1 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 234 86 JUMP ~[] destination: B9 -> B10  <||@
  Comment 234 block B10 null  <||@
  Comment 234 88 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 234 90 MOV (x: [rax|QWORD[.] + 16], y: rdi|DWORD[_]) size: DWORD  <||@
  Comment 237 92 MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 240 94 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null  <||@
  Comment 251 block B17 null  <||@
  Comment 251 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 251 166 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 258 168 MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 263 170 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 268 172 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 271 174 rdi|QWORD = MOVE input: long[139649764368384|0x7f02be992000]  <||@
  Comment 281 176 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD  <||@
  Comment 294 block B19 null  <||@
  Comment 294 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 294 180 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 303 block B21 null  <||@
  Comment 303 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 303 184 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 308 186 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 312 188 CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null  <||@
  Comment 322 block B28 null  <||@
  Comment 322 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 322 244 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 324 246 JUMP ~[] destination: B28 -> B29  <||@
  Comment 324 block B29 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 324 248 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 336 250 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD  <||@
  Comment 344 block B30 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 344 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 344 254 rbp|DWORD[_] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 349 256 TESTBRANCH (x: rbp|DWORD[_], y: rbp|DWORD[_]) trueDestinationProbability: 0.011813859674398502 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 357 block B32 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 357 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 357 260 CMPBRANCH (x: rcx|DWORD, y: [rbp|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD  <||@
  Comment 370 block B34 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 370 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 370 268 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 377 270 rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 381 272 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 394 block B36 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 394 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 394 276 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 401 278 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 408 280 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 415 282 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 415 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 422 284 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 429 286 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 437 288 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 437 -1 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 440 290 JUMP ~[] destination: B36 -> B37  <||@
  Comment 440 block B37 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 440 292 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 440 294 MOV (x: [rax|QWORD[.] + 16], y: rbp|DWORD[_]) size: DWORD  <||@
  Comment 443 296 MOV (x: [rax|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 446 298 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null  <||@
  Comment 457 block B44 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 457 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 457 366 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 464 368 MOV (x: [rdx|QWORD[.] + r11|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 469 370 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 474 372 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 477 374 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 479 376 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD  <||@
  Comment 492 block B46 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 492 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 380 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD  <||@
  Comment 501 block B48 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 501 382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 501 384 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 506 386 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 510 388 CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null  <||@
  Comment 520 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 520 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 520 404 MEMBAR barriers: 4  <||@
  Comment 525 406 CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null  <||@
  Comment 535 block B52 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 535 412 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 414 MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 539 416 rax|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 543 418 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD  <||@
  Comment 546 420 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 555 block B54 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 555 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 555 424 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 559 426 MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 564 428 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 568 430 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 572 432 JUMP ~[] destination: B54 -> B29  <||@
  Comment 577 block B39 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 577 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 577 306 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 582 308 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 584 310 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 592 block B41 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 592 312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 592 314 rbp|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 596 316 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 600 318 TESTBRANCH (x: rbp|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD  <||@
  Comment 609 block B43 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 609 320 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 609 322 r13|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 613 324 MOV (x: [r13|QWORD + rbp|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 618 326 rsi|QWORD = LEA [rbp|QWORD - 8] size: QWORD  <||@
  Comment 622 328 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 626 330 JUMP ~[] destination: B43 -> B44  <||@
  Comment 631 block B35 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 631 336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 631 338 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 631 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 641 340 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 648 344 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16]  <||@
  Comment 648 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 653 [rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |r13|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 661 348 NULLCHECK [rax|QWORD[.]] state [bci:32, 16]  <||@
  Comment 661 [rax:0, rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |r13|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 661 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 663 350 JUMP ~[] destination: B35 -> B37  <||@
  Comment 668 block B42 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 668 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 668 360 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 668 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 673 362 JUMP ~[] destination: B42 -> B44  <||@
  Comment 678 block B53 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 678 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 678 436 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 678 438 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 678 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 683 440 JUMP ~[] destination: B53 -> B29  <||@
  Comment 688 block B56 null  <||@
  Comment 688 446 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 688 448 (highResult: rdx|DWORD, lowResult: rax|DWORD) = RDTSC  <||@
  Comment 690 450 r10|QWORD = MOV rdx|DWORD size: DWORD  <||@
  Comment 693 452 r10|QWORD = SHL r10|QWORD y: 32 size: QWORD  <||@
  Comment 697 454 r10|QWORD = OR (x: r10|QWORD, y: rax|DWORD) size: QWORD  <||@
  Comment 700 456 r11|QWORD = MOV [r9|DWORD[_] * 8 + 30136] size: QWORD  <||@
  Comment 708 458 r10|QWORD = SUB (x: r10|QWORD, ~y: r8|QWORD) size: QWORD  <||@
  Comment 711 460 r10|QWORD = ADD (x: r10|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 714 462 MOV (x: [r9|DWORD[_] * 8 + 30136], y: r10|QWORD) size: QWORD  <||@
  Comment 722 464 r11|QWORD = INC r11|QWORD size: QWORD  <||@
  Comment 725 466 MOV (x: [rbx|DWORD[_] * 8 + 30136], y: r11|QWORD) size: QWORD  <||@
  Comment 733 468 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 742 POLL_RETURN_FAR  <||@
  Comment 759 block B12 null  <||@
  Comment 759 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 759 102 rsi|QWORD[.+] = LEA [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 764 104 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 766 106 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 774 block B14 null  <||@
  Comment 774 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 774 110 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 778 112 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 782 114 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 791 block B16 null  <||@
  Comment 791 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 791 118 rbp|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 795 120 MOV (x: [rbp|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 800 122 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 804 124 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 808 126 JUMP ~[] destination: B16 -> B17  <||@
  Comment 813 block B23 null  <||@
  Comment 813 202 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 813 204 MEMBAR barriers: 4  <||@
  Comment 818 206 CMPCONSTBRANCH [rsi|QWORD[*] + rdi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null  <||@
  Comment 828 block B25 null  <||@
  Comment 828 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 828 214 MOVB [rsi|QWORD[*] + rdi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 832 216 rax|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 836 218 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rdi|QWORD) size: QWORD  <||@
  Comment 839 220 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD  <||@
  Comment 848 block B27 null  <||@
  Comment 848 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 848 224 rbp|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 852 226 MOV (x: [rbp|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 857 228 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 861 230 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 865 232 JUMP ~[] destination: B27 -> B28  <||@
  Comment 870 block B8 null  <||@
  Comment 870 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 870 138 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 870 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 880 140 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ec10883 encoding: base: 0 shift: 3  <||@
  Comment 886 144 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16]  <||@
  Comment 886 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f02aaccf580:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 891 [rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |rbp|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 899 148 NULLCHECK [rax|QWORD[.]] state [bci:32, 16]  <||@
  Comment 899 [rax:0, rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |rbp|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 899 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 901 150 JUMP ~[] destination: B8 -> B10  <||@
  Comment 906 block B15 null  <||@
  Comment 906 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 906 160 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 906 {Stub<write_barrier_pre(Object)void>@0x7f02aacc7a00:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 911 162 JUMP ~[] destination: B15 -> B17  <||@
  Comment 916 block B26 null  <||@
  Comment 916 234 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 916 236 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 916 238 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 916 {Stub<write_barrier_post(Word)void>@0x7f02aacca500:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 921 240 JUMP ~[] destination: B26 -> B28  <||@
  Comment 926 block B59 null  <||@
  Comment 926 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 926 -1 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 933 -1 r8|DWORD = MOVE input: int[-40219|0xffffffffffff62e5]  <||@
  Comment 939 472 JUMP ~[] destination: B59 -> B60  <||@
  Comment 939 block B60 null  <||@
  Comment 939 486 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 939 488 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 946 490 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 953 492 DEOPT info [bci:0]  <||@
  Comment 953 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 958 [r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |r11|DWORD  |rcx|DWORD  |-   <||@
  Comment 966 block B57 null  <||@
  Comment 966 474 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 966 476 MOV [r15|QWORD + 1156] y: -60691 size: DWORD  <||@
  Comment 977 478 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 988 480 DEOPT info [bci:2]  <||@
  Comment 988 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 993 [r10:0]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 1001 block B58 null  <||@
  Comment 1001 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1001 -1 r9|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1008 -1 r8|DWORD = MOVE input: int[-61971|0xffffffffffff0ded]  <||@
  Comment 1014 484 JUMP ~[] destination: B58 -> B60  <||@
  Comment 1021 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1046 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1074 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1079 [rbx:0, rsi:0, r9:0, r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |r11|DWORD  |rcx|DWORD  |-   <||@
  Comment 1109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1114 [rax:0, rdx:0, rbx:0, rbp:0, r9:0, r10:0, r13:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |r13|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 1144 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1149 [rax:0, rdx:0, rbx:0, rbp:0, rdi:0, r9:0, r10:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |r11|DWORD  |rbp|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |r11|DWORD  |-  |rcx|DWORD   <||@
  Comment 1157 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1157 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1163 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1163 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
