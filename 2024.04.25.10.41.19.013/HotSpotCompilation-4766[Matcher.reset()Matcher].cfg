begin_compilation
  name " HotSpotCompilation-4766[java.util.regex.Matcher.reset()]"
  method "HotSpotCompilation-4766[java.util.regex.Matcher.reset()]"
  date 1714038095879
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a744 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a744  <|@  <|@
f <@~|@floating>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 v801 v802 v803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a144 
index: - 
=== Succesors ===
=== Usages ===
a744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a744 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v803 
lastLocationAccess: - 
=== Succesors ===
next: a745 
=== Usages ===
v799 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v803 lastLocationAccess: - #next: a745  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a144 
index: - 
=== Succesors ===
=== Usages ===
a745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a745 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v802 
lastLocationAccess: - 
=== Succesors ===
next: a746 
=== Usages ===
v798 
=== Predecessor ===
a744 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v802 lastLocationAccess: - #next: a746  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v804 v824 v805 v818 v806 ?10 v815 v807 ?122 v823 v76 v817 v811 ?138 v819 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a746 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v807 
lastLocationAccess: - 
=== Succesors ===
next: a747 
=== Usages ===
a173 v808 v809 
=== Predecessor ===
a745 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v807 lastLocationAccess: - #next: a747  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a144 
index: - 
=== Succesors ===
=== Usages ===
a747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v800 
lastLocationAccess: - 
=== Succesors ===
next: a748 
=== Usages ===
v796 
=== Predecessor ===
a746 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v800 lastLocationAccess: - #next: a748  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a144 
index: - 
=== Succesors ===
=== Usages ===
a748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a748 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
lastLocationAccess: - 
=== Succesors ===
next: a749 
=== Usages ===
v797 
=== Predecessor ===
a747 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v801 lastLocationAccess: - #next: a749  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a749 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.locals
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v811 
lastLocationAccess: - 
=== Succesors ===
next: a750 
=== Usages ===
a203 v812 v813 
=== Predecessor ===
a748 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v811 lastLocationAccess: - #next: a750  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a750 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 1]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v819 
lastLocationAccess: - 
=== Succesors ===
next: a751 
=== Usages ===
v847 v820 v822 
=== Predecessor ===
a749 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v819 lastLocationAccess: - #next: a751  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a751 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 67]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v815 
lastLocationAccess: - 
=== Succesors ===
next: i752 
=== Usages ===
v816 
=== Predecessor ===
a750 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v815 lastLocationAccess: - #next: i752  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i752 v262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i752 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 118]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v824 
lastLocationAccess: - 
=== Succesors ===
next: j740 
=== Usages ===
i73 
=== Predecessor ===
a751 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v824 lastLocationAccess: - #next: j740  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
displacement: 38144
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
v94 j740 v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j740 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
lastLocationAccess: - 
=== Succesors ===
next: v742 
=== Usages ===
j734 j738 
=== Predecessor ===
i752 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 lastLocationAccess: - #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 49
stableDimension: 0
stamp: i32
stampKind: i32
value: int[49|0x31]
=== Inputs ===
=== Succesors ===
=== Usages ===
j734 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j734 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j740 
y: i733 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j740 y: i733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
lastLocationAccess: - 
value: j734 
stateAfter: - 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
j740 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v799 lastLocationAccess: - value: j734 stateAfter: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
displacement: 38144
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a745 
=== Succesors ===
=== Usages ===
v94 v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a745  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j740 
y: i737 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j740 y: i737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
lastLocationAccess: - 
value: j738 
stateAfter: - 
=== Succesors ===
next: i753 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v798 lastLocationAccess: - value: j738 stateAfter: - #next: i753  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 448
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i753 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a746 
=== Succesors ===
=== Usages ===
i753 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i753 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-44811|0xffffffffffff50f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 22]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v808 
lastLocationAccess: - 
=== Succesors ===
next: v94 
=== Usages ===
i411 v301 v181 j292 i323 i672 v390 v410 
=== Predecessor ===
v743 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v808 lastLocationAccess: - #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
displacement: 38144
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a747 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a747  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
displacement: 38144
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a748 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v796 v797 v798 v799 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
i753 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v796 v797 v798 v799 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 v169 v198 v223 v189 v214 i323 i327 v381 v401 v424 v444 v467 v487 v509 v516 v531 v538 v557 v564 v571 v577 v601 v608 v615 v621 v629 v635 v641 v647 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v804 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v804 lastLocationAccess: - value: i3 stateAfter: - #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 v181 v210 v78 v236 v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v805 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v805 lastLocationAccess: - value: i6 stateAfter: - #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v806 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v806 lastLocationAccess: - value: i3 stateAfter: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i753 
y: i6 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i753 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 i46 i73 i123 i139 i437 i394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i411 i454 v301 v315 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.0476382052030746
stamp: void
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
v189 
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i753 
y: i3 
=== Succesors ===
=== Usages ===
j299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i753 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j299 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i323 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i323  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i753 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j299 
y: j292 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j299 y: j292  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v719 #falseSuccessor: v722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i753 
y: i185 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i753 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v720 #falseSuccessor: v335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v717 v718 
=== Succesors ===
next: v189 
=== Usages ===
v306 v404 v384 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v717 v718 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a746 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v111 
address: v809 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v111 address: v809 lastLocationAccess: - value: i3 stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i753 
y: i83 
=== Succesors ===
=== Usages ===
i411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i753 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v410 
trueValue: i753 
falseValue: i185 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v410 trueValue: i753 falseValue: i185  <|@  <|@
f <@~|@floating>@ <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a746 
=== Succesors ===
=== Usages ===
v846 v845 v844 v810 v825 v826 v829 v831 v832 v835 v836 v837 v838 v839 v840 v841 v842 v843 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a746  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i27 i28 
=== Succesors ===
=== Usages ===
i28 v18 v810 i376 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v13 values: i27 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.991554902984884
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v12 
=== Succesors ===
next: v23 
=== Usages ===
i123 v20 v29 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v12 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i411 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i123 y: i411  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v22 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
v306 
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v716 v22 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v716 v22  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: i123 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: i123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v306 
address: v810 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v306 address: v810 lastLocationAccess: - value: i3 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i123 
y: i27 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i123 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i753 
y: i671 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i753 y: i671  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v369 
values: i123 i668 
=== Succesors ===
=== Usages ===
v370 j764 v825 i396 i668 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v369 values: i123 i668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.991554902984884
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v385 
=== Succesors ===
next: v373 
=== Usages ===
v371 v375 i376 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v385 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i672 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i376 y: i672  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.19966205341981258
stamp: void
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v371 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v372 #falseSuccessor: v371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
v384 
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v716 v372 
=== Succesors ===
=== Usages ===
v647 v381 v621 v467 v641 v509 v601 v516 v635 v557 v615 v564 v629 v571 v608 v577 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v716 v372  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: i376 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: i376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v825 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v825 lastLocationAccess: - value: i3 stateAfter: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i376 
=== Succesors ===
=== Usages ===
v829 v831 v832 v835 v836 v837 v838 v839 v840 v841 v842 v843 v844 v845 v846 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i376  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v829 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v829 lastLocationAccess: - value: i3 stateAfter: - #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v831 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v831 lastLocationAccess: - value: i3 stateAfter: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v832 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v832 lastLocationAccess: - value: i3 stateAfter: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v835 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v835 lastLocationAccess: - value: i3 stateAfter: - #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v836 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v836 lastLocationAccess: - value: i3 stateAfter: - #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v837 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v837 lastLocationAccess: - value: i3 stateAfter: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v838 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v838 lastLocationAccess: - value: i3 stateAfter: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v839 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v839 lastLocationAccess: - value: i3 stateAfter: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v840 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v840 lastLocationAccess: - value: i3 stateAfter: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v841 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v841 lastLocationAccess: - value: i3 stateAfter: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v842 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v842 lastLocationAccess: - value: i3 stateAfter: - #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v843 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v843 lastLocationAccess: - value: i3 stateAfter: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v844 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v844 lastLocationAccess: - value: i3 stateAfter: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v845 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v845 lastLocationAccess: - value: i3 stateAfter: - #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v846 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v846 lastLocationAccess: - value: i3 stateAfter: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i668 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i376 
y: i653 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i376 y: i653  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v369 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v369 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v369 #next: v405  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v389 
values: i376 i394 
=== Succesors ===
=== Usages ===
v390 i394 v826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v389 values: i376 i394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.991554902984884
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v405 
=== Succesors ===
next: v393 
=== Usages ===
v391 v395 i396 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v405 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i753 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i753  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v392 #falseSuccessor: v391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
v404 
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v716 v392 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v716 v392  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: i396 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: i396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v404 
address: v826 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v404 address: v826 lastLocationAccess: - value: i3 stateAfter: - #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i396 
y: i27 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v389 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v389 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v389 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v119 v120 
=== Succesors ===
next: i754 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v119 v120 #next: i754  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v848 i754 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a749 
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-52491|0xffffffffffff32f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?122 
guard: - 
address: v812 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
i454 v315 v210 j307 i327 i675 v433 v453 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?122 guard: - address: v812 lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i6 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i754 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: PROFILED designatedSuccessorProbability: 0.14300098221444968
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
i754 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v126 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
v214 
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i754 
y: i3 
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i754 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i327 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i754 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i754  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j313 
y: j307 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j313 y: j307  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v730 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v727 #falseSuccessor: v730  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v727 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i185 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i754 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v728 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v728 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v728 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v725 v726 
=== Succesors ===
next: v214 
=== Usages ===
v320 v447 v427 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v725 v726 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a749 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v127 
address: v813 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v127 address: v813 lastLocationAccess: - value: i3 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i83 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i754 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v453 
trueValue: i754 
falseValue: i185 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v453 trueValue: i754 falseValue: i185  <|@  <|@
f <@~|@floating>@ <|@
tid a203 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a749 
=== Succesors ===
=== Usages ===
v834 v833 v830 v814 v827 v828 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a749  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i27 i46 
=== Succesors ===
=== Usages ===
i46 v37 v814 i419 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i27 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.9929589609416976
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v42 
=== Usages ===
i139 v39 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i454 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i139 y: i454  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v41 #falseSuccessor: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
v320 
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v724 v41 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v724 v41  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: i139 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: i139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v320 
address: v814 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v320 address: v814 lastLocationAccess: - value: i3 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i139 
y: i27 
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i139 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-4 - 2147483643]
=== Inputs ===
x: i754 
y: i674 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i754 y: i674  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v412 
values: i139 i544 
=== Succesors ===
=== Usages ===
v413 j792 v827 i439 i544 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v412 values: i139 i544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.9929589609416976
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v428 
=== Succesors ===
next: v416 
=== Usages ===
v414 v418 i419 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v428 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i419 
y: i675 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i419 y: i675  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.3325500765031997
stamp: void
=== Inputs ===
condition: v413 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v413 #trueSuccessor: v415 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
v427 
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v724 v415 
=== Succesors ===
=== Usages ===
v538 v424 v531 v487 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v724 v415  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: i419 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: i419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v427 
address: v827 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v427 address: v827 lastLocationAccess: - value: i3 stateAfter: - #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i419 
=== Succesors ===
=== Usages ===
v830 v833 v834 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i419  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: j792 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v427 
address: v830 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v427 address: v830 lastLocationAccess: - value: i3 stateAfter: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: j792 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v427 
address: v833 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v427 address: v833 lastLocationAccess: - value: i3 stateAfter: - #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: j792 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v427 
address: v834 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v427 address: v834 lastLocationAccess: - value: i3 stateAfter: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i419 
y: i519 
=== Succesors ===
=== Usages ===
i419 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i419 y: i519  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v412 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v412 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v412 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v432 
values: i419 i437 
=== Succesors ===
=== Usages ===
v433 i437 v828 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v432 values: i419 i437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.9929589609416976
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v448 
=== Succesors ===
next: v436 
=== Usages ===
v434 v438 i439 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v448 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i754 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i439 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v433 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v433 #trueSuccessor: v435 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
v447 
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v724 v435 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v724 v435  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: i439 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v447 
address: v828 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v447 address: v828 lastLocationAccess: - value: i3 stateAfter: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i439 
y: i27 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i439 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v432 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v432 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v136 
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v136 #next: v755  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v691 v755 i756 i758 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a750 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-62219|0xffffffffffff0cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
v715 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v847 lastLocationAccess: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v755 
y: v714 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v755 y: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v715 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v715 #trueSuccessor: v349 #falseSuccessor: v351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i756 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a751 
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a751  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i756 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-58891|0xffffffffffff19f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 70]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v816 
lastLocationAccess: - 
=== Succesors ===
next: a757 
=== Usages ===
v78 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v816 lastLocationAccess: - #next: a757  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a750 
=== Succesors ===
=== Usages ===
a757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a757 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v820 
lastLocationAccess: - 
=== Succesors ===
next: i758 
=== Usages ===
v821 
=== Predecessor ===
i756 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v820 lastLocationAccess: - #next: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a757 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-64011|0xffffffffffff05f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v821 
lastLocationAccess: - 
=== Succesors ===
next: v367 
=== Usages ===
i105 
=== Predecessor ===
a757 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v821 lastLocationAccess: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i756 
y: i6 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i756 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
i758 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v365 #falseSuccessor: v366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.lastAppendPosition
location: Matcher.lastAppendPosition
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 100]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v817 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v817 lastLocationAccess: - value: i6 stateAfter: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.from
location: Matcher.from
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:460) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v818 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: i759 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v818 lastLocationAccess: - value: i6 stateAfter: - #next: i759  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a750 
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i759 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v822 
lastLocationAccess: - 
=== Succesors ===
next: v258 
=== Usages ===
i256 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v822 lastLocationAccess: - #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i759 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i759  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i758 
y: i256 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i758 y: i256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.to
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 113]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v823 
lastLocationAccess: - 
value: i105 
stateAfter: - 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
i759 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v823 lastLocationAccess: - value: i105 stateAfter: - #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 122]
stamp: i32
=== Inputs ===
x: i752 
y: i27 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i752 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 123]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v824 
lastLocationAccess: - 
value: i73 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v824 lastLocationAccess: - value: i73 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:463) [bci: 127]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i700 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -93203
stableDimension: 0
stamp: i32 [-93203]
stampKind: i32
value: int[-93203|0xfffffffffffe93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
v366 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid j696 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -62515
stableDimension: 0
stamp: i32 [-62515]
stampKind: i32
value: int[-62515|0xffffffffffff0bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [-93203 - -62515] bits:1...1xx00xx01111x01101
valueDescription: i32
=== Inputs ===
merge: v686 
values: i695 i700 
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v686 values: i695 i700  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v686 
values: j696 j245 
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v686 values: j696 j245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v694 v699 
=== Succesors ===
next: v691 
=== Usages ===
i689 j690 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v694 v699 #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateBefore: ?138 
actionAndReason: i689 
speculation: j690 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?138 actionAndReason: i689 speculation: j690  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v848  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 217
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
reason: BoundsCheckException
speculation: {0x0000000000000818[index: 64, len: 24, hash: 0xcc192689]: GuardMovement@2[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?122 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?122  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
sourceFile: Matcher.java
sourceLine: 451
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 192
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
reason: BoundsCheckException
speculation: {0x0000000000000518[index: 40, len: 24, hash: 0xcac6f271]: GuardMovement@2[HotSpotMethod<Matcher.reset()>, 17, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?10  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a744 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a744  <|@  <|@
f <@~|@floating>@ <|@
tid a144 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 v801 v802 v803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
result [v1|QWORD[.] + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
stamp: void*
stride: S1
=== Inputs ===
base: a144 
index: - 
=== Succesors ===
=== Usages ===
a744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a744 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.CyclesBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v803 
lastLocationAccess: - 
=== Succesors ===
next: a745 
=== Usages ===
v799 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v803 lastLocationAccess: - #next: a745  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
result [v1|QWORD[.] + 116] <|@
d <@d|@=== Debug Properties ===
displacement: 116
stamp: void*
stride: S1
=== Inputs ===
base: a144 
index: - 
=== Succesors ===
=== Usages ===
a745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a745 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.ActivationCountBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v802 
lastLocationAccess: - 
=== Succesors ===
next: a746 
=== Usages ===
v798 
=== Predecessor ===
a744 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v802 lastLocationAccess: - #next: a746  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v804 v824 v805 v818 v806 ?10 v815 v807 ?122 v823 v76 v817 v811 ?138 v819 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a746 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v807 
lastLocationAccess: - 
=== Succesors ===
next: a747 
=== Usages ===
a173 v808 v809 
=== Predecessor ===
a745 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v807 lastLocationAccess: - #next: a747  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
result [v1|QWORD[.] + 124] <|@
d <@d|@=== Debug Properties ===
displacement: 124
stamp: void*
stride: S1
=== Inputs ===
base: a144 
index: - 
=== Succesors ===
=== Usages ===
a747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.Buffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v800 
lastLocationAccess: - 
=== Succesors ===
next: a748 
=== Usages ===
v796 
=== Predecessor ===
a746 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v800 lastLocationAccess: - #next: a748  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
result [v1|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a144 
index: - 
=== Succesors ===
=== Usages ===
a748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a144 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a748 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# long[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BuboCache.TimeBuffer
memoryOrder: PLAIN
stamp: n# long[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
lastLocationAccess: - 
=== Succesors ===
next: a749 
=== Usages ===
v797 
=== Predecessor ===
a747 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v801 lastLocationAccess: - #next: a749  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
result [v0|QWORD[.] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a749 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.locals
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v811 
lastLocationAccess: - 
=== Succesors ===
next: a750 
=== Usages ===
a203 v812 v813 
=== Predecessor ===
a748 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v811 lastLocationAccess: - #next: a750  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a750 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 1]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v819 
lastLocationAccess: - 
=== Succesors ===
next: a751 
=== Usages ===
v847 v820 v822 
=== Predecessor ===
a749 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v819 lastLocationAccess: - #next: a751  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
result [v0|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a751 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 67]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v815 
lastLocationAccess: - 
=== Succesors ===
next: i752 
=== Usages ===
v816 
=== Predecessor ===
a750 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v815 lastLocationAccess: - #next: i752  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i752 v262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i752 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 118]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v824 
lastLocationAccess: - 
=== Succesors ===
next: j740 
=== Usages ===
i73 
=== Predecessor ===
a751 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v824 lastLocationAccess: - #next: j740  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
result [v2|DWORD[_] * 8 + 38144] <|@
d <@d|@=== Debug Properties ===
displacement: 38144
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
v94 j740 v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j740 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: [null]
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: long
memoryOrder: [null]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
lastLocationAccess: - 
=== Succesors ===
next: v742 
=== Usages ===
j734 j738 
=== Predecessor ===
i752 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 lastLocationAccess: - #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
result int[49|0x31] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 49
stableDimension: 0
stamp: i32
stampKind: i32
value: int[49|0x31]
=== Inputs ===
=== Succesors ===
=== Usages ===
j734 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j734 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j740 
y: i733 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j740 y: i733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
lastLocationAccess: - 
value: j734 
stateAfter: - 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
j740 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v799 lastLocationAccess: - value: j734 stateAfter: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
result [v3|DWORD[_] * 8 + 38144] <|@
d <@d|@=== Debug Properties ===
displacement: 38144
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a745 
=== Succesors ===
=== Usages ===
v94 v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a745  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
x: j740 
y: i737 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j740 y: i737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: long
location: Array: long
memoryOrder: PLAIN
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
lastLocationAccess: - 
value: j738 
stateAfter: - 
=== Succesors ===
next: i753 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v798 lastLocationAccess: - value: j738 stateAfter: - #next: i753  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 448
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i753 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a746 
=== Succesors ===
=== Usages ===
i753 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i753 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-44811|0xffffffffffff50f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 22]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v808 
lastLocationAccess: - 
=== Succesors ===
next: v94 
=== Usages ===
i411 v301 v181 j292 i323 i672 v390 v410 
=== Predecessor ===
v743 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v808 lastLocationAccess: - #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
result [v5|DWORD[_] * 8 + 38144] <|@
d <@d|@=== Debug Properties ===
displacement: 38144
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a747 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a747  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
result [v6|DWORD[_] * 8 + 38144] <|@
d <@d|@=== Debug Properties ===
displacement: 38144
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a748 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
stamp: BuboVoid
=== Inputs ===
values: v796 v797 v798 v799 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
i753 >@ <|@
instruction <@ReachabilityFence|@jdk.graal.compiler.nodes.java.ReachabilityFenceNode>@ values: v796 v797 v798 v799 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 v169 v198 v223 v189 v214 i323 i327 v381 v401 v424 v444 v467 v487 v509 v516 v531 v538 v557 v564 v571 v577 v601 v608 v615 v621 v629 v635 v641 v647 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v804 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v804 lastLocationAccess: - value: i3 stateAfter: - #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 v181 v210 v78 v236 v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v805 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v805 lastLocationAccess: - value: i6 stateAfter: - #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v806 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v806 lastLocationAccess: - value: i3 stateAfter: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i753 
y: i6 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i753 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 i46 i73 i123 i139 i437 i394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i411 i454 v301 v315 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.0476382052030746
stamp: void
=== Inputs ===
condition: v181 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v181 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
v189 
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i753 
y: i3 
=== Succesors ===
=== Usages ===
j299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i753 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j299 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i323 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i323  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i753 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j299 
y: j292 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j299 y: j292  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v719 #falseSuccessor: v722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i753 
y: i185 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i753 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v720 #falseSuccessor: v335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v717 v718 
=== Succesors ===
next: v189 
=== Usages ===
v306 v404 v384 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v717 v718 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a746 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v111 
address: v809 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v111 address: v809 lastLocationAccess: - value: i3 stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i753 
y: i83 
=== Succesors ===
=== Usages ===
i411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i753 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v410 
trueValue: i753 
falseValue: i185 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v410 trueValue: i753 falseValue: i185  <|@  <|@
f <@~|@floating>@ <|@
tid a173 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a746 
=== Succesors ===
=== Usages ===
v846 v845 v844 v810 v825 v826 v829 v831 v832 v835 v836 v837 v838 v839 v840 v841 v842 v843 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a746  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i123 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i27 i28 
=== Succesors ===
=== Usages ===
i28 v18 v810 i376 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v13 values: i27 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.991554902984884
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v12 
=== Succesors ===
next: v23 
=== Usages ===
i123 v20 v29 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v12 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i411 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i123 y: i411  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v22 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
v306 
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v716 v22 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v716 v22  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
result [v19|QWORD[.] + v20|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: i123 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: i123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v306 
address: v810 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v306 address: v810 lastLocationAccess: - value: i3 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i123 
y: i27 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i123 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i753 
y: i671 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i753 y: i671  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i376 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v369 
values: i123 i668 
=== Succesors ===
=== Usages ===
v370 j764 v825 i396 i668 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v369 values: i123 i668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.991554902984884
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v385 
=== Succesors ===
next: v373 
=== Usages ===
v371 v375 i376 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v385 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i672 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i376 y: i672  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.19966205341981258
stamp: void
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v371 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v372 #falseSuccessor: v371  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
v384 
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v716 v372 
=== Succesors ===
=== Usages ===
v647 v381 v621 v467 v641 v509 v601 v516 v635 v557 v615 v564 v629 v571 v608 v577 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v716 v372  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
result [v19|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: i376 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: i376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v825 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v825 lastLocationAccess: - value: i3 stateAfter: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i376 
=== Succesors ===
=== Usages ===
v829 v831 v832 v835 v836 v837 v838 v839 v840 v841 v842 v843 v844 v845 v846 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i376  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v829 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v829 lastLocationAccess: - value: i3 stateAfter: - #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v831 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v831 lastLocationAccess: - value: i3 stateAfter: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v832 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v832 lastLocationAccess: - value: i3 stateAfter: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v835 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v835 lastLocationAccess: - value: i3 stateAfter: - #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v836 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v836 lastLocationAccess: - value: i3 stateAfter: - #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v837 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v837 lastLocationAccess: - value: i3 stateAfter: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v838 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v838 lastLocationAccess: - value: i3 stateAfter: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v839 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v839 lastLocationAccess: - value: i3 stateAfter: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v840 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v840 lastLocationAccess: - value: i3 stateAfter: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v841 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v841 lastLocationAccess: - value: i3 stateAfter: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v842 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v842 lastLocationAccess: - value: i3 stateAfter: - #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v843 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v843 lastLocationAccess: - value: i3 stateAfter: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v844 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v844 lastLocationAccess: - value: i3 stateAfter: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v845 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v845 lastLocationAccess: - value: i3 stateAfter: - #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
result [v19|QWORD[.] + v24|QWORD * 4 + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: j764 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v384 
address: v846 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v384 address: v846 lastLocationAccess: - value: i3 stateAfter: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i668 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i376 
y: i653 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i376 y: i653  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v369 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v369 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v369 #next: v405  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i396 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v389 
values: i376 i394 
=== Succesors ===
=== Usages ===
v390 i394 v826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v389 values: i376 i394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.991554902984884
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v405 
=== Succesors ===
next: v393 
=== Usages ===
v391 v395 i396 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v405 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i753 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i753  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v392 #falseSuccessor: v391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
v404 
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v716 v392 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v716 v392  <|@  <|@
f <@~|@floating>@ <|@
tid v826 <|@
result [v19|QWORD[.] + v26|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a173 
index: i396 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a173 index: i396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v404 
address: v826 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v404 address: v826 lastLocationAccess: - value: i3 stateAfter: - #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i396 
y: i27 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v389 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v389 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v389 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v119 v120 
=== Succesors ===
next: i754 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v119 v120 #next: i754  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v848 i754 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
result [v7|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a749 
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i754 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-52491|0xffffffffffff32f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?122 
guard: - 
address: v812 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
i454 v315 v210 j307 i327 i675 v433 v453 
=== Predecessor ===
v118 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?122 guard: - address: v812 lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i6 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i754 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: PROFILED designatedSuccessorProbability: 0.14300098221444968
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
i754 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v126 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
v214 
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i754 
y: i3 
=== Succesors ===
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i754 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i327 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i327  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i754 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i754  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j313 
y: j307 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j313 y: j307  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v730 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v727 #falseSuccessor: v730  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v727 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i185 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i754 y: i185  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v728 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v728 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
v728 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v725 v726 
=== Succesors ===
next: v214 
=== Usages ===
v320 v447 v427 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v725 v726 #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
result [v7|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a749 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v127 
address: v813 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v127 address: v813 lastLocationAccess: - value: i3 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@724302cf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i83 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i754 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v453 
trueValue: i754 
falseValue: i185 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v453 trueValue: i754 falseValue: i185  <|@  <|@
f <@~|@floating>@ <|@
tid a203 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a749 
=== Succesors ===
=== Usages ===
v834 v833 v830 v814 v827 v828 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a749  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i139 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i27 i46 
=== Succesors ===
=== Usages ===
i46 v37 v814 i419 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i27 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.9929589609416976
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v42 
=== Usages ===
i139 v39 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i454 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i139 y: i454  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v41 #falseSuccessor: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
v320 
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v724 v41 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v724 v41  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
result [v33|QWORD[.] + v34|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: i139 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: i139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v320 
address: v814 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v320 address: v814 lastLocationAccess: - value: i3 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i139 
y: i27 
=== Succesors ===
=== Usages ===
i139 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i139 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-4 - 2147483643]
=== Inputs ===
x: i754 
y: i674 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i754 y: i674  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i419 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v412 
values: i139 i544 
=== Succesors ===
=== Usages ===
v413 j792 v827 i439 i544 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v412 values: i139 i544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.9929589609416976
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v428 
=== Succesors ===
next: v416 
=== Usages ===
v414 v418 i419 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v428 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i419 
y: i675 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i419 y: i675  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.3325500765031997
stamp: void
=== Inputs ===
condition: v413 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v413 #trueSuccessor: v415 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
v427 
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v724 v415 
=== Succesors ===
=== Usages ===
v538 v424 v531 v487 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v724 v415  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
result [v33|QWORD[.] + v37|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: i419 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: i419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v427 
address: v827 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v427 address: v827 lastLocationAccess: - value: i3 stateAfter: - #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i419 
=== Succesors ===
=== Usages ===
v830 v833 v834 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i419  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
result [v33|QWORD[.] + v38|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: j792 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v427 
address: v830 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v427 address: v830 lastLocationAccess: - value: i3 stateAfter: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
result [v33|QWORD[.] + v38|QWORD * 4 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: j792 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v427 
address: v833 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v427 address: v833 lastLocationAccess: - value: i3 stateAfter: - #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
result [v33|QWORD[.] + v38|QWORD * 4 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: j792 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v427 
address: v834 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v427 address: v834 lastLocationAccess: - value: i3 stateAfter: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i544 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i419 
y: i519 
=== Succesors ===
=== Usages ===
i419 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i419 y: i519  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v412 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v412 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v412 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i439 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v432 
values: i419 i437 
=== Succesors ===
=== Usages ===
v433 i437 v828 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v432 values: i419 i437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.9929589609416976
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v448 
=== Succesors ===
next: v436 
=== Usages ===
v434 v438 i439 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v448 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58a12e49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i439 
y: i754 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i439 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v433 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v433 #trueSuccessor: v435 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
v447 
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v724 v435 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v724 v435  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
result [v33|QWORD[.] + v40|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a203 
index: i439 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a203 index: i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v447 
address: v828 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v447 address: v828 lastLocationAccess: - value: i3 stateAfter: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i439 
y: i27 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i439 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v432 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v432 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v136 
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v136 #next: v755  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v691 v755 i756 i758 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
result [v8|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a750 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 139647623626752 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-62219|0xffffffffffff0cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: v352 
=== Usages ===
v715 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v847 lastLocationAccess: - #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 139647623626752 shift: 0)
stampKind: Klass*(compressed base: 139647623626752 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v755 
y: v714 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v755 y: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v715 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v715 #trueSuccessor: v349 #falseSuccessor: v351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: i756 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
result [v9|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a751 
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a751  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i756 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-58891|0xffffffffffff19f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 70]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v816 
lastLocationAccess: - 
=== Succesors ===
next: a757 
=== Usages ===
v78 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v816 lastLocationAccess: - #next: a757  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
result [v8|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a750 
=== Succesors ===
=== Usages ===
a757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a757 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v820 
lastLocationAccess: - 
=== Succesors ===
next: i758 
=== Usages ===
v821 
=== Predecessor ===
i756 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v820 lastLocationAccess: - #next: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
result [v43|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a757 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i758 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-64011|0xffffffffffff05f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v821 
lastLocationAccess: - 
=== Succesors ===
next: v367 
=== Usages ===
i105 
=== Predecessor ===
a757 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v821 lastLocationAccess: - #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i756 
y: i6 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i756 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
i758 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v365 #falseSuccessor: v366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.lastAppendPosition
location: Matcher.lastAppendPosition
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 100]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v817 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v817 lastLocationAccess: - value: i6 stateAfter: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.from
location: Matcher.from
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:460) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v818 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: i759 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v818 lastLocationAccess: - value: i6 stateAfter: - #next: i759  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
result [v8|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a750 
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a750  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i759 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v822 
lastLocationAccess: - 
=== Succesors ===
next: v258 
=== Usages ===
i256 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v822 lastLocationAccess: - #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i759 
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i759  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i758 
y: i256 
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i758 y: i256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.to
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 113]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v823 
lastLocationAccess: - 
value: i105 
stateAfter: - 
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
i759 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v823 lastLocationAccess: - value: i105 stateAfter: - #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 122]
stamp: i32
=== Inputs ===
x: i752 
y: i27 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i752 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 123]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v824 
lastLocationAccess: - 
value: i73 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v824 lastLocationAccess: - value: i73 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:463) [bci: 127]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid j245 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i700 <|@
result int[-93203|0xfffffffffffe93ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -93203
stableDimension: 0
stamp: i32 [-93203]
stampKind: i32
value: int[-93203|0xfffffffffffe93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
v366 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid j696 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result int[-62515|0xffffffffffff0bcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -62515
stableDimension: 0
stamp: i32 [-62515]
stampKind: i32
value: int[-62515|0xffffffffffff0bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i689 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [-93203 - -62515] bits:1...1xx00xx01111x01101
valueDescription: i32
=== Inputs ===
merge: v686 
values: i695 i700 
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v686 values: i695 i700  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v686 
values: j696 j245 
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v686 values: j696 j245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v694 v699 
=== Succesors ===
next: v691 
=== Usages ===
i689 j690 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v694 v699 #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateBefore: ?138 
actionAndReason: i689 
speculation: j690 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?138 actionAndReason: i689 speculation: j690  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v848 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v848  <|@  <|@
f <@*|@fixed>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 217
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
reason: BoundsCheckException
speculation: {0x0000000000000818[index: 64, len: 24, hash: 0xcc192689]: GuardMovement@2[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?122 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?122  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
sourceFile: Matcher.java
sourceLine: 451
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 192
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
reason: BoundsCheckException
speculation: {0x0000000000000518[index: 40, len: 24, hash: 0xcac6f271]: GuardMovement@2[HotSpotMethod<Matcher.reset()>, 17, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[306, 308[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v45|d [0, 1[[296, 299[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 306[[310, 321[[322, 333[[334, 345[6 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 300 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [8, 18[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 46[10 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 44[12 MustHaveRegister 36 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [14, 86[14 MustHaveRegister 38 MustHaveRegister 80 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [16, 40[16 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [18, 42[18 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [20, 208[[310, 314[20 MustHaveRegister 174 MustHaveRegister 202 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [22, 294[[310, 314[22 MustHaveRegister 276 MustHaveRegister 282 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [24, 280[[310, 314[24 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [26, 302[[310, 314[26 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [28, 34[28 MustHaveRegister 30 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v11|q [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [38, 168[38 MustHaveRegister 54 MustHaveRegister 58 ShouldHaveRegister 62 ShouldHaveRegister 68 ShouldHaveRegister 82 ShouldHaveRegister 84 MustHaveRegister 104 MustHaveRegister 158 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [60, 64[60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [84, 102[84 MustHaveRegister 92 MustHaveRegister 101 LiveAtLoopEnd  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v4|d [86, 168[86 MustHaveRegister 96 MustHaveRegister 101 LiveAtLoopEnd 114 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 151 LiveAtLoopEnd 162 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v21|d [90, 98[[102, 107[92 ShouldHaveRegister 96 MustHaveRegister 98 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v20|d [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [104, 152[104 MustHaveRegister 110 MustHaveRegister 151 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v20|d [108, 148[[152, 155[110 ShouldHaveRegister 114 MustHaveRegister 116 ShouldHaveRegister 148 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [116, 146[116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [148, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v23|d [156, 164[158 ShouldHaveRegister 162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v26|d [164, 167[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [174, 266[174 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 184 ShouldHaveRegister 190 ShouldHaveRegister 204 ShouldHaveRegister 206 MustHaveRegister 226 MustHaveRegister 256 MustHaveRegister 265 LiveAtLoopEnd  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v28|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [182, 186[182 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [206, 224[206 MustHaveRegister 214 MustHaveRegister 223 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v7|d [208, 266[208 MustHaveRegister 218 MustHaveRegister 223 LiveAtLoopEnd 236 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister 249 LiveAtLoopEnd 260 MustHaveRegister 265 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v35|d [212, 220[[224, 229[214 ShouldHaveRegister 218 MustHaveRegister 220 ShouldHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v34|d [220, 223[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [226, 250[226 MustHaveRegister 232 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v34|d [230, 246[[250, 253[232 ShouldHaveRegister 236 MustHaveRegister 238 ShouldHaveRegister 246 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [238, 244[238 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v37|d [254, 262[256 ShouldHaveRegister 260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v40|d [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [280, 286[280 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [284, 298[284 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [294, 296[294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v44|d [298, 300[298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v10|d [302, 304[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [338, 340[340 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [338, 342[342 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[306, 308[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v45|d [0, 1[[296, 299[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 306[[310, 321[[322, 333[[334, 345[6 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 300 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q -1 [8, 18[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 46[10 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 44[12 MustHaveRegister 36 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [14, 86[14 MustHaveRegister 38 MustHaveRegister 80 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [16, 40[16 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d -1 [18, 42[18 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [20, 208[[310, 314[20 MustHaveRegister 174 MustHaveRegister 202 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d -1 [22, 294[[310, 314[22 MustHaveRegister 276 MustHaveRegister 282 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdi|d]" v9|d -1 [24, 280[[310, 314[24 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdx|d]" v10|d -1 [26, 302[[310, 314[26 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbp|q]" v11|q -1 [28, 34[28 MustHaveRegister 30 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r13|q]" v12|q -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v11|q [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [38, 168[38 MustHaveRegister 54 MustHaveRegister 58 ShouldHaveRegister 62 ShouldHaveRegister 68 ShouldHaveRegister 82 ShouldHaveRegister 84 MustHaveRegister 104 MustHaveRegister 158 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d v14|d [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [60, 64[60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [84, 102[84 MustHaveRegister 92 MustHaveRegister 101 LiveAtLoopEnd  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v4|d [86, 168[86 MustHaveRegister 96 MustHaveRegister 101 LiveAtLoopEnd 114 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 151 LiveAtLoopEnd 162 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d v21|d [90, 98[[102, 107[92 ShouldHaveRegister 96 MustHaveRegister 98 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v20|d [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [104, 152[104 MustHaveRegister 110 MustHaveRegister 151 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v20|d [108, 148[[152, 155[110 ShouldHaveRegister 114 MustHaveRegister 116 ShouldHaveRegister 148 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [116, 146[116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d -1 [148, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v23|d [156, 164[158 ShouldHaveRegister 162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [164, 167[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d -1 [174, 266[174 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 184 ShouldHaveRegister 190 ShouldHaveRegister 204 ShouldHaveRegister 206 MustHaveRegister 226 MustHaveRegister 256 MustHaveRegister 265 LiveAtLoopEnd  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v28|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q -1 [182, 186[182 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [206, 224[206 MustHaveRegister 214 MustHaveRegister 223 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[r9|q]" v33|q v7|d [208, 266[208 MustHaveRegister 218 MustHaveRegister 223 LiveAtLoopEnd 236 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister 249 LiveAtLoopEnd 260 MustHaveRegister 265 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v35|d [212, 220[[224, 229[214 ShouldHaveRegister 218 MustHaveRegister 220 ShouldHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d v34|d [220, 223[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [226, 250[226 MustHaveRegister 232 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d v34|d [230, 246[[250, 253[232 ShouldHaveRegister 236 MustHaveRegister 238 ShouldHaveRegister 246 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [238, 244[238 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r10|d]" v40|d v37|d [254, 262[256 ShouldHaveRegister 260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r10|d]" v41|d v40|d [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d -1 [280, 286[280 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d -1 [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rax|d]" v44|d -1 [284, 298[284 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rcx|d]" v45|d -1 [294, 296[294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d v44|d [298, 300[298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d v10|d [302, 304[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r10|d]" v48|d -1 [338, 340[340 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q -1 [338, 342[342 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[306, 308[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v45|d [0, 1[[296, 299[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 306[[310, 321[[322, 333[[334, 345[6 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 300 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q -1 [8, 18[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 46[10 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 44[12 MustHaveRegister 36 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [14, 86[14 MustHaveRegister 38 MustHaveRegister 80 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [16, 40[16 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d -1 [18, 42[18 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [20, 208[[310, 314[20 MustHaveRegister 174 MustHaveRegister 202 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d -1 [22, 294[[310, 314[22 MustHaveRegister 276 MustHaveRegister 282 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdi|d]" v9|d -1 [24, 280[[310, 314[24 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdx|d]" v10|d -1 [26, 302[[310, 314[26 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbp|q]" v11|q -1 [28, 34[28 MustHaveRegister 30 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r13|q]" v12|q -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v11|q [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [38, 168[38 MustHaveRegister 54 MustHaveRegister 58 ShouldHaveRegister 62 ShouldHaveRegister 68 ShouldHaveRegister 82 ShouldHaveRegister 84 MustHaveRegister 104 MustHaveRegister 158 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d v14|d [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [60, 64[60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [84, 102[84 MustHaveRegister 92 MustHaveRegister 101 LiveAtLoopEnd  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v4|d [86, 168[86 MustHaveRegister 96 MustHaveRegister 101 LiveAtLoopEnd 114 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 151 LiveAtLoopEnd 162 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d v21|d [90, 98[[102, 107[92 ShouldHaveRegister 96 MustHaveRegister 98 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v20|d [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [104, 152[104 MustHaveRegister 110 MustHaveRegister 151 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v20|d [108, 148[[152, 155[110 ShouldHaveRegister 114 MustHaveRegister 116 ShouldHaveRegister 148 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [116, 146[116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d -1 [148, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v23|d [156, 164[158 ShouldHaveRegister 162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [164, 167[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d -1 [174, 266[174 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 184 ShouldHaveRegister 190 ShouldHaveRegister 204 ShouldHaveRegister 206 MustHaveRegister 226 MustHaveRegister 256 MustHaveRegister 265 LiveAtLoopEnd  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v28|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q -1 [182, 186[182 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [206, 224[206 MustHaveRegister 214 MustHaveRegister 223 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[r9|q]" v33|q v7|d [208, 266[208 MustHaveRegister 218 MustHaveRegister 223 LiveAtLoopEnd 236 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister 249 LiveAtLoopEnd 260 MustHaveRegister 265 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v35|d [212, 220[[224, 229[214 ShouldHaveRegister 218 MustHaveRegister 220 ShouldHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d v34|d [220, 223[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [226, 250[226 MustHaveRegister 232 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d v34|d [230, 246[[250, 253[232 ShouldHaveRegister 236 MustHaveRegister 238 ShouldHaveRegister 246 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [238, 244[238 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r10|d]" v40|d v37|d [254, 262[256 ShouldHaveRegister 260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r10|d]" v41|d v40|d [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d -1 [280, 286[280 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d -1 [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rax|d]" v44|d -1 [284, 298[284 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rcx|d]" v45|d -1 [294, 296[294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d v44|d [298, 300[298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d v10|d [302, 304[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r10|d]" v48|d -1 [338, 340[340 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q -1 [338, 342[342 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction JUMP ~[int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[v21|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[v20|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[v25|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[v23|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[v27|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction JUMP ~[int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[v35|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[v34|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[v39|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[v37|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[v41|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[int[-93203|0xfffffffffffe93ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[int[-62515|0xffffffffffff0bcd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[306, 308[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v45|d [0, 1[[296, 299[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 6[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 306[[310, 321[[322, 333[[334, 345[6 MustHaveRegister 14 MustHaveRegister 20 MustHaveRegister 22 MustHaveRegister 24 MustHaveRegister 26 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 300 MustHaveRegister 304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rcx|q]" v1|q -1 [8, 18[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 16 MustHaveRegister 18 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [10, 46[10 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 44[12 MustHaveRegister 36 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [14, 86[14 MustHaveRegister 38 MustHaveRegister 80 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [16, 40[16 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d -1 [18, 42[18 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [20, 208[[310, 314[20 MustHaveRegister 174 MustHaveRegister 202 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d -1 [22, 294[[310, 314[22 MustHaveRegister 276 MustHaveRegister 282 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rdi|d]" v9|d -1 [24, 280[[310, 314[24 MustHaveRegister 280 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rdx|d]" v10|d -1 [26, 302[[310, 314[26 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbp|q]" v11|q -1 [28, 34[28 MustHaveRegister 30 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[r13|q]" v12|q -1 [30, 32[30 MustHaveRegister 32 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v11|q [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [38, 168[38 MustHaveRegister 54 MustHaveRegister 58 ShouldHaveRegister 62 ShouldHaveRegister 68 ShouldHaveRegister 82 ShouldHaveRegister 84 MustHaveRegister 104 MustHaveRegister 158 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[rcx|d]" v15|d v14|d [58, 60[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q -1 [60, 64[60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d -1 [84, 102[84 MustHaveRegister 92 MustHaveRegister 101 LiveAtLoopEnd  "NoSpillStore"
  v19|q QWORD "[r11|q]" v19|q v4|d [86, 168[86 MustHaveRegister 96 MustHaveRegister 101 LiveAtLoopEnd 114 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 151 LiveAtLoopEnd 162 MustHaveRegister 167 LiveAtLoopEnd  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d v21|d [90, 98[[102, 107[92 ShouldHaveRegister 96 MustHaveRegister 98 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v20|d [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [104, 152[104 MustHaveRegister 110 MustHaveRegister 151 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v20|d [108, 148[[152, 155[110 ShouldHaveRegister 114 MustHaveRegister 116 ShouldHaveRegister 148 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [116, 146[116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d -1 [148, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v23|d [156, 164[158 ShouldHaveRegister 162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [164, 167[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d -1 [174, 266[174 MustHaveRegister 176 MustHaveRegister 180 ShouldHaveRegister 184 ShouldHaveRegister 190 ShouldHaveRegister 204 ShouldHaveRegister 206 MustHaveRegister 226 MustHaveRegister 256 MustHaveRegister 265 LiveAtLoopEnd  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d v28|d [180, 182[180 MustHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q -1 [182, 186[182 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r10|q]" v31|q -1 [184, 186[184 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [206, 224[206 MustHaveRegister 214 MustHaveRegister 223 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[r9|q]" v33|q v7|d [208, 266[208 MustHaveRegister 218 MustHaveRegister 223 LiveAtLoopEnd 236 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister 249 LiveAtLoopEnd 260 MustHaveRegister 265 LiveAtLoopEnd  "NoSpillStore"
  v34|d DWORD "[r10|d]" v34|d v35|d [212, 220[[224, 229[214 ShouldHaveRegister 218 MustHaveRegister 220 ShouldHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d v34|d [220, 223[220 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rax|d]" v36|d -1 [226, 250[226 MustHaveRegister 232 MustHaveRegister 249 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d v34|d [230, 246[[250, 253[232 ShouldHaveRegister 236 MustHaveRegister 238 ShouldHaveRegister 246 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [238, 244[238 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [246, 249[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[r10|d]" v40|d v37|d [254, 262[256 ShouldHaveRegister 260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r10|d]" v41|d v40|d [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rcx|d]" v42|d -1 [280, 286[280 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rax|d]" v43|d -1 [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rax|d]" v44|d -1 [284, 298[284 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rcx|d]" v45|d -1 [294, 296[294 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d v44|d [298, 300[298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d v10|d [302, 304[302 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[r10|d]" v48|d -1 [338, 340[340 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r11|q]" v49|q -1 [338, 342[342 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [v20|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [v23|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [v26|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [v34|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [v48|DWORD, v49|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction v2|DWORD[_] = MOV [v1|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD[_] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction v5|DWORD[_] = MOV [v1|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction v6|DWORD[_] = MOV [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction v7|DWORD[_] = MOV [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction v8|DWORD[_] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction v9|DWORD[_] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction v11|QWORD = MOV [v2|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction v12|QWORD = LEA [v11|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 38144], y: v12|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction v13|QWORD = INC v11|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [v3|DWORD[_] * 8 + 38144], y: v13|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v14|DWORD = MOV [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [v5|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [v6|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [v3|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [v2|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction v15|DWORD = DEC v14|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction v17|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH v14|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [v4|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP v14|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction v18|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v14|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v20|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [v19|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction v22|DWORD = LEA [v14|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v23|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [v19|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction v24|QWORD = MOVSXD v23|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [v19|QWORD[.] + v24|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction v25|DWORD = LEA [v23|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v14|DWORD, y: v26|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [v19|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction v27|DWORD = INC v26|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v28|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction v29|DWORD = DEC v28|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction v31|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH v28|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [v7|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP v28|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction v32|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v28|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v32|DWORD, y: v34|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [v33|QWORD[.] + v34|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction v35|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction v36|DWORD = LEA [v28|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: v36|DWORD, y: v37|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [v33|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction v38|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [v33|QWORD[.] + v38|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction v39|DWORD = LEA [v37|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v40|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction v41|DWORD = INC v40|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [v8|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v42|DWORD = MOV [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction v43|DWORD[_] = MOV [v8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: v42|DWORD, y: v42|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction v45|DWORD = MOVSXB [v8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = SHR (x: v44|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v46|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction v47|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [v0|QWORD[.] + 44], y: v47|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v48|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v49|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753331993615078
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594320173652252309
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026209938231744
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0, r9:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B16" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache] <|@ <|@
      nr   10  <|@ instruction rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD <|@ <|@
      nr   30  <|@ instruction r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction rbp|QWORD = INC rbp|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction BLACKHOLE [r8|DWORD[_] * 8 + 38144] <|@ <|@
      nr   42  <|@ instruction BLACKHOLE [rcx|DWORD[_] * 8 + 38144] <|@ <|@
      nr   44  <|@ instruction BLACKHOLE [r10|DWORD[_] * 8 + 38144] <|@ <|@
      nr   46  <|@ instruction BLACKHOLE [rax|DWORD[_] * 8 + 38144] <|@ <|@
      nr   48  <|@ instruction MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = DEC rbp|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602249732366244580
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753331993615076
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr   84  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<| <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699068212302675
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839979594103346
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B0" 
    successors "B32" "B18" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0, r9:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  176  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" "B38" 
    xhandlers
    flags 
    probability 4601390780832217693
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  204  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  206  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  220  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B16" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  282  <|@ instruction rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  286  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  304  <|@ instruction MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753331993615077
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699068212302676
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  164  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" 
    successors "B14" "B16" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839979594103347
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728021990915886
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD <|@ <|@
      nr  148  <|@ instruction rax|DWORD = LEA [rax|DWORD + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037875609363800
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605894380459588189
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576143786412527718
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  262  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" 
    successors "B30" "B32" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605972351781954975
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601363605375470198
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD <|@ <|@
      nr  244  <|@ instruction MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = LEA [r10|DWORD + 4] size: DWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B29" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608461395994193868
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  232  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction MOV [r15|QWORD + 1156] y: -55579 size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd] // MoveResolver resolve mapping <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed] // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction MOV [r15|QWORD + 1156] y: -49179 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  320  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000003f027f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f859503000048896c241048b9addeaddeaddeadde8b4178448b5174448b5e38448b417c8b4970448b4e408b5e3c8b7e448b562c488b2cc5009500004c8d6d314c892cc50095000048ffc54a892cd500950000428b2cdd0c000000c7461cffffffffc7462000000000c74624ffffffff85ed0f84690000008bcdffc94863c98bc5483bc10f870900000083fd020f83e502000042c704dd10000000ffffffff83fd03b9020000000f42cd49c1e303b801000000e91f0000006666660f1f840000000000666666900f1f44000041c7448310ffffffffffc03bc80f8eec000000ebeb428b0ccd0c00000085c90f84720000008bc1ffc84863c0448bd14c3bd00f870900000083f9020f831102000042c704cd10000000ffffffff83f903b8020000000f42c149c1e10341ba01000000e9250000006666660f1f8400000000006666669066660f1f84000000000043c7449110ffffffff41ffc2413bc20f8e4e010000ebe9813cdd08000000addeadde0f85cd0100008b0cfd0c0000008b04dd140000008b04c50c00000085c90f85d8010000c7462800000000c7460c000000000fbe0cdd10000000d3e8894610ffc289562c488bc6488b6c24104883c418493ba7500400000f87e1010000c38d4df0e9cf0000006666660f1f8400000000006666669066660f1f84000000000041c7448310ffffffffffc00f1f4400003be80f8eddfeffffebe6660f1f44000041c7448310ffffffff4c63d043c7449314ffffffff43c7449318ffffffff43c744931cffffffff43c7449320ffffffff43c7449324ffffffff43c7449328ffffffff43c744932cffffffff43c7449330ffffffff43c7449334ffffffff43c7449338ffffffff43c744933cffffffff43c7449340ffffffff43c7449344ffffffff43c7449348ffffffff43c744934cffffffff8d40103bc80f8e52ffffffe95dffffff8d41fce9600000006666660f1f84000000000066666690660f1f44000043c7449110ffffffff41ffc20f1f4000413bca0f8e7efeffffebe50f1f44000043c7449110ffffffff4d63da43c7449914ffffffff43c7449918ffffffff43c744991cffffffff458d5204413bc27ec0ebce41c78784040000e526ffff49c7879004000018080000e8000000000f1f84000000000049c7c39402000041bacd0bffff458997840400004d899f90040000e8000000000f1f84000000000049c7c31400000041baed93feffebd641c78784040000e53fffff49c7879004000018050000e8000000000f1f84000000000048896c2410e800000000e95cfcfffff4488d0d0bfeffff49898f68040000e90efcfffff441c78784040000f550ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f532ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f50cffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f519ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f505ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD  <||@
  Comment 63 8 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 63 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 73 10 rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD  <||@
  Comment 76 12 r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD  <||@
  Comment 80 14 r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 84 16 r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD  <||@
  Comment 88 18 rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD  <||@
  Comment 91 20 r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD  <||@
  Comment 95 22 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 98 24 rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 101 26 rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 104 28 rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD  <||@
  Comment 112 30 r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD  <||@
  Comment 116 32 MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD  <||@
  Comment 124 34 rbp|QWORD = INC rbp|QWORD size: QWORD  <||@
  Comment 127 36 MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD  <||@
  Comment 135 38 rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 135 [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 135 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 143 40 BLACKHOLE [r8|DWORD[_] * 8 + 38144]  <||@
  Comment 143 42 BLACKHOLE [rcx|DWORD[_] * 8 + 38144]  <||@
  Comment 143 44 BLACKHOLE [r10|DWORD[_] * 8 + 38144]  <||@
  Comment 143 46 BLACKHOLE [rax|DWORD[_] * 8 + 38144]  <||@
  Comment 143 48 MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 150 50 MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD  <||@
  Comment 157 52 MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 164 54 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 172 block B2 null  <||@
  Comment 172 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 58 rcx|DWORD = DEC rbp|DWORD size: DWORD  <||@
  Comment 176 60 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 179 62 rax|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 181 64 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 190 block B4 null  <||@
  Comment 190 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 68 CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null  <||@
  Comment 199 block B6 null  <||@
  Comment 199 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 199 80 MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 211 82 CMP rbp|DWORD y: 3 size: DWORD  <||@
  Comment 214 84 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<|  <||@
  Comment 222 86 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3  <||@
  Comment 226 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 231 88 JUMP ~[] destination: B6 -> B7  <||@
  Comment 236 block B8 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 236 94 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 96 MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 265 98 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 267 100 JUMP ~[] destination: B8 -> B7  <||@
  Comment 267 block B7 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 267 90 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 267 92 CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 277 block B16 null  <||@
  Comment 277 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 277 174 rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39]  <||@
  Comment 277 [rbx:0, rsi:0, rdi:0, r9:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 277 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 285 176 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 293 block B18 null  <||@
  Comment 293 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 293 180 rax|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 297 182 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 300 184 r10|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 303 186 CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 312 block B20 null  <||@
  Comment 312 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 312 190 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null  <||@
  Comment 321 block B22 null  <||@
  Comment 321 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 321 202 MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 333 204 CMP rcx|DWORD y: 3 size: DWORD  <||@
  Comment 336 206 rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<|  <||@
  Comment 344 208 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3  <||@
  Comment 348 -1 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 354 210 JUMP ~[] destination: B22 -> B23  <||@
  Comment 359 block B24 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 359 216 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 218 MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 393 220 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 396 222 JUMP ~[] destination: B24 -> B23  <||@
  Comment 396 block B23 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 396 212 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 396 214 CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 407 block B32 null  <||@
  Comment 407 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 407 276 CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63]  <||@
  Comment 407 [rbx:0, rsi:0, rdi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 407 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 407 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 424 block B33 null  <||@
  Comment 424 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 280 rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 424 [rbx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 424 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 431 282 rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 438 284 rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 438 [rbx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 438 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 445 286 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 453 block B34 null  <||@
  Comment 453 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 453 290 MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 460 292 MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 467 294 rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 475 298 rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 477 300 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 480 302 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 482 304 MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD  <||@
  Comment 485 306 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 488 308 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 497 POLL_RETURN_FAR  <||@
  Comment 511 block B9 null  <||@
  Comment 511 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 511 104 rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD  <||@
  Comment 514 106 JUMP ~[] destination: B9 -> B10  <||@
  Comment 519 block B14 loop 2 depth 1 header:389|LoopBegin  <||@
  Comment 519 160 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 162 MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 553 164 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 555 166 JUMP ~[] destination: B14 -> B13  <||@
  Comment 555 block B13 loop 2 depth 1 header:389|LoopBegin  <||@
  Comment 555 156 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 560 158 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD  <||@
  Comment 570 block B11 loop 1 depth 1 header:369|LoopBegin  <||@
  Comment 570 112 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 114 MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 585 116 r10|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 588 118 MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 597 120 MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 606 122 MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 615 124 MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD  <||@
  Comment 624 126 MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD  <||@
  Comment 633 128 MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD  <||@
  Comment 642 130 MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD  <||@
  Comment 651 132 MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD  <||@
  Comment 660 134 MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD  <||@
  Comment 669 136 MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD  <||@
  Comment 678 138 MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD  <||@
  Comment 687 140 MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD  <||@
  Comment 696 142 MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD  <||@
  Comment 705 144 MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD  <||@
  Comment 714 146 MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD  <||@
  Comment 723 148 rax|DWORD = LEA [rax|DWORD + 16] size: DWORD  <||@
  Comment 726 150 JUMP ~[] destination: B11 -> B10  <||@
  Comment 726 block B10 loop 1 depth 1 header:369|LoopBegin  <||@
  Comment 726 108 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 726 110 CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD  <||@
  Comment 739 block B25 null  <||@
  Comment 739 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 739 226 rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD  <||@
  Comment 742 228 JUMP ~[] destination: B25 -> B26  <||@
  Comment 747 block B30 loop 5 depth 1 header:432|LoopBegin  <||@
  Comment 747 258 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 260 MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 777 262 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 780 264 JUMP ~[] destination: B30 -> B29  <||@
  Comment 780 block B29 loop 5 depth 1 header:432|LoopBegin  <||@
  Comment 780 254 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 784 256 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD  <||@
  Comment 795 block B27 loop 4 depth 1 header:412|LoopBegin  <||@
  Comment 795 234 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 800 236 MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 809 238 r11|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 812 240 MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 821 242 MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 830 244 MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 839 246 r10|DWORD = LEA [r10|DWORD + 4] size: DWORD  <||@
  Comment 843 248 JUMP ~[] destination: B27 -> B26  <||@
  Comment 843 block B26 loop 4 depth 1 header:412|LoopBegin  <||@
  Comment 843 230 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 843 232 CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD  <||@
  Comment 850 block B38 null  <||@
  Comment 850 326 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 850 328 MOV [r15|QWORD + 1156] y: -55579 size: DWORD  <||@
  Comment 861 330 MOV [r15|QWORD + 1168] y: 2072 size: QWORD  <||@
  Comment 872 332 DEOPT info [bci:39]  <||@
  Comment 872 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 877 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 885 block B36 null  <||@
  Comment 885 334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 885 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 892 -1 r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd]  <||@
  Comment 898 336 JUMP ~[] destination: B36 -> B37  <||@
  Comment 898 block B37 null  <||@
  Comment 898 338 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 898 340 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 905 342 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 912 344 DEOPT info [bci:63]  <||@
  Comment 912 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 917 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 925 block B35 null  <||@
  Comment 925 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 925 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 932 -1 r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed]  <||@
  Comment 938 324 JUMP ~[] destination: B35 -> B37  <||@
  Comment 940 block B39 null  <||@
  Comment 940 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 940 316 MOV [r15|QWORD + 1156] y: -49179 size: DWORD  <||@
  Comment 951 318 MOV [r15|QWORD + 1168] y: 1304 size: QWORD  <||@
  Comment 962 320 DEOPT info [bci:15]  <||@
  Comment 962 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 967 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 980 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1005 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1033 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1038 [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1068 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1073 [rbx:0, rsi:0, rdi:0, r9:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1103 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1108 [rbx:0, rsi:0, rdi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1138 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1143 [rbx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1173 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1178 [rbx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1186 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1186 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1192 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1192 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4766[java.util.regex.Matcher.reset()]"
  method "HotSpotCompilation-4766[java.util.regex.Matcher.reset()]"
  date 1714038097947
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f02aba84e20 448b560849bc0000003f027f00004d03d44d33e4493bc20f85430210ff66669089842400c0feff4883ec189041817f20000000000f859503000048896c241048b9d88c5e2e060000008b4178448b5174448b5e38448b417c8b4970448b4e408b5e3c8b7e448b562c488b2cc5009500004c8d6d314c892cc50095000048ffc54a892cd500950000428b2cdd0c000000c7461cffffffffc7462000000000c74624ffffffff85ed0f84690000008bcdffc94863c98bc5483bc10f870900000083fd020f83e502000042c704dd10000000ffffffff83fd03b9020000000f42cd49c1e303b801000000e91f0000006666660f1f840000000000666666900f1f44000041c7448310ffffffffffc03bc80f8eec000000ebeb428b0ccd0c00000085c90f84720000008bc1ffc84863c0448bd14c3bd00f870900000083f9020f831102000042c704cd10000000ffffffff83f903b8020000000f42c149c1e10341ba01000000e9250000006666660f1f8400000000006666669066660f1f84000000000043c7449110ffffffff41ffc2413bc20f8e4e010000ebe9813cdd08000000d8e800000f85cd0100008b0cfd0c0000008b04dd140000008b04c50c00000085c90f85d8010000c7462800000000c7460c000000000fbe0cdd10000000d3e8894610ffc289562c488bc6488b6c24104883c418493ba7500400000f87e1010000c38d4df0e9cf0000006666660f1f8400000000006666669066660f1f84000000000041c7448310ffffffffffc00f1f4400003be80f8eddfeffffebe6660f1f44000041c7448310ffffffff4c63d043c7449314ffffffff43c7449318ffffffff43c744931cffffffff43c7449320ffffffff43c7449324ffffffff43c7449328ffffffff43c744932cffffffff43c7449330ffffffff43c7449334ffffffff43c7449338ffffffff43c744933cffffffff43c7449340ffffffff43c7449344ffffffff43c7449348ffffffff43c744934cffffffff8d40103bc80f8e52ffffffe95dffffff8d41fce9600000006666660f1f84000000000066666690660f1f44000043c7449110ffffffff41ffc20f1f4000413bca0f8e7efeffffebe50f1f44000043c7449110ffffffff4d63da43c7449914ffffffff43c7449918ffffffff43c744991cffffffff458d5204413bc27ec0ebce41c78784040000e526ffff49c7879004000018080000e8ed5f10ff0f1f84000000000049c7c39402000041bacd0bffff458997840400004d899f90040000e8c55f10ff0f1f84000000000049c7c31400000041baed93feffebd641c78784040000e53fffff49c7879004000018050000e8935f10ff0f1f84000000000048896c2410e827600effe95cfcfffff4488d0d0bfeffff49898f68040000e9ee6d10fff441c78784040000f550ffff49c7879004000000000000e84c5f10ff0f1f84000000000041c78784040000f532ffff49c7879004000000000000e8295f10ff0f1f84000000000041c78784040000f50cffff49c7879004000000000000e8065f10ff0f1f84000000000041c78784040000f519ffff49c7879004000000000000e8e35e10ff0f1f84000000000041c78784040000f505ffff49c7879004000000000000e8c05e10ff0f1f840000000000e8392424fff4e8535c10fff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f02c54335c8, value=139649430868096]:0x7f02aab85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@622c628d slotKind: QWORD  <||@
  Comment 63 8 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]  <||@
  Comment 63 {Object[Class:jdk.graal.compiler.hotspot.meta.Bubo.BuboCache]}  <||@
  Comment 73 10 rax|DWORD[_] = MOV [rcx|QWORD[.] + 120] size: DWORD  <||@
  Comment 76 12 r10|DWORD[_] = MOV [rcx|QWORD[.] + 116] size: DWORD  <||@
  Comment 80 14 r11|DWORD[_] = MOV [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 84 16 r8|DWORD[_] = MOV [rcx|QWORD[.] + 124] size: DWORD  <||@
  Comment 88 18 rcx|DWORD[_] = MOV [rcx|QWORD[.] + 112] size: DWORD  <||@
  Comment 91 20 r9|DWORD[_] = MOV [rsi|QWORD[.] + 64] size: DWORD  <||@
  Comment 95 22 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 98 24 rdi|DWORD[_] = MOV [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 101 26 rdx|DWORD = MOV [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 104 28 rbp|QWORD = MOV [rax|DWORD[_] * 8 + 38144] size: QWORD  <||@
  Comment 112 30 r13|QWORD = LEA [rbp|QWORD + 49] size: QWORD  <||@
  Comment 116 32 MOV (x: [rax|DWORD[_] * 8 + 38144], y: r13|QWORD) size: QWORD  <||@
  Comment 124 34 rbp|QWORD = INC rbp|QWORD size: QWORD  <||@
  Comment 127 36 MOV (x: [r10|DWORD[_] * 8 + 38144], y: rbp|QWORD) size: QWORD  <||@
  Comment 135 38 rbp|DWORD = MOV [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 135 [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 135 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 143 40 BLACKHOLE [r8|DWORD[_] * 8 + 38144]  <||@
  Comment 143 42 BLACKHOLE [rcx|DWORD[_] * 8 + 38144]  <||@
  Comment 143 44 BLACKHOLE [r10|DWORD[_] * 8 + 38144]  <||@
  Comment 143 46 BLACKHOLE [rax|DWORD[_] * 8 + 38144]  <||@
  Comment 143 48 MOV [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 150 50 MOV [rsi|QWORD[.] + 32] y: 0 size: DWORD  <||@
  Comment 157 52 MOV [rsi|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 164 54 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0476382052030746 condition: = trueDestination: B0 -> B16 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 172 block B2 null  <||@
  Comment 172 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 58 rcx|DWORD = DEC rbp|DWORD size: DWORD  <||@
  Comment 176 60 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 179 62 rax|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 181 64 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 190 block B4 null  <||@
  Comment 190 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 68 CMPCONSTBRANCH rbp|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B6 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null  <||@
  Comment 199 block B6 null  <||@
  Comment 199 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 199 80 MOV [r11|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 211 82 CMP rbp|DWORD y: 3 size: DWORD  <||@
  Comment 214 84 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rbp|DWORD) condition: |<|  <||@
  Comment 222 86 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3  <||@
  Comment 226 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 231 88 JUMP ~[] destination: B6 -> B7  <||@
  Comment 236 block B8 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 236 94 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 96 MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 265 98 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 267 100 JUMP ~[] destination: B8 -> B7  <||@
  Comment 267 block B7 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 267 90 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 267 92 CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 277 block B16 null  <||@
  Comment 277 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 277 174 rcx|DWORD = MOV [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:39]  <||@
  Comment 277 [rbx:0, rsi:0, rdi:0, r9:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 277 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 285 176 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.14300098221444968 condition: = trueDestination: B16 -> B32 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 293 block B18 null  <||@
  Comment 293 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 293 180 rax|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 297 182 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 300 184 r10|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 303 186 CMPBRANCH (x: r10|QWORD, y: rax|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B22 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 312 block B20 null  <||@
  Comment 312 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 312 190 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B22 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null  <||@
  Comment 321 block B22 null  <||@
  Comment 321 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 321 202 MOV [r9|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 333 204 CMP rcx|DWORD y: 3 size: DWORD  <||@
  Comment 336 206 rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<|  <||@
  Comment 344 208 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2bf941cc encoding: base: 0 shift: 3  <||@
  Comment 348 -1 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 354 210 JUMP ~[] destination: B22 -> B23  <||@
  Comment 359 block B24 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 359 216 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 218 MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 393 220 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 396 222 JUMP ~[] destination: B24 -> B23  <||@
  Comment 396 block B23 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 396 212 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 396 214 CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 407 block B32 null  <||@
  Comment 407 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 407 276 CMPCONSTBRANCH [rbx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63]  <||@
  Comment 407 [rbx:0, rsi:0, rdi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 407 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 407 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 424 block B33 null  <||@
  Comment 424 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 280 rcx|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 424 [rbx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 424 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 431 282 rax|DWORD[_] = MOV [rbx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 438 284 rax|DWORD = MOV [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 438 [rbx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 438 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 445 286 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 453 block B34 null  <||@
  Comment 453 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 453 290 MOV [rsi|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 460 292 MOV [rsi|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 467 294 rcx|DWORD = MOVSXB [rbx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 475 298 rax|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 477 300 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 480 302 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 482 304 MOV (x: [rsi|QWORD[.] + 44], y: rdx|DWORD) size: DWORD  <||@
  Comment 485 306 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 488 308 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@285aeac6  <||@
  Comment 497 POLL_RETURN_FAR  <||@
  Comment 511 block B9 null  <||@
  Comment 511 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 511 104 rcx|DWORD = LEA [rbp|DWORD - 16] size: DWORD  <||@
  Comment 514 106 JUMP ~[] destination: B9 -> B10  <||@
  Comment 519 block B14 loop 2 depth 1 header:389|LoopBegin  <||@
  Comment 519 160 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 544 162 MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 553 164 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 555 166 JUMP ~[] destination: B14 -> B13  <||@
  Comment 555 block B13 loop 2 depth 1 header:389|LoopBegin  <||@
  Comment 555 156 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 560 158 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 size: DWORD  <||@
  Comment 570 block B11 loop 1 depth 1 header:369|LoopBegin  <||@
  Comment 570 112 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 114 MOV [r11|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 585 116 r10|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 588 118 MOV [r11|QWORD[.] + r10|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 597 120 MOV [r11|QWORD[.] + r10|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 606 122 MOV [r11|QWORD[.] + r10|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 615 124 MOV [r11|QWORD[.] + r10|QWORD * 4 + 32] y: -1 size: DWORD  <||@
  Comment 624 126 MOV [r11|QWORD[.] + r10|QWORD * 4 + 36] y: -1 size: DWORD  <||@
  Comment 633 128 MOV [r11|QWORD[.] + r10|QWORD * 4 + 40] y: -1 size: DWORD  <||@
  Comment 642 130 MOV [r11|QWORD[.] + r10|QWORD * 4 + 44] y: -1 size: DWORD  <||@
  Comment 651 132 MOV [r11|QWORD[.] + r10|QWORD * 4 + 48] y: -1 size: DWORD  <||@
  Comment 660 134 MOV [r11|QWORD[.] + r10|QWORD * 4 + 52] y: -1 size: DWORD  <||@
  Comment 669 136 MOV [r11|QWORD[.] + r10|QWORD * 4 + 56] y: -1 size: DWORD  <||@
  Comment 678 138 MOV [r11|QWORD[.] + r10|QWORD * 4 + 60] y: -1 size: DWORD  <||@
  Comment 687 140 MOV [r11|QWORD[.] + r10|QWORD * 4 + 64] y: -1 size: DWORD  <||@
  Comment 696 142 MOV [r11|QWORD[.] + r10|QWORD * 4 + 68] y: -1 size: DWORD  <||@
  Comment 705 144 MOV [r11|QWORD[.] + r10|QWORD * 4 + 72] y: -1 size: DWORD  <||@
  Comment 714 146 MOV [r11|QWORD[.] + r10|QWORD * 4 + 76] y: -1 size: DWORD  <||@
  Comment 723 148 rax|DWORD = LEA [rax|DWORD + 16] size: DWORD  <||@
  Comment 726 150 JUMP ~[] destination: B11 -> B10  <||@
  Comment 726 block B10 loop 1 depth 1 header:369|LoopBegin  <||@
  Comment 726 108 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 726 110 CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19966205341981258 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: DWORD  <||@
  Comment 739 block B25 null  <||@
  Comment 739 224 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 739 226 rax|DWORD = LEA [rcx|DWORD - 4] size: DWORD  <||@
  Comment 742 228 JUMP ~[] destination: B25 -> B26  <||@
  Comment 747 block B30 loop 5 depth 1 header:432|LoopBegin  <||@
  Comment 747 258 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 260 MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 777 262 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 780 264 JUMP ~[] destination: B30 -> B29  <||@
  Comment 780 block B29 loop 5 depth 1 header:432|LoopBegin  <||@
  Comment 780 254 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 784 256 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B32 size: DWORD  <||@
  Comment 795 block B27 loop 4 depth 1 header:412|LoopBegin  <||@
  Comment 795 234 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 800 236 MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 809 238 r11|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 812 240 MOV [r9|QWORD[.] + r11|QWORD * 4 + 20] y: -1 size: DWORD  <||@
  Comment 821 242 MOV [r9|QWORD[.] + r11|QWORD * 4 + 24] y: -1 size: DWORD  <||@
  Comment 830 244 MOV [r9|QWORD[.] + r11|QWORD * 4 + 28] y: -1 size: DWORD  <||@
  Comment 839 246 r10|DWORD = LEA [r10|DWORD + 4] size: DWORD  <||@
  Comment 843 248 JUMP ~[] destination: B27 -> B26  <||@
  Comment 843 block B26 loop 4 depth 1 header:412|LoopBegin  <||@
  Comment 843 230 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 843 232 CMPBRANCH (x: rax|DWORD, y: r10|DWORD) trueDestinationProbability: 0.3325500765031997 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B29 size: DWORD  <||@
  Comment 850 block B38 null  <||@
  Comment 850 326 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 850 328 MOV [r15|QWORD + 1156] y: -55579 size: DWORD  <||@
  Comment 861 330 MOV [r15|QWORD + 1168] y: 2072 size: QWORD  <||@
  Comment 872 332 DEOPT info [bci:39]  <||@
  Comment 872 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 877 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 885 block B36 null  <||@
  Comment 885 334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 885 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 892 -1 r10|DWORD = MOVE input: int[-62515|0xffffffffffff0bcd]  <||@
  Comment 898 336 JUMP ~[] destination: B36 -> B37  <||@
  Comment 898 block B37 null  <||@
  Comment 898 338 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 898 340 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 905 342 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 912 344 DEOPT info [bci:63]  <||@
  Comment 912 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 917 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 925 block B35 null  <||@
  Comment 925 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 925 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 932 -1 r10|DWORD = MOVE input: int[-93203|0xfffffffffffe93ed]  <||@
  Comment 938 324 JUMP ~[] destination: B35 -> B37  <||@
  Comment 940 block B39 null  <||@
  Comment 940 314 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 940 316 MOV [r15|QWORD + 1156] y: -49179 size: DWORD  <||@
  Comment 951 318 MOV [r15|QWORD + 1168] y: 1304 size: QWORD  <||@
  Comment 962 320 DEOPT info [bci:15]  <||@
  Comment 962 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 967 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 980 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f02c5433598, value=139649430762016]:0x7f02aab6b220}  <||@
  Comment 1005 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f02c54335a0, value=139649430896640]:0x7f02aab8c000}  <||@
  Comment 1033 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1038 [rax:0, rcx:0, rbx:0, rsi:0, rdi:0, r8:0, r9:0, r10:0, r11:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1068 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1073 [rbx:0, rsi:0, rdi:0, r9:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1103 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1108 [rbx:0, rsi:0, rdi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1138 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1143 [rbx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1173 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f02c54335a8, value=139649430892922]:0x7f02aab8b17a}  <||@
  Comment 1178 [rbx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1186 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f02aacc7700:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1186 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1192 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f02c54335b8, value=139649430892320]:0x7f02aab8af20}  <||@
  Comment 1192 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
